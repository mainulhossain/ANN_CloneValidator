$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513546
src/jmemorize/gui/swing/frames/MainFrame.java 310 315
src/jmemorize/gui/swing/panels/QuizPanel.java 179 184
----------------------------------------
    {
        m_deck = level;
        
        m_deckTablePanel.setDeck(level);
        m_deckChartPanel.setDeck(level);
    }

----------------------------------------
    {
        m_session = session;
        session.addObserver(this);
        
        m_session.getCategory().addObserver(this);
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513547
src/jmemorize/gui/swing/panels/CardSidePanel.java 274 281
src/jmemorize/gui/swing/panels/QuizPanel.java 205 214
----------------------------------------
    {
        initComponents();
        setupTabBehavior();
        setupShiftBavior();
        updateImage();
        
        setImageMode(Mode.TEXT);
    }

----------------------------------------
    {
        m_currentCard = card;
        m_showFlipped = flipped;
        
        updateFonts();
        updateCardSidePanels();
        updateCategoryField();
        
        showQuestion();
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513548
src/jmemorize/core/Main.java 515 522
src/jmemorize/core/Main.java 525 532
----------------------------------------
    {
        lesson.getRootCategory().addObserver(this);
        
        for (LessonObserver observer : m_lessonObservers)
        {
            observer.lessonLoaded(lesson);
        }
    }

----------------------------------------
    {
        lesson.getRootCategory().removeObserver(this);
        
        for (LessonObserver observer : m_lessonObservers)
        {
            observer.lessonClosed(lesson);
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513549
src/jmemorize/core/Main.java 525 532
src/jmemorize/util/RecentItems.java 99 106
----------------------------------------
    {
        lesson.getRootCategory().removeObserver(this);
        
        for (LessonObserver observer : m_lessonObservers)
        {
            observer.lessonClosed(lesson);
        }
    }

----------------------------------------
    {
        for (RecentItemsObserver observer : m_observers)
        {
            observer.onRecentItemChange(this);
        }
        
        storeToPreferences();
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513596
src/jmemorize/core/Main.java 515 522
src/jmemorize/util/RecentItems.java 99 106
----------------------------------------
    {
        lesson.getRootCategory().addObserver(this);
        
        for (LessonObserver observer : m_lessonObservers)
        {
            observer.lessonLoaded(lesson);
        }
    }

----------------------------------------
    {
        for (RecentItemsObserver observer : m_observers)
        {
            observer.onRecentItemChange(this);
        }
        
        storeToPreferences();
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513550
src/jmemorize/core/Main.java 515 522
src/jmemorize/core/Main.java 535 543
----------------------------------------
    {
        lesson.getRootCategory().addObserver(this);
        
        for (LessonObserver observer : m_lessonObservers)
        {
            observer.lessonLoaded(lesson);
        }
    }

----------------------------------------
    {
        if (lesson.canSave())
        {
            for (LessonObserver observer : m_lessonObservers)
            {
                observer.lessonModified(lesson);
            }
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513551
src/jmemorize/util/RecentItems.java 99 106
src/jmemorize/core/Main.java 535 543
----------------------------------------
    {
        for (RecentItemsObserver observer : m_observers)
        {
            observer.onRecentItemChange(this);
        }
        
        storeToPreferences();
    }

----------------------------------------
    {
        if (lesson.canSave())
        {
            for (LessonObserver observer : m_lessonObservers)
            {
                observer.lessonModified(lesson);
            }
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513553
src/jmemorize/core/Main.java 525 532
src/jmemorize/core/Main.java 535 543
----------------------------------------
    {
        lesson.getRootCategory().removeObserver(this);
        
        for (LessonObserver observer : m_lessonObservers)
        {
            observer.lessonClosed(lesson);
        }
    }

----------------------------------------
    {
        if (lesson.canSave())
        {
            for (LessonObserver observer : m_lessonObservers)
            {
                observer.lessonModified(lesson);
            }
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513552
src/jmemorize/core/Main.java 535 543
src/jmemorize/core/Main.java 296 315
----------------------------------------
    {
        if (lesson.canSave())
        {
            for (LessonObserver observer : m_lessonObservers)
            {
                observer.lessonModified(lesson);
            }
        }
    }

----------------------------------------
    {
        m_runningSessions--;
        
        if (session.isRelevant())
        {
            LearnHistory history = m_lesson.getLearnHistory();
            history.addSummary(
                session.getStart(), 
                session.getEnd(), 
                session.getPassedCards().size(), 
                session.getFailedCards().size(),
                session.getSkippedCards().size(),
                session.getRelearnedCards().size());
        }
        
        for (LearnSessionObserver observer : m_learnSessionObservers)
        {
            observer.sessionEnded(session);
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513566
src/jmemorize/util/RecentItems.java 99 106
src/jmemorize/core/Main.java 537 542
----------------------------------------
    {
        for (RecentItemsObserver observer : m_observers)
        {
            observer.onRecentItemChange(this);
        }
        
        storeToPreferences();
    }

----------------------------------------
        {
            for (LessonObserver observer : m_lessonObservers)
            {
                observer.lessonModified(lesson);
            }
        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513555
src/jmemorize/core/Main.java 515 522
src/jmemorize/core/Main.java 537 542
----------------------------------------
    {
        lesson.getRootCategory().addObserver(this);
        
        for (LessonObserver observer : m_lessonObservers)
        {
            observer.lessonLoaded(lesson);
        }
    }

----------------------------------------
        {
            for (LessonObserver observer : m_lessonObservers)
            {
                observer.lessonModified(lesson);
            }
        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513554
src/jmemorize/core/Main.java 525 532
src/jmemorize/core/Main.java 537 542
----------------------------------------
    {
        lesson.getRootCategory().removeObserver(this);
        
        for (LessonObserver observer : m_lessonObservers)
        {
            observer.lessonClosed(lesson);
        }
    }

----------------------------------------
        {
            for (LessonObserver observer : m_lessonObservers)
            {
                observer.lessonModified(lesson);
            }
        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513556
src/jmemorize/gui/swing/frames/NewCardFrame.java 64 70
src/jmemorize/gui/swing/frames/NewCardFrame.java 82 88
----------------------------------------
        {
            setName(Localization.get(LC.NEW_CARD_NEW_WINDOW));
            setDescription(Localization.get(LC.NEW_CARD_NEW_WINDOW_DESC));
            setIcon("/resource/icons/card_add.gif"); //$NON-NLS-1$
            setAccelerator(KeyEvent.VK_N, InputEvent.CTRL_MASK);
            setMnemonic(7);
        }

----------------------------------------
        {
            setName(Localization.get(LC.NEW_CARD_EDIT_RECENTLY));
            setDescription(Localization.get(LC.NEW_CARD_EDIT_RECENTLY_DESC));
            setIcon("/resource/icons/card_edit.gif"); //$NON-NLS-1$
            setAccelerator(KeyEvent.VK_ENTER, 0);
            setMnemonic(1);
        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513557
src/jmemorize/gui/swing/actions/file/ImportTSVAction.java 66 71
src/jmemorize/core/Main.java 485 491
----------------------------------------
        {
            if (in != null)
                in.close();
            
            throw new IOException(e.getMessage());
        }

----------------------------------------
        {
            if (sourceChannel != null)
                sourceChannel.close();
            
            if (destinationChannel != null)
                destinationChannel.close();
        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513558
src/jmemorize/gui/swing/actions/file/PreferencesAction.java 51 57
src/jmemorize/gui/swing/actions/file/SaveLessonAsAction.java 50 56
----------------------------------------
    {
        setName(Localization.get("MainFrame.PREFERENCES") + ".."); //$NON-NLS-1$ //$NON-NLS-2$ 
        setDescription(Localization.get("MainFrame.PREFERENCES_DESC")); //$NON-NLS-1$ 
        setIcon("/resource/icons/settings.gif"); //$NON-NLS-1$ 
        setAccelerator(KeyEvent.VK_P, SHORTCUT_KEY);
        setMnemonic(1);
    }

----------------------------------------
    {
        setName(Localization.get("MainFrame.SAVE_AS")); //$NON-NLS-1$
        setDescription(Localization.get("MainFrame.SAVE_AS_DESC")); //$NON-NLS-1$
        setIcon("/resource/icons/file_saveas.gif"); //$NON-NLS-1$
        setAccelerator(KeyEvent.VK_S, SHORTCUT_KEY + InputEvent.SHIFT_MASK);
        setMnemonic(2);
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513559
src/jmemorize/gui/swing/actions/file/SaveLessonAsAction.java 50 56
src/jmemorize/gui/swing/actions/ShowCategoryTreeAction.java 51 56
----------------------------------------
    {
        setName(Localization.get("MainFrame.SAVE_AS")); //$NON-NLS-1$
        setDescription(Localization.get("MainFrame.SAVE_AS_DESC")); //$NON-NLS-1$
        setIcon("/resource/icons/file_saveas.gif"); //$NON-NLS-1$
        setAccelerator(KeyEvent.VK_S, SHORTCUT_KEY + InputEvent.SHIFT_MASK);
        setMnemonic(2);
    }

----------------------------------------
    {
        setName(Localization.get("MainFrame.CATEGORY_TREE")); //$NON-NLS-1$
        setDescription(Localization.get("MainFrame.CATEGORY_TREE_DESC")); //$NON-NLS-1$
        setIcon("/resource/icons/tree.gif"); //$NON-NLS-1$
        setAccelerator(KeyEvent.VK_T, 0);
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513560
src/jmemorize/gui/swing/actions/edit/ResetCardAction.java 43 49
src/jmemorize/gui/swing/panels/CardSidePanel.java 375 386
----------------------------------------
    {
        m_selectionProvider = selectionProvider;
        m_selectionProvider.addSelectionObserver(this);
        
        setValues();
        updateEnablement();
    }

----------------------------------------
    {
        if (m_images.size() == 0)
            return;
        
        m_images.remove(m_currentImage);
        
        if (m_currentImage > 0)
            m_currentImage--;
        
        updateImage();
        notifyImageObservers();
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513561
src/jmemorize/gui/swing/actions/edit/ResetCardAction.java 43 49
src/jmemorize/gui/swing/panels/CardSidePanel.java 359 369
----------------------------------------
    {
        m_selectionProvider = selectionProvider;
        m_selectionProvider.addSelectionObserver(this);
        
        setValues();
        updateEnablement();
    }

----------------------------------------
    {
        m_images.add(image);
        m_currentImage = m_images.size() - 1;
        
        updateImage();
        
        if (m_images.size() == 1)
            setImageMode(Mode.TEXT_AND_IMAGE);
        
        notifyImageObservers();
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513606
src/jmemorize/gui/swing/panels/CardSidePanel.java 375 386
src/jmemorize/gui/swing/panels/CardSidePanel.java 359 369
----------------------------------------
    {
        if (m_images.size() == 0)
            return;
        
        m_images.remove(m_currentImage);
        
        if (m_currentImage > 0)
            m_currentImage--;
        
        updateImage();
        notifyImageObservers();
    }

----------------------------------------
    {
        m_images.add(image);
        m_currentImage = m_images.size() - 1;
        
        updateImage();
        
        if (m_images.size() == 1)
            setImageMode(Mode.TEXT_AND_IMAGE);
        
        notifyImageObservers();
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513562
src/jmemorize/gui/swing/frames/NewCardFrame.java 64 70
src/jmemorize/gui/swing/actions/edit/ResetCardAction.java 90 96
----------------------------------------
        {
            setName(Localization.get(LC.NEW_CARD_NEW_WINDOW));
            setDescription(Localization.get(LC.NEW_CARD_NEW_WINDOW_DESC));
            setIcon("/resource/icons/card_add.gif"); //$NON-NLS-1$
            setAccelerator(KeyEvent.VK_N, InputEvent.CTRL_MASK);
            setMnemonic(7);
        }

----------------------------------------
    {
        setName(Localization.get(LC.RESET));
        setDescription(Localization.get(LC.RESET_DESC));
        setIcon("/resource/icons/card_reset.gif"); //$NON-NLS-1$
        setMnemonic(1);
        setAccelerator(KeyEvent.VK_R, SHORTCUT_KEY);
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513563
src/jmemorize/gui/swing/frames/NewCardFrame.java 82 88
src/jmemorize/gui/swing/actions/edit/ResetCardAction.java 90 96
----------------------------------------
        {
            setName(Localization.get(LC.NEW_CARD_EDIT_RECENTLY));
            setDescription(Localization.get(LC.NEW_CARD_EDIT_RECENTLY_DESC));
            setIcon("/resource/icons/card_edit.gif"); //$NON-NLS-1$
            setAccelerator(KeyEvent.VK_ENTER, 0);
            setMnemonic(1);
        }

----------------------------------------
    {
        setName(Localization.get(LC.RESET));
        setDescription(Localization.get(LC.RESET_DESC));
        setIcon("/resource/icons/card_reset.gif"); //$NON-NLS-1$
        setMnemonic(1);
        setAccelerator(KeyEvent.VK_R, SHORTCUT_KEY);
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513564
src/jmemorize/gui/swing/actions/file/PreferencesAction.java 51 57
src/jmemorize/gui/swing/actions/edit/ResetCardAction.java 90 96
----------------------------------------
    {
        setName(Localization.get("MainFrame.PREFERENCES") + ".."); //$NON-NLS-1$ //$NON-NLS-2$ 
        setDescription(Localization.get("MainFrame.PREFERENCES_DESC")); //$NON-NLS-1$ 
        setIcon("/resource/icons/settings.gif"); //$NON-NLS-1$ 
        setAccelerator(KeyEvent.VK_P, SHORTCUT_KEY);
        setMnemonic(1);
    }

----------------------------------------
    {
        setName(Localization.get(LC.RESET));
        setDescription(Localization.get(LC.RESET_DESC));
        setIcon("/resource/icons/card_reset.gif"); //$NON-NLS-1$
        setMnemonic(1);
        setAccelerator(KeyEvent.VK_R, SHORTCUT_KEY);
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513565
src/jmemorize/gui/swing/actions/edit/ResetCardAction.java 43 49
src/jmemorize/gui/swing/actions/edit/RemoveAction.java 46 52
----------------------------------------
    {
        m_selectionProvider = selectionProvider;
        m_selectionProvider.addSelectionObserver(this);
        
        setValues();
        updateEnablement();
    }

----------------------------------------
    {
        m_selectionProvider = selectionProvider;
        m_selectionProvider.addSelectionObserver(this);
        selectionChanged(m_selectionProvider);
        
        setValues();
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513567
src/jmemorize/core/Main.java 537 542
src/jmemorize/gui/swing/NewCardFramesManager.java 160 165
----------------------------------------
        {
            for (LessonObserver observer : m_lessonObservers)
            {
                observer.lessonModified(lesson);
            }
        }

----------------------------------------
    {
        if (type == Events.REMOVED_EVENT)
        {
            m_createdCards.remove(card);
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513568
src/jmemorize/gui/swing/frames/MainFrame.java 310 315
src/jmemorize/core/Lesson.java 163 168
----------------------------------------
    {
        m_deck = level;
        
        m_deckTablePanel.setDeck(level);
        m_deckChartPanel.setDeck(level);
    }

----------------------------------------
    {
        assert m_rootCategory == null;
        
        m_rootCategory = rootCategory;
        m_rootCategory.addObserver(this);
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513569
src/jmemorize/gui/swing/panels/QuizPanel.java 179 184
src/jmemorize/core/Lesson.java 163 168
----------------------------------------
    {
        m_session = session;
        session.addObserver(this);
        
        m_session.getCategory().addObserver(this);
    }

----------------------------------------
    {
        assert m_rootCategory == null;
        
        m_rootCategory = rootCategory;
        m_rootCategory.addObserver(this);
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513570
src/jmemorize/core/Main.java 276 290
src/jmemorize/core/CardSide.java 83 94
----------------------------------------
    {
        LearnSession session = new DefaultLearnSession(category, settings, 
            selectedCards, learnUnlearned, learnExpired, this);
        
        m_runningSessions++;
        
        for (LearnSessionObserver observer : m_learnSessionObservers)
        {
            observer.sessionStarted(session);
        }
        
        // this needs to be called after notifying the observers so that they
        // don't miss the first card
        session.startLearning();
    }

----------------------------------------
    {
        if (m_imageIDs.equals(ids))
            return;
        
        m_imageIDs.clear();
        m_imageIDs.addAll(ids);
        
        for (CardSideObserver observer : m_observers)
        {
            observer.onImagesChanged(this, m_imageIDs);
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513571
src/jmemorize/core/CardSide.java 83 94
src/jmemorize/core/CardSide.java 62 72
----------------------------------------
    {
        if (m_imageIDs.equals(ids))
            return;
        
        m_imageIDs.clear();
        m_imageIDs.addAll(ids);
        
        for (CardSideObserver observer : m_observers)
        {
            observer.onImagesChanged(this, m_imageIDs);
        }
    }

----------------------------------------
    {
        if (text.equals(m_text))
            return;
        
        m_text = text;
        
        for (CardSideObserver observer : m_observers)
        {
            observer.onTextChanged(this, m_text);
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513572
src/jmemorize/gui/swing/panels/DeckTablePanel.java 120 133
src/jmemorize/util/RecentItems.java 47 52
----------------------------------------
    {
        m_frame = mainFrame;
        
        m_cardTable = new CardTable(m_frame, 
            Main.USER_PREFS.node("main.table"), //$NON-NLS-1$ 
            new int[]{ 
                CardTable.COLUMN_FRONTSIDE, 
                CardTable.COLUMN_DECK, 
                CardTable.COLUMN_CATEGORY, 
                CardTable.COLUMN_TESTED, 
                CardTable.COLUMN_EXPIRES});
        
        initComponents();
    }

----------------------------------------
    {
        m_maxItems = maxItems;
        m_prefNode = prefNode;
        
        loadFromPreferences();
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513573
src/jmemorize/gui/swing/frames/FindFrame.java 441 448
src/jmemorize/gui/swing/panels/DeckTablePanel.java 147 153
----------------------------------------
    {
        Card card = (Card)m_cardTable.getSelectedCards().get(0);
        List<Card> cards = m_cardTable.getView().getCards();
        Category category = m_cardTable.getView().getCategory();

        EditCardFrame.getInstance().showCard(card, cards, category, 
            m_searchText, m_searchSides, m_matchCase);
    }

----------------------------------------
    {
        Card card = (Card)m_cardTable.getSelectedCards().get(0);
        List<Card> cards = m_cardTable.getView().getCards();
        Category category = m_cardTable.getView().getCategory();
        
        EditCardFrame.getInstance().showCard(card, cards, category);
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513574
src/jmemorize/gui/swing/GeneralTransferHandler.java 100 108
src/jmemorize/gui/swing/GeneralTransferHandler.java 175 183
----------------------------------------
        {
            if (!isDataFlavorSupported(flavor))
                throw new UnsupportedFlavorException(flavor);
            
            if (CATEGORY_FLAVOR.equals(flavor))
                return m_category;
            
            return m_category.getName();
        }

----------------------------------------
        {
            if (!isDataFlavorSupported(flavor))
                throw new UnsupportedFlavorException(flavor);
            
            if (FORMATTED_TEXT_FLAVOR.equals(flavor))
                return m_formattedText;
            
            return m_formattedText.getText().getUnformatted();
        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513575
src/jmemorize/gui/swing/NewCardFramesManager.java 102 107
src/jmemorize/gui/swing/GeneralTransferHandler.java 234 240
----------------------------------------
        {
            if (!frame.close())
            {
                return false; // user canceled closing of this new card frame
            }
        }

----------------------------------------
            {
                if (transferFlavors[i] == CARDS_FLAVOR || 
                    transferFlavors[i] == CATEGORY_FLAVOR)
                {
                    return true;
                }
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513576
src/jmemorize/gui/swing/frames/MainFrame.java 601 612
src/jmemorize/gui/swing/frames/MainFrame.java 615 626
----------------------------------------
    {
        m_learnPanel.removeSelectionObserver(this);
        m_deckTablePanel.getCardTable().addSelectionObserver(this);
        
        ((CardLayout)m_bottomPanel.getLayout()).show(m_bottomPanel, DECK_CARD);
    
        m_focusedCategories = null;
    
        showCategoryTree(m_showCategoryTreeOld);
        
        updateSelectionObservers();
    }

----------------------------------------
    {
        m_deckTablePanel.getCardTable().removeSelectionObserver(this);
        m_learnPanel.addSelectionObserver(this);
        
        ((CardLayout)m_bottomPanel.getLayout()).show(m_bottomPanel, REPEAT_CARD);
    
        m_focusedCategories = null;
    
        setDeck(-1); //needed to get right values in status bar while learning

        updateSelectionObservers();
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513577
src/jmemorize/gui/swing/frames/MainFrame.java 460 467
src/jmemorize/gui/swing/frames/MainFrame.java 493 500
----------------------------------------
        {
            Object[] args = {file != null ? file.getName() : "?"};
            MessageFormat form = new MessageFormat(Localization.get(LC.ERROR_LOAD));
            String msg = form.format(args);
            Main.logThrowable(msg, e);
            
            new ErrorDialog(this, msg, e).setVisible(true);
        }

----------------------------------------
        {
            Object[] args = {file != null ? file.getName() : "?"};
            MessageFormat form = new MessageFormat(Localization.get(LC.ERROR_SAVE));
            String msg = form.format(args);
            Main.logThrowable(msg, e);
           
            new ErrorDialog(this, msg, e).setVisible(true);
        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513578
src/jmemorize/gui/swing/frames/MainFrame.java 151 161
src/jmemorize/core/FormattedText.java 177 186
----------------------------------------
    {
        try
        {
//            UIManager.setLookAndFeel(new MetalLookAndFeel());
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
        catch (Exception e)
        {
            Main.logThrowable("could not set look and feel", e);
        }
    }

----------------------------------------
    {
        try
        {
            decode(doc, m_formattedText, offset);
        } 
        catch (Exception e)
        {
            Main.logThrowable("Error formatting card", e);
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513579
src/jmemorize/core/FormattedText.java 177 186
src/jmemorize/gui/swing/dialogs/AboutDialog.java 148 164
----------------------------------------
    {
        try
        {
            decode(doc, m_formattedText, offset);
        } 
        catch (Exception e)
        {
            Main.logThrowable("Error formatting card", e);
        }
    }

----------------------------------------
    {
        if (m_licenseTextPane.getText().length() > 0)
            return;
        
        try
        {
            m_licenseTextPane.setPage(getClass().getResource("/LICENSE"));
        } 
        catch (IOException e)
        {
            Main.logThrowable("Failed to Load LICENSE", e);
            
            m_licenseTextPane.setText(
                "Failed to load LICENSE text. See the LICENSE file that " +
                "was delivered with this program.");
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513945
src/jmemorize/gui/swing/frames/MainFrame.java 151 161
src/jmemorize/gui/swing/dialogs/AboutDialog.java 148 164
----------------------------------------
    {
        try
        {
//            UIManager.setLookAndFeel(new MetalLookAndFeel());
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
        catch (Exception e)
        {
            Main.logThrowable("could not set look and feel", e);
        }
    }

----------------------------------------
    {
        if (m_licenseTextPane.getText().length() > 0)
            return;
        
        try
        {
            m_licenseTextPane.setPage(getClass().getResource("/LICENSE"));
        } 
        catch (IOException e)
        {
            Main.logThrowable("Failed to Load LICENSE", e);
            
            m_licenseTextPane.setText(
                "Failed to load LICENSE text. See the LICENSE file that " +
                "was delivered with this program.");
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513580
src/jmemorize/core/Card.java 428 439
src/jmemorize/core/FormattedText.java 200 211
----------------------------------------
    {
        try
        {
            return new Card(m_dateCreated, 
                (CardSide)m_frontSide.clone(), (CardSide)m_backSide.clone());
        }
        catch (CloneNotSupportedException e)
        {
            assert false;
            return null; // satisfy compiler
        }
    }

----------------------------------------
    {
        try
        {
            return super.clone();
        }
        catch (CloneNotSupportedException e) 
        {
            assert false;
        }
        
        return null;
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513581
src/jmemorize/core/Lesson.java 123 132
src/jmemorize/core/FormattedText.java 217 225
----------------------------------------
    {
        if (obj instanceof Lesson)
        {
            Lesson other = (Lesson)obj;
            return other.getRootCategory().getCards().equals(
                getRootCategory().getCards());
        }
        
        return false;
    }

----------------------------------------
    {
        if (obj instanceof FormattedText)
        {
            FormattedText other = (FormattedText)obj;
            return m_formattedText.equals(other.m_formattedText);
        }
        
        return false;
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513584
src/jmemorize/gui/swing/actions/edit/ResetCardAction.java 43 49
src/jmemorize/gui/swing/widgets/CardTable.java 283 289
----------------------------------------
    {
        m_selectionProvider = selectionProvider;
        m_selectionProvider.addSelectionObserver(this);
        
        setValues();
        updateEnablement();
    }

----------------------------------------
        {
            m_cards = cards;
            m_category = category;
            resort();
            
            updateCardCountStatusBar();
        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513582
src/jmemorize/util/RecentItems.java 47 52
src/jmemorize/gui/swing/widgets/CardTable.java 283 289
----------------------------------------
    {
        m_maxItems = maxItems;
        m_prefNode = prefNode;
        
        loadFromPreferences();
    }

----------------------------------------
        {
            m_cards = cards;
            m_category = category;
            resort();
            
            updateCardCountStatusBar();
        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513583
src/jmemorize/gui/swing/panels/QuizPanel.java 205 214
src/jmemorize/gui/swing/widgets/CardTable.java 283 289
----------------------------------------
    {
        m_currentCard = card;
        m_showFlipped = flipped;
        
        updateFonts();
        updateCardSidePanels();
        updateCategoryField();
        
        showQuestion();
    }

----------------------------------------
        {
            m_cards = cards;
            m_category = category;
            resort();
            
            updateCardCountStatusBar();
        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513626
src/jmemorize/gui/swing/panels/QuizPanel.java 179 184
src/jmemorize/gui/swing/actions/RenameCategoryAction.java 46 54
----------------------------------------
    {
        m_session = session;
        session.addObserver(this);
        
        m_session.getCategory().addObserver(this);
    }

----------------------------------------
    {
        Main.getInstance().addLearnSessionObserver(this);
        
        m_selectionProvider = selectionProvider;
        m_selectionProvider.addSelectionObserver(this);
        
        setValues();
        updateEnablement();
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513603
src/jmemorize/gui/swing/actions/edit/RemoveAction.java 46 52
src/jmemorize/gui/swing/actions/RenameCategoryAction.java 46 54
----------------------------------------
    {
        m_selectionProvider = selectionProvider;
        m_selectionProvider.addSelectionObserver(this);
        selectionChanged(m_selectionProvider);
        
        setValues();
    }

----------------------------------------
    {
        Main.getInstance().addLearnSessionObserver(this);
        
        m_selectionProvider = selectionProvider;
        m_selectionProvider.addSelectionObserver(this);
        
        setValues();
        updateEnablement();
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513627
src/jmemorize/gui/swing/panels/CardSidePanel.java 359 369
src/jmemorize/gui/swing/actions/RenameCategoryAction.java 46 54
----------------------------------------
    {
        m_images.add(image);
        m_currentImage = m_images.size() - 1;
        
        updateImage();
        
        if (m_images.size() == 1)
            setImageMode(Mode.TEXT_AND_IMAGE);
        
        notifyImageObservers();
    }

----------------------------------------
    {
        Main.getInstance().addLearnSessionObserver(this);
        
        m_selectionProvider = selectionProvider;
        m_selectionProvider.addSelectionObserver(this);
        
        setValues();
        updateEnablement();
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513602
src/jmemorize/gui/swing/actions/edit/ResetCardAction.java 43 49
src/jmemorize/gui/swing/actions/RenameCategoryAction.java 46 54
----------------------------------------
    {
        m_selectionProvider = selectionProvider;
        m_selectionProvider.addSelectionObserver(this);
        
        setValues();
        updateEnablement();
    }

----------------------------------------
    {
        Main.getInstance().addLearnSessionObserver(this);
        
        m_selectionProvider = selectionProvider;
        m_selectionProvider.addSelectionObserver(this);
        
        setValues();
        updateEnablement();
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513605
src/jmemorize/gui/swing/panels/CardSidePanel.java 375 386
src/jmemorize/gui/swing/actions/RenameCategoryAction.java 46 54
----------------------------------------
    {
        if (m_images.size() == 0)
            return;
        
        m_images.remove(m_currentImage);
        
        if (m_currentImage > 0)
            m_currentImage--;
        
        updateImage();
        notifyImageObservers();
    }

----------------------------------------
    {
        Main.getInstance().addLearnSessionObserver(this);
        
        m_selectionProvider = selectionProvider;
        m_selectionProvider.addSelectionObserver(this);
        
        setValues();
        updateEnablement();
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513585
src/jmemorize/gui/swing/widgets/CardTable.java 283 289
src/jmemorize/gui/swing/actions/RenameCategoryAction.java 46 54
----------------------------------------
        {
            m_cards = cards;
            m_category = category;
            resort();
            
            updateCardCountStatusBar();
        }

----------------------------------------
    {
        Main.getInstance().addLearnSessionObserver(this);
        
        m_selectionProvider = selectionProvider;
        m_selectionProvider.addSelectionObserver(this);
        
        setValues();
        updateEnablement();
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513586
src/jmemorize/gui/swing/GeneralTransferHandler.java 232 241
src/jmemorize/gui/swing/GeneralTransferHandler.java 244 253
----------------------------------------
        {
            for (int i = 0; i < transferFlavors.length; i++)
            {
                if (transferFlavors[i] == CARDS_FLAVOR || 
                    transferFlavors[i] == CATEGORY_FLAVOR)
                {
                    return true;
                }
            }
        }

----------------------------------------
        {
            for (int i = 0; i < transferFlavors.length; i++)
            {
                if (transferFlavors[i] == FORMATTED_TEXT_FLAVOR || 
                    transferFlavors[i] == DataFlavor.stringFlavor)
                {
                    return true;
                }
            }
        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
82
21513587
src/jmemorize/gui/swing/NewCardFramesManager.java 102 107
src/jmemorize/gui/swing/GeneralTransferHandler.java 246 252
----------------------------------------
        {
            if (!frame.close())
            {
                return false; // user canceled closing of this new card frame
            }
        }

----------------------------------------
            {
                if (transferFlavors[i] == FORMATTED_TEXT_FLAVOR || 
                    transferFlavors[i] == DataFlavor.stringFlavor)
                {
                    return true;
                }
            }

----------------------------------------
