$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977403
src/net/azib/ipscan/core/state/StateMachine.java 107 118
src/net/azib/ipscan/core/state/StateMachine.java 159 166
----------------------------------------
	public void stop() {
		if (state == ScanningState.SCANNING) {
			transitionTo(ScanningState.STOPPING, Transition.STOP);
		}
		else if (state == ScanningState.STOPPING) {
			// notify anyway to ensure that manual stopping and automatic stopping work well together
			notifyAboutTransition(Transition.STOP);
		}
		else {
			throw new IllegalStateException("Attempt to stop from " + state);
		}
	}

----------------------------------------
	public void continueScanning() {
		if (state == ScanningState.IDLE) {
			transitionTo(ScanningState.STARTING, Transition.CONTINUE);
		}
		else {
			throw new IllegalStateException("Attempt to continue scanning from " + state);
		}
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977402
src/net/azib/ipscan/core/state/StateMachine.java 147 154
src/net/azib/ipscan/core/state/StateMachine.java 159 166
----------------------------------------
	public void startScanning() {
		if (state == ScanningState.STARTING || state == ScanningState.RESTARTING) {
			transitionTo(ScanningState.SCANNING, Transition.START);
		}
		else {
			throw new IllegalStateException("Attempt to go scanning from " + state);
		}
	}

----------------------------------------
	public void continueScanning() {
		if (state == ScanningState.IDLE) {
			transitionTo(ScanningState.STARTING, Transition.CONTINUE);
		}
		else {
			throw new IllegalStateException("Attempt to continue scanning from " + state);
		}
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977391
src/net/azib/ipscan/core/state/StateMachine.java 123 130
src/net/azib/ipscan/core/state/StateMachine.java 159 166
----------------------------------------
	public void complete() {
		if (state == ScanningState.STOPPING || state == ScanningState.KILLING) {
			transitionTo(ScanningState.IDLE, Transition.COMPLETE);
		}		
		else {
			throw new IllegalStateException("Attempt to complete from " + state);
		}
	}

----------------------------------------
	public void continueScanning() {
		if (state == ScanningState.IDLE) {
			transitionTo(ScanningState.STARTING, Transition.CONTINUE);
		}
		else {
			throw new IllegalStateException("Attempt to continue scanning from " + state);
		}
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977390
src/net/azib/ipscan/core/state/StateMachine.java 135 142
src/net/azib/ipscan/core/state/StateMachine.java 159 166
----------------------------------------
	public void rescan() {
		if (state == ScanningState.IDLE) {
			transitionTo(ScanningState.RESTARTING, Transition.RESCAN);
		}
		else {
			throw new IllegalStateException("Attempt to rescan from " + state);
		}
	}

----------------------------------------
	public void continueScanning() {
		if (state == ScanningState.IDLE) {
			transitionTo(ScanningState.STARTING, Transition.CONTINUE);
		}
		else {
			throw new IllegalStateException("Attempt to continue scanning from " + state);
		}
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977393
src/net/azib/ipscan/util/InetAddressUtils.java 33 46
src/net/azib/ipscan/util/InetAddressUtils.java 48 60
----------------------------------------
	public static InetAddress startRangeByNetmask(InetAddress address, InetAddress netmask) {
		byte[] netmaskBytes = netmask.getAddress();
		byte[] addressBytes = address.getAddress();
		for (int i = 0; i < addressBytes.length; i++) {
			addressBytes[i] = (byte) (addressBytes[i] & netmaskBytes[i]);
		}
		try {
			return InetAddress.getByAddress(addressBytes);
		} 
		catch (UnknownHostException e) {
			// this should never happen as we are modifying the same bytes received from the InetAddress
			throw new IllegalArgumentException(e);
		}
	}

----------------------------------------
	public static InetAddress endRangeByNetmask(InetAddress address, InetAddress netmask) {
		byte[] netmaskBytes = netmask.getAddress();
		byte[] addressBytes = address.getAddress();
		for (int i = 0; i < addressBytes.length; i++) {
			addressBytes[i] = (byte) (addressBytes[i] | ~(netmaskBytes[i]));
		}
		try {
			return InetAddress.getByAddress(addressBytes);
		}
		catch (UnknownHostException e) {
			// this should never happen as we are modifying the same bytes received from the InetAddress
			throw new IllegalArgumentException(e);		}
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977396
src/net/azib/ipscan/gui/actions/BrowserLauncher.java 24 31
src/net/azib/ipscan/exporters/AbstractExporter.java 48 55
----------------------------------------
	public static void openURL(String url) {
		try {
      Desktop.getDesktop().browse(new URI(url));
		}
		catch (Exception e) {
			throw new UserErrorException("openURL.failed", url);
		}
	}

----------------------------------------
	public Exporter clone() {
		try {
			return (Exporter) super.clone();
		}
		catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977394
src/net/azib/ipscan/fetchers/AbstractFetcher.java 29 36
src/net/azib/ipscan/exporters/AbstractExporter.java 48 55
----------------------------------------
	public String getInfo() {
		try {
			return Labels.getLabel(getId() + ".info");
		}
		catch (MissingResourceException e) {
			return null;
		}
	}

----------------------------------------
	public Exporter clone() {
		try {
			return (Exporter) super.clone();
		}
		catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977395
src/net/azib/ipscan/exporters/AbstractExporter.java 48 55
src/net/azib/ipscan/core/PortIterator.java 94 101
----------------------------------------
	public Exporter clone() {
		try {
			return (Exporter) super.clone();
		}
		catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

----------------------------------------
	public PortIterator copy() {
		try {
			return (PortIterator) super.clone();
		}
		catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977529
src/net/azib/ipscan/fetchers/AbstractFetcher.java 29 36
src/net/azib/ipscan/core/PortIterator.java 94 101
----------------------------------------
	public String getInfo() {
		try {
			return Labels.getLabel(getId() + ".info");
		}
		catch (MissingResourceException e) {
			return null;
		}
	}

----------------------------------------
	public PortIterator copy() {
		try {
			return (PortIterator) super.clone();
		}
		catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977509
src/net/azib/ipscan/gui/actions/BrowserLauncher.java 24 31
src/net/azib/ipscan/core/PortIterator.java 94 101
----------------------------------------
	public static void openURL(String url) {
		try {
      Desktop.getDesktop().browse(new URI(url));
		}
		catch (Exception e) {
			throw new UserErrorException("openURL.failed", url);
		}
	}

----------------------------------------
	public PortIterator copy() {
		try {
			return (PortIterator) super.clone();
		}
		catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977530
src/net/azib/ipscan/core/PortIterator.java 94 101
src/net/azib/ipscan/core/net/WinIpHlpDll.java 20 27
----------------------------------------
	public PortIterator copy() {
		try {
			return (PortIterator) super.clone();
		}
		catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

----------------------------------------
		public static WinIpHlpDll load() {
			try {
				return (WinIpHlpDll) Native.loadLibrary("iphlpapi", WinIpHlpDll.class);
			}
			catch (UnsatisfiedLinkError e) {
				return (WinIpHlpDll) Native.loadLibrary("icmp", WinIpHlpDll.class);
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977499
src/net/azib/ipscan/fetchers/AbstractFetcher.java 29 36
src/net/azib/ipscan/core/net/WinIpHlpDll.java 20 27
----------------------------------------
	public String getInfo() {
		try {
			return Labels.getLabel(getId() + ".info");
		}
		catch (MissingResourceException e) {
			return null;
		}
	}

----------------------------------------
		public static WinIpHlpDll load() {
			try {
				return (WinIpHlpDll) Native.loadLibrary("iphlpapi", WinIpHlpDll.class);
			}
			catch (UnsatisfiedLinkError e) {
				return (WinIpHlpDll) Native.loadLibrary("icmp", WinIpHlpDll.class);
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977397
src/net/azib/ipscan/exporters/AbstractExporter.java 48 55
src/net/azib/ipscan/core/net/WinIpHlpDll.java 20 27
----------------------------------------
	public Exporter clone() {
		try {
			return (Exporter) super.clone();
		}
		catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

----------------------------------------
		public static WinIpHlpDll load() {
			try {
				return (WinIpHlpDll) Native.loadLibrary("iphlpapi", WinIpHlpDll.class);
			}
			catch (UnsatisfiedLinkError e) {
				return (WinIpHlpDll) Native.loadLibrary("icmp", WinIpHlpDll.class);
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977510
src/net/azib/ipscan/gui/actions/BrowserLauncher.java 24 31
src/net/azib/ipscan/core/net/WinIpHlpDll.java 20 27
----------------------------------------
	public static void openURL(String url) {
		try {
      Desktop.getDesktop().browse(new URI(url));
		}
		catch (Exception e) {
			throw new UserErrorException("openURL.failed", url);
		}
	}

----------------------------------------
		public static WinIpHlpDll load() {
			try {
				return (WinIpHlpDll) Native.loadLibrary("iphlpapi", WinIpHlpDll.class);
			}
			catch (UnsatisfiedLinkError e) {
				return (WinIpHlpDll) Native.loadLibrary("icmp", WinIpHlpDll.class);
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977398
src/net/azib/ipscan/gui/GettingStartedDialog.java 26 34
src/net/azib/ipscan/exporters/ExportProcessor.java 73 80
----------------------------------------
	public GettingStartedDialog() {
		int num = 1;
		try {
			while (true) {
				texts.add(Labels.getLabel("text.gettingStarted" + num++));
			}
		}
		catch (Exception noMoreTexts) {}
	}

----------------------------------------
		finally {
			if (outputStream != null) {
				try {
					outputStream.close();
				}
				catch (Exception ignore) {}
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
28730877
src/net/azib/ipscan/util/IOUtils.java 31 37
src/net/azib/ipscan/exporters/ExportProcessor.java 73 80
----------------------------------------
  public static void closeQuietly(Closeable closeable) {
    if (closeable != null) try {
      closeable.close();
    }
    catch (IOException ignore) {
    }
  }

----------------------------------------
		finally {
			if (outputStream != null) {
				try {
					outputStream.close();
				}
				catch (Exception ignore) {}
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
28730875
src/net/azib/ipscan/util/IOUtils.java 11 17
src/net/azib/ipscan/exporters/ExportProcessor.java 73 80
----------------------------------------
  public static void closeQuietly(Socket socket) {
    if (socket != null) try {
      socket.close();
    }
    catch (IOException ignore) {
    }
  }

----------------------------------------
		finally {
			if (outputStream != null) {
				try {
					outputStream.close();
				}
				catch (Exception ignore) {}
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
28730876
src/net/azib/ipscan/util/IOUtils.java 23 29
src/net/azib/ipscan/exporters/ExportProcessor.java 73 80
----------------------------------------
  public static void closeQuietly(RawSocket socket) {
    if (socket != null) try {
      socket.close();
    }
    catch (IOException ignore) {
    }
  }

----------------------------------------
		finally {
			if (outputStream != null) {
				try {
					outputStream.close();
				}
				catch (Exception ignore) {}
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977399
src/net/azib/ipscan/exporters/ExportProcessor.java 73 80
src/net/azib/ipscan/gui/PreferencesDialog.java 454 462
----------------------------------------
		finally {
			if (outputStream != null) {
				try {
					outputStream.close();
				}
				catch (Exception ignore) {}
			}
		}

----------------------------------------
	private static int parseIntValue(Text text) {
		try {
			return Integer.parseInt(text.getText());
		}
		catch (NumberFormatException e) {
			text.forceFocus();
			throw e;
		}
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977475
src/net/azib/ipscan/core/PortIterator.java 94 101
src/net/azib/ipscan/exporters/ExportProcessor.java 74 79
----------------------------------------
	public PortIterator copy() {
		try {
			return (PortIterator) super.clone();
		}
		catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

----------------------------------------
			if (outputStream != null) {
				try {
					outputStream.close();
				}
				catch (Exception ignore) {}
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977478
src/net/azib/ipscan/core/net/WinIpHlpDll.java 20 27
src/net/azib/ipscan/exporters/ExportProcessor.java 74 79
----------------------------------------
		public static WinIpHlpDll load() {
			try {
				return (WinIpHlpDll) Native.loadLibrary("iphlpapi", WinIpHlpDll.class);
			}
			catch (UnsatisfiedLinkError e) {
				return (WinIpHlpDll) Native.loadLibrary("icmp", WinIpHlpDll.class);
			}
		}

----------------------------------------
			if (outputStream != null) {
				try {
					outputStream.close();
				}
				catch (Exception ignore) {}
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977473
src/net/azib/ipscan/util/IOUtils.java 31 37
src/net/azib/ipscan/exporters/ExportProcessor.java 74 79
----------------------------------------
  public static void closeQuietly(Closeable closeable) {
    if (closeable != null) try {
      closeable.close();
    }
    catch (IOException ignore) {
    }
  }

----------------------------------------
			if (outputStream != null) {
				try {
					outputStream.close();
				}
				catch (Exception ignore) {}
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977472
src/net/azib/ipscan/util/IOUtils.java 23 29
src/net/azib/ipscan/exporters/ExportProcessor.java 74 79
----------------------------------------
  public static void closeQuietly(RawSocket socket) {
    if (socket != null) try {
      socket.close();
    }
    catch (IOException ignore) {
    }
  }

----------------------------------------
			if (outputStream != null) {
				try {
					outputStream.close();
				}
				catch (Exception ignore) {}
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977474
src/net/azib/ipscan/fetchers/AbstractFetcher.java 29 36
src/net/azib/ipscan/exporters/ExportProcessor.java 74 79
----------------------------------------
	public String getInfo() {
		try {
			return Labels.getLabel(getId() + ".info");
		}
		catch (MissingResourceException e) {
			return null;
		}
	}

----------------------------------------
			if (outputStream != null) {
				try {
					outputStream.close();
				}
				catch (Exception ignore) {}
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977476
src/net/azib/ipscan/util/IOUtils.java 11 17
src/net/azib/ipscan/exporters/ExportProcessor.java 74 79
----------------------------------------
  public static void closeQuietly(Socket socket) {
    if (socket != null) try {
      socket.close();
    }
    catch (IOException ignore) {
    }
  }

----------------------------------------
			if (outputStream != null) {
				try {
					outputStream.close();
				}
				catch (Exception ignore) {}
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977401
src/net/azib/ipscan/gui/PreferencesDialog.java 454 462
src/net/azib/ipscan/exporters/ExportProcessor.java 74 79
----------------------------------------
	private static int parseIntValue(Text text) {
		try {
			return Integer.parseInt(text.getText());
		}
		catch (NumberFormatException e) {
			text.forceFocus();
			throw e;
		}
	}

----------------------------------------
			if (outputStream != null) {
				try {
					outputStream.close();
				}
				catch (Exception ignore) {}
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977477
src/net/azib/ipscan/gui/actions/BrowserLauncher.java 24 31
src/net/azib/ipscan/exporters/ExportProcessor.java 74 79
----------------------------------------
	public static void openURL(String url) {
		try {
      Desktop.getDesktop().browse(new URI(url));
		}
		catch (Exception e) {
			throw new UserErrorException("openURL.failed", url);
		}
	}

----------------------------------------
			if (outputStream != null) {
				try {
					outputStream.close();
				}
				catch (Exception ignore) {}
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977400
src/net/azib/ipscan/exporters/AbstractExporter.java 48 55
src/net/azib/ipscan/exporters/ExportProcessor.java 74 79
----------------------------------------
	public Exporter clone() {
		try {
			return (Exporter) super.clone();
		}
		catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

----------------------------------------
			if (outputStream != null) {
				try {
					outputStream.close();
				}
				catch (Exception ignore) {}
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977404
src/net/azib/ipscan/gui/actions/ToolsActions.java 130 141
src/net/azib/ipscan/gui/actions/ToolsActions.java 221 236
----------------------------------------
		public void handleEvent(Event event) {
			int count = resultTable.getItemCount();
			resultTable.deselectAll();
			for (int i = 0; i < count; i++) {
				if (isDesired(results.getResult(i).getType())) {
					resultTable.select(i);
				}
			}
			event.widget = resultTable;
			resultTable.notifyListeners(SWT.Selection, event);
			resultTable.forceFocus();
		}

----------------------------------------
		public void handleEvent(Event event) {
			int count = resultTable.getItemCount();
			// the most naive implementation
			resultTable.setRedraw(false);
			for (int i = 0; i < count; i++) {
				if (resultTable.isSelected(i)) 
					resultTable.deselect(i);
				else
					resultTable.select(i);
			}
			resultTable.setRedraw(true);
			resultTable.redraw();
			event.widget = resultTable;
      resultTable.notifyListeners(SWT.Selection, event);
			resultTable.forceFocus();
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977405
src/net/azib/ipscan/gui/actions/ToolsActions.java 47 55
src/net/azib/ipscan/config/Config.java 58 65
----------------------------------------
		public void handleEvent(Event event) {
			// show the preferences dialog
			preferencesDialog.open();
			
			// refresh the results and status bar in case anything was changed
			resultTable.updateResults();
			resultTable.updateColumnNames();
			statusBar.updateConfigText();
		}

----------------------------------------
	public void store() {
		preferences.put("language", language);
		preferences.put("uuid", uuid);
		scannerConfig.store();
		guiConfig.store();
		favoritesConfig.store();
		openersConfig.store();
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977407
ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java 167 177
ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java 80 90
----------------------------------------
  public final void copyData(TCPPacket packet) {
    if(_data_.length < packet._data_.length) {
      byte[] data = new byte[packet._data_.length];
      System.arraycopy(_data_, 0, data, 0, getCombinedHeaderByteLength());
      _data_ = data;
    }
    int length = packet.getTCPDataByteLength();
    System.arraycopy(packet._data_, packet.getCombinedHeaderByteLength(),
                     _data_, getCombinedHeaderByteLength(), length);
    setTCPDataByteLength(length);
  }

----------------------------------------
  public final void copyData(UDPPacket packet) {
    if(_data_.length < packet._data_.length) {
      byte[] data = new byte[packet._data_.length];
      System.arraycopy(_data_, 0, data, 0, getCombinedHeaderByteLength());
      _data_ = data;
    }
    int length = packet.getUDPDataByteLength();
    System.arraycopy(packet._data_, packet.getCombinedHeaderByteLength(),
                     _data_, getCombinedHeaderByteLength(), length);
    setUDPDataByteLength(length);
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977406
ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPPacket.java 138 148
ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java 80 90
----------------------------------------
  public final void copyData(ICMPPacket packet) {
    if(_data_.length < packet._data_.length) {
      byte[] data = new byte[packet._data_.length];
      System.arraycopy(_data_, 0, data, 0, getCombinedHeaderByteLength());
      _data_ = data;
    }
    int length = packet.getICMPDataByteLength();
    System.arraycopy(packet._data_, packet.getCombinedHeaderByteLength(),
                     _data_, getCombinedHeaderByteLength(), length);
    setICMPDataByteLength(length);
  }

----------------------------------------
  public final void copyData(UDPPacket packet) {
    if(_data_.length < packet._data_.length) {
      byte[] data = new byte[packet._data_.length];
      System.arraycopy(_data_, 0, data, 0, getCombinedHeaderByteLength());
      _data_ = data;
    }
    int length = packet.getUDPDataByteLength();
    System.arraycopy(packet._data_, packet.getCombinedHeaderByteLength(),
                     _data_, getCombinedHeaderByteLength(), length);
    setUDPDataByteLength(length);
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977408
ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPPacket.java 106 111
ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java 198 203
----------------------------------------
  public final void setICMPDataByteLength(int length) {
    if(length < 0)
      length = 0;

    setIPPacketLength(getCombinedHeaderByteLength() + length);
  }

----------------------------------------
  public final void setUDPDataByteLength(int length) {
    if(length < 0)
      length = 0;

    setIPPacketLength(getCombinedHeaderByteLength() + length);
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977409
ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java 438 443
ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java 198 203
----------------------------------------
  public final void setTCPDataByteLength(int length) {
    if(length < 0)
      length = 0;

    setIPPacketLength(getCombinedHeaderByteLength() + length);
  }

----------------------------------------
  public final void setUDPDataByteLength(int length) {
    if(length < 0)
      length = 0;

    setIPPacketLength(getCombinedHeaderByteLength() + length);
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977410
ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java 451 465
ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java 211 225
----------------------------------------
  private final int __getVirtualHeaderTotal() {
    int s1 =
      ((_data_[OFFSET_SOURCE_ADDRESS] & 0xff) << 8) |
      (_data_[OFFSET_SOURCE_ADDRESS + 1] & 0xff);
    int s2 =
      ((_data_[OFFSET_SOURCE_ADDRESS + 2] & 0xff) << 8) |
      (_data_[OFFSET_SOURCE_ADDRESS + 3] & 0xff);
    int d1 =
      ((_data_[OFFSET_DESTINATION_ADDRESS] & 0xff) << 8) |
      (_data_[OFFSET_DESTINATION_ADDRESS + 1] & 0xff);
    int d2 =
      ((_data_[OFFSET_DESTINATION_ADDRESS + 2] & 0xff) << 8) |
      (_data_[OFFSET_DESTINATION_ADDRESS + 3] & 0xff);
    return s1 + s2 + d1 + d2 + getProtocol() + getTCPPacketByteLength();
  }

----------------------------------------
  private final int __getVirtualHeaderTotal() {
    int s1 =
      ((_data_[OFFSET_SOURCE_ADDRESS] & 0xff) << 8) |
      (_data_[OFFSET_SOURCE_ADDRESS + 1] & 0xff);
    int s2 =
      ((_data_[OFFSET_SOURCE_ADDRESS + 2] & 0xff) << 8) |
      (_data_[OFFSET_SOURCE_ADDRESS + 3] & 0xff);
    int d1 =
      ((_data_[OFFSET_DESTINATION_ADDRESS] & 0xff) << 8) |
      (_data_[OFFSET_DESTINATION_ADDRESS + 1] & 0xff);
    int d2 =
      ((_data_[OFFSET_DESTINATION_ADDRESS + 2] & 0xff) << 8) |
      (_data_[OFFSET_DESTINATION_ADDRESS + 3] & 0xff);
    return s1 + s2 + d1 + d2 + getProtocol() + getUDPPacketByteLength();
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977411
src/net/azib/ipscan/config/Labels.java 98 107
src/net/azib/ipscan/fetchers/FetcherRegistry.java 171 179
----------------------------------------
	public String get(String key) {
		try {
			return labels.getString(key);
		}
		catch (MissingResourceException e) {
			String text = labelsFallback.getString(key);
			LOG.warning("Used fallback label for " + key);
			return text;
		}
	}

----------------------------------------
	private FetcherPrefs createFetcherPrefsEditor(Class<? extends FetcherPrefs> prefsClass) throws Exception {
		try {
			Constructor<? extends FetcherPrefs> constructor = prefsClass.getConstructor(PreferencesDialog.class);
			return constructor.newInstance(preferencesDialog);
		}
		catch (NoSuchMethodException e) {
			return prefsClass.newInstance();
		}
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977412
src/net/azib/ipscan/config/Labels.java 98 107
src/net/azib/ipscan/core/PluginLoader.java 60 71
----------------------------------------
	public String get(String key) {
		try {
			return labels.getString(key);
		}
		catch (MissingResourceException e) {
			String text = labelsFallback.getString(key);
			LOG.warning("Used fallback label for " + key);
			return text;
		}
	}

----------------------------------------
		for (String className : classes) {
			try {
				Class clazz = Class.forName(className, true, classLoader);
				if (Plugin.class.isAssignableFrom(clazz))
					container.add(clazz);
				else
					LOG.warning("Plugin class " + clazz.getName() + " is not assignable to " + Plugin.class.getName());
			}
			catch (ClassNotFoundException e) {
				LOG.warning("Unable to load plugin: " + className);
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977417
src/net/azib/ipscan/exporters/ExportProcessor.java 74 79
src/net/azib/ipscan/config/ComponentRegistry.java 93 101
----------------------------------------
			if (outputStream != null) {
				try {
					outputStream.close();
				}
				catch (Exception ignore) {}
			}

----------------------------------------
		for (Class clazz: classes) {
			try {
				if (type.isAssignableFrom(clazz))
					result.add((T)clazz.newInstance());
			}
			catch (Exception e) {
				throw new RuntimeException("Cannot instantiate plugin with default constructor: " + clazz.getName());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977419
src/net/azib/ipscan/core/PortIterator.java 94 101
src/net/azib/ipscan/config/ComponentRegistry.java 93 101
----------------------------------------
	public PortIterator copy() {
		try {
			return (PortIterator) super.clone();
		}
		catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

----------------------------------------
		for (Class clazz: classes) {
			try {
				if (type.isAssignableFrom(clazz))
					result.add((T)clazz.newInstance());
			}
			catch (Exception e) {
				throw new RuntimeException("Cannot instantiate plugin with default constructor: " + clazz.getName());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977416
src/net/azib/ipscan/core/net/WinIpHlpDll.java 20 27
src/net/azib/ipscan/config/ComponentRegistry.java 93 101
----------------------------------------
		public static WinIpHlpDll load() {
			try {
				return (WinIpHlpDll) Native.loadLibrary("iphlpapi", WinIpHlpDll.class);
			}
			catch (UnsatisfiedLinkError e) {
				return (WinIpHlpDll) Native.loadLibrary("icmp", WinIpHlpDll.class);
			}
		}

----------------------------------------
		for (Class clazz: classes) {
			try {
				if (type.isAssignableFrom(clazz))
					result.add((T)clazz.newInstance());
			}
			catch (Exception e) {
				throw new RuntimeException("Cannot instantiate plugin with default constructor: " + clazz.getName());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977418
src/net/azib/ipscan/fetchers/AbstractFetcher.java 29 36
src/net/azib/ipscan/config/ComponentRegistry.java 93 101
----------------------------------------
	public String getInfo() {
		try {
			return Labels.getLabel(getId() + ".info");
		}
		catch (MissingResourceException e) {
			return null;
		}
	}

----------------------------------------
		for (Class clazz: classes) {
			try {
				if (type.isAssignableFrom(clazz))
					result.add((T)clazz.newInstance());
			}
			catch (Exception e) {
				throw new RuntimeException("Cannot instantiate plugin with default constructor: " + clazz.getName());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977413
src/net/azib/ipscan/exporters/AbstractExporter.java 48 55
src/net/azib/ipscan/config/ComponentRegistry.java 93 101
----------------------------------------
	public Exporter clone() {
		try {
			return (Exporter) super.clone();
		}
		catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

----------------------------------------
		for (Class clazz: classes) {
			try {
				if (type.isAssignableFrom(clazz))
					result.add((T)clazz.newInstance());
			}
			catch (Exception e) {
				throw new RuntimeException("Cannot instantiate plugin with default constructor: " + clazz.getName());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977414
src/net/azib/ipscan/gui/actions/BrowserLauncher.java 24 31
src/net/azib/ipscan/config/ComponentRegistry.java 93 101
----------------------------------------
	public static void openURL(String url) {
		try {
      Desktop.getDesktop().browse(new URI(url));
		}
		catch (Exception e) {
			throw new UserErrorException("openURL.failed", url);
		}
	}

----------------------------------------
		for (Class clazz: classes) {
			try {
				if (type.isAssignableFrom(clazz))
					result.add((T)clazz.newInstance());
			}
			catch (Exception e) {
				throw new RuntimeException("Cannot instantiate plugin with default constructor: " + clazz.getName());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977496
src/net/azib/ipscan/fetchers/AbstractFetcher.java 29 36
src/net/azib/ipscan/core/net/ICMPPinger.java 124 131
----------------------------------------
	public String getInfo() {
		try {
			return Labels.getLabel(getId() + ".info");
		}
		catch (MissingResourceException e) {
			return null;
		}
	}

----------------------------------------
			for (int i = 0; i < count && !Thread.currentThread().isInterrupted(); i++) {
				try {
					sendReceiveEchoPacket(socket, subject.getAddress(), i, result);
				}
				catch (InterruptedIOException e) {
					// ignore timeouts
				}
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977497
src/net/azib/ipscan/core/PortIterator.java 94 101
src/net/azib/ipscan/core/net/ICMPPinger.java 124 131
----------------------------------------
	public PortIterator copy() {
		try {
			return (PortIterator) super.clone();
		}
		catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

----------------------------------------
			for (int i = 0; i < count && !Thread.currentThread().isInterrupted(); i++) {
				try {
					sendReceiveEchoPacket(socket, subject.getAddress(), i, result);
				}
				catch (InterruptedIOException e) {
					// ignore timeouts
				}
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977489
src/net/azib/ipscan/exporters/AbstractExporter.java 48 55
src/net/azib/ipscan/core/net/ICMPPinger.java 124 131
----------------------------------------
	public Exporter clone() {
		try {
			return (Exporter) super.clone();
		}
		catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

----------------------------------------
			for (int i = 0; i < count && !Thread.currentThread().isInterrupted(); i++) {
				try {
					sendReceiveEchoPacket(socket, subject.getAddress(), i, result);
				}
				catch (InterruptedIOException e) {
					// ignore timeouts
				}
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977494
src/net/azib/ipscan/core/net/WinIpHlpDll.java 20 27
src/net/azib/ipscan/core/net/ICMPPinger.java 124 131
----------------------------------------
		public static WinIpHlpDll load() {
			try {
				return (WinIpHlpDll) Native.loadLibrary("iphlpapi", WinIpHlpDll.class);
			}
			catch (UnsatisfiedLinkError e) {
				return (WinIpHlpDll) Native.loadLibrary("icmp", WinIpHlpDll.class);
			}
		}

----------------------------------------
			for (int i = 0; i < count && !Thread.currentThread().isInterrupted(); i++) {
				try {
					sendReceiveEchoPacket(socket, subject.getAddress(), i, result);
				}
				catch (InterruptedIOException e) {
					// ignore timeouts
				}
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977495
src/net/azib/ipscan/exporters/ExportProcessor.java 74 79
src/net/azib/ipscan/core/net/ICMPPinger.java 124 131
----------------------------------------
			if (outputStream != null) {
				try {
					outputStream.close();
				}
				catch (Exception ignore) {}
			}

----------------------------------------
			for (int i = 0; i < count && !Thread.currentThread().isInterrupted(); i++) {
				try {
					sendReceiveEchoPacket(socket, subject.getAddress(), i, result);
				}
				catch (InterruptedIOException e) {
					// ignore timeouts
				}
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977490
src/net/azib/ipscan/util/IOUtils.java 11 17
src/net/azib/ipscan/core/net/ICMPPinger.java 124 131
----------------------------------------
  public static void closeQuietly(Socket socket) {
    if (socket != null) try {
      socket.close();
    }
    catch (IOException ignore) {
    }
  }

----------------------------------------
			for (int i = 0; i < count && !Thread.currentThread().isInterrupted(); i++) {
				try {
					sendReceiveEchoPacket(socket, subject.getAddress(), i, result);
				}
				catch (InterruptedIOException e) {
					// ignore timeouts
				}
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
17977415
src/net/azib/ipscan/config/ComponentRegistry.java 93 101
src/net/azib/ipscan/core/net/ICMPPinger.java 124 131
----------------------------------------
		for (Class clazz: classes) {
			try {
				if (type.isAssignableFrom(clazz))
					result.add((T)clazz.newInstance());
			}
			catch (Exception e) {
				throw new RuntimeException("Cannot instantiate plugin with default constructor: " + clazz.getName());
			}
		}

----------------------------------------
			for (int i = 0; i < count && !Thread.currentThread().isInterrupted(); i++) {
				try {
					sendReceiveEchoPacket(socket, subject.getAddress(), i, result);
				}
				catch (InterruptedIOException e) {
					// ignore timeouts
				}
			}

----------------------------------------
