$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513481
src/org/jfm/po/CommandOutputViewDialog.java 23 32
src/org/jfm/views/fview/FindTextDialog.java 38 47
----------------------------------------
  public CommandOutputViewDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
      //pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
  public FindTextDialog(Frame owner, String title, boolean modal) {
    super(owner, title, modal);
    try {
      jbInit();
      //pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513499
src/org/jfm/views/list/detailview/DetailView.java 54 62
src/org/jfm/views/fview/FindTextDialog.java 38 47
----------------------------------------
	public DetailView(String fs) {
		super(fs);
	    try {
	      init();
	    }
	    catch(Exception ex) {
	      ex.printStackTrace();
	    }	    
	}

----------------------------------------
  public FindTextDialog(Frame owner, String title, boolean modal) {
    super(owner, title, modal);
    try {
      jbInit();
      //pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513504
src/org/jfm/filesystems/local/JFMLocalFile.java 75 83
src/org/jfm/views/fview/FindTextDialog.java 38 47
----------------------------------------
	public OutputStream getOutputStream(){
		java.io.FileOutputStream out=null;
		try{
			out=new java.io.FileOutputStream(theFile);
		}catch(IOException exc){
			exc.printStackTrace();
		}
		return out;
	}

----------------------------------------
  public FindTextDialog(Frame owner, String title, boolean modal) {
    super(owner, title, modal);
    try {
      jbInit();
      //pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513479
src/org/jfm/main/SearchDialog.java 42 51
src/org/jfm/views/fview/FindTextDialog.java 38 47
----------------------------------------
  public SearchDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
      pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
  public FindTextDialog(Frame owner, String title, boolean modal) {
    super(owner, title, modal);
    try {
      jbInit();
      //pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513545
src/org/jfm/po/copy/CopyConfirmDialog.java 34 43
src/org/jfm/views/fview/FindTextDialog.java 38 47
----------------------------------------
  public CopyConfirmDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
      pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
  public FindTextDialog(Frame owner, String title, boolean modal) {
    super(owner, title, modal);
    try {
      jbInit();
      //pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513500
src/org/jfm/po/FilePropertiesDialog.java 36 45
src/org/jfm/views/fview/FindTextDialog.java 38 47
----------------------------------------
  public FilePropertiesDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
      pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
  public FindTextDialog(Frame owner, String title, boolean modal) {
    super(owner, title, modal);
    try {
      jbInit();
      //pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513539
src/org/jfm/po/copy/CopyProgressDialog.java 154 160
src/org/jfm/views/fview/FindTextDialog.java 38 47
----------------------------------------
      }finally{
        try {
          in.close();
          out.close();
        }
        catch (Exception ignored) {}
      }

----------------------------------------
  public FindTextDialog(Frame owner, String title, boolean modal) {
    super(owner, title, modal);
    try {
      jbInit();
      //pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513502
src/org/jfm/views/JFMView.java 146 154
src/org/jfm/views/fview/FindTextDialog.java 38 47
----------------------------------------
          if(view==null){
                  try {
                          Class viewClass=Class.forName(DEFAULT_VIEW.getClassName());
                          view=(JFMView)viewClass.newInstance();
                  } catch (Exception e) {
                          e.printStackTrace();
                          //ignore the exception
                  }
          }

----------------------------------------
  public FindTextDialog(Frame owner, String title, boolean modal) {
    super(owner, title, modal);
    try {
      jbInit();
      //pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513541
src/org/jfm/views/fview/FileViewDialog.java 37 46
src/org/jfm/views/fview/FindTextDialog.java 38 47
----------------------------------------
  public FileViewDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
    //  pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
  public FindTextDialog(Frame owner, String title, boolean modal) {
    super(owner, title, modal);
    try {
      jbInit();
      //pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513544
src/org/jfm/main/MainFrame.java 60 68
src/org/jfm/views/fview/FindTextDialog.java 38 47
----------------------------------------
  public MainFrame() {
    enableEvents(AWTEvent.WINDOW_EVENT_MASK);
    try {
      jbInit();
    }
    catch(Exception e) {
      e.printStackTrace();
    }
  }

----------------------------------------
  public FindTextDialog(Frame owner, String title, boolean modal) {
    super(owner, title, modal);
    try {
      jbInit();
      //pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513430
src/org/jfm/main/MainPanel.java 30 37
src/org/jfm/views/fview/FindTextDialog.java 38 47
----------------------------------------
  public MainPanel() {
    try {
      jbInit();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
  public FindTextDialog(Frame owner, String title, boolean modal) {
    super(owner, title, modal);
    try {
      jbInit();
      //pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513483
src/org/jfm/po/CommandOutputViewDialog.java 81 91
src/org/jfm/views/fview/FindTextDialog.java 38 47
----------------------------------------
    public void run(){
      try {
          //i'm not interested in the return value of the process 
          //i just want to know when it's over
          process.waitFor();
      }
      catch (InterruptedException ex) {}
      finally {
        CommandOutputViewDialog.this.dispose();
      }
    }

----------------------------------------
  public FindTextDialog(Frame owner, String title, boolean modal) {
    super(owner, title, modal);
    try {
      jbInit();
      //pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513543
src/org/jfm/main/Options.java 108 114
src/org/jfm/views/fview/FindTextDialog.java 38 47
----------------------------------------
  public static void savePreferences(){
  	try {
		getPreferences().flush();
	} catch (Exception e) {
		e.printStackTrace();
	}
  }

----------------------------------------
  public FindTextDialog(Frame owner, String title, boolean modal) {
    super(owner, title, modal);
    try {
      jbInit();
      //pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513175
src/org/jfm/views/list/detailview/DetailsTable.java 53 60
src/org/jfm/views/list/briefview/BriefViewListComponent.java 75 83
----------------------------------------
  private void removeDefaultKeys(){
    InputMap mainMap=this.getInputMap(JTable.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
    InputMap secondaryMap=this.getInputMap();
    InputMap map=this.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
    mainMap.clear();
    secondaryMap.clear();
    map.clear();
  }

----------------------------------------
   private void removeDefaultKeys(){
    InputMap mainMap=SwingUtilities.getUIInputMap(this,JComponent.WHEN_FOCUSED);
    InputMap secondaryMap=this.getInputMap();
    InputMap keyMap = (InputMap)UIManager.get("List.focusInputMap");

    mainMap.clear();
    secondaryMap.clear();
    keyMap.clear();    
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513176
src/org/jfm/views/list/detailview/DetailsTable.java 106 116
src/org/jfm/views/list/briefview/BriefViewListComponent.java 135 145
----------------------------------------
    private void addMouseActions(){
      this.addMouseListener(new MouseAdapter(){
        public void mouseClicked(MouseEvent e){
          int row=DetailsTable.this.rowAtPoint(e.getPoint());
          if(e.getClickCount()==2 && (row>=0) && (row<((DetailsTableModel)DetailsTable.this.getModel()).getRowCount())){//double click on row
            processActionOnRow(row);
            return;
          }
        }
      });
    }

----------------------------------------
    private void addMouseActions(){
      this.addMouseListener(new MouseAdapter(){
        public void mouseClicked(MouseEvent e){
          int row=BriefViewListComponent.this.locationToIndex(e.getPoint());
          if(e.getClickCount()==2 && (row>=0) && (row<BriefViewListComponent.this.getModel().getSize())){//double click on row
            processActionOnRow(row);
            return;
          }
        }
      });
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513177
src/org/jfm/views/list/detailview/DetailsTable.java 108 114
src/org/jfm/views/list/briefview/BriefViewListComponent.java 137 143
----------------------------------------
        public void mouseClicked(MouseEvent e){
          int row=DetailsTable.this.rowAtPoint(e.getPoint());
          if(e.getClickCount()==2 && (row>=0) && (row<((DetailsTableModel)DetailsTable.this.getModel()).getRowCount())){//double click on row
            processActionOnRow(row);
            return;
          }
        }

----------------------------------------
        public void mouseClicked(MouseEvent e){
          int row=BriefViewListComponent.this.locationToIndex(e.getPoint());
          if(e.getClickCount()==2 && (row>=0) && (row<BriefViewListComponent.this.getModel().getSize())){//double click on row
            processActionOnRow(row);
            return;
          }
        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513178
src/org/jfm/main/configurationdialog/panels/ColorConfigurationPanel.java 60 112
src/org/jfm/main/configurationdialog/panels/ColorConfigurationPanel.java 168 220
----------------------------------------
	private JPanel setupForegroundColorPanel(){
		JPanel p=new JPanel();
		p.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(),"Font color"));
		
		JComboBox combo=new JComboBox();
		combo.setEditable(false);
		combo.setRenderer(new ColorComboBoxRenderer());
		final DefaultComboBoxModel model=new DefaultComboBoxModel();
		combo.setModel(model);
		addComboItems(model);
		Color defaultColor=Options.getForegroundColor();
		if(model.getIndexOf(defaultColor)>=0){
			model.setSelectedItem(defaultColor);
		}else{
			model.addElement(defaultColor);
			model.setSelectedItem(defaultColor);			
		}
		JButton button=new JButton("Add custom");
		button.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Color c=JColorChooser.showDialog(ColorConfigurationPanel.this,"Font color",Options.getForegroundColor());
			  	if(c==null) return;
				model.addElement(c);
				model.setSelectedItem(c);
			}
		});
		JButton rbutton=new JButton("Reset");
		rbutton.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Color c=Options.getDefaultForegroundColor();
			  	if(c==null) return;
				if(model.getIndexOf(c)>=0){
					model.setSelectedItem(c);
				}else{
					model.addElement(c);
					model.setSelectedItem(c);			
				}
			}
		});
		
		p.add(combo);
		p.add(button);
		p.add(rbutton);
		combo.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
			  	ColorChangeEvent event=new ColorChangeEvent(ColorChangeEvent.FOREGROUND);
			  	event.setSource(this);
				event.setColor((Color)model.getSelectedItem());
				ConfigurationEventsQueue.addPendingEvent(event);				
			}
		});
		return p;
	}

----------------------------------------
	private JPanel setupMarkedColorPanel(){
		JPanel p=new JPanel();
		p.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(),"Marked color"));
		JComboBox combo=new JComboBox();
		combo.setEditable(false);
		combo.setRenderer(new ColorComboBoxRenderer());
		final DefaultComboBoxModel model=new DefaultComboBoxModel();
		combo.setModel(model);
		addComboItems(model);
		Color defaultColor=Options.getMarkedColor();
		if(model.getIndexOf(defaultColor)>=0){
			model.setSelectedItem(defaultColor);
		}else{
			model.addElement(defaultColor);
			model.setSelectedItem(defaultColor);			
		}
		
		JButton button=new JButton("Add custom");
		button.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Color c=JColorChooser.showDialog(ColorConfigurationPanel.this,"Marked color",Options.getMarkedColor());
			  	if(c==null) return;
				model.addElement(c);
				model.setSelectedItem(c);				
			}
		});
		JButton rbutton=new JButton("Reset");
		rbutton.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Color c=Options.getDefaultMarkedColor();
			  	if(c==null) return;
				if(model.getIndexOf(c)>=0){
					model.setSelectedItem(c);
				}else{
					model.addElement(c);
					model.setSelectedItem(c);			
				}
			}
		});
		
		p.add(combo);
		p.add(button);	
		p.add(rbutton);
		combo.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
			  	ColorChangeEvent event=new ColorChangeEvent(ColorChangeEvent.MARKED);
			  	event.setSource(this);
				event.setColor((Color)model.getSelectedItem());
				ConfigurationEventsQueue.addPendingEvent(event);				
			}
		});		
		return p;
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513366
src/org/jfm/main/configurationdialog/panels/ColorConfigurationPanel.java 60 112
src/org/jfm/main/configurationdialog/panels/ColorConfigurationPanel.java 114 166
----------------------------------------
	private JPanel setupForegroundColorPanel(){
		JPanel p=new JPanel();
		p.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(),"Font color"));
		
		JComboBox combo=new JComboBox();
		combo.setEditable(false);
		combo.setRenderer(new ColorComboBoxRenderer());
		final DefaultComboBoxModel model=new DefaultComboBoxModel();
		combo.setModel(model);
		addComboItems(model);
		Color defaultColor=Options.getForegroundColor();
		if(model.getIndexOf(defaultColor)>=0){
			model.setSelectedItem(defaultColor);
		}else{
			model.addElement(defaultColor);
			model.setSelectedItem(defaultColor);			
		}
		JButton button=new JButton("Add custom");
		button.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Color c=JColorChooser.showDialog(ColorConfigurationPanel.this,"Font color",Options.getForegroundColor());
			  	if(c==null) return;
				model.addElement(c);
				model.setSelectedItem(c);
			}
		});
		JButton rbutton=new JButton("Reset");
		rbutton.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Color c=Options.getDefaultForegroundColor();
			  	if(c==null) return;
				if(model.getIndexOf(c)>=0){
					model.setSelectedItem(c);
				}else{
					model.addElement(c);
					model.setSelectedItem(c);			
				}
			}
		});
		
		p.add(combo);
		p.add(button);
		p.add(rbutton);
		combo.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
			  	ColorChangeEvent event=new ColorChangeEvent(ColorChangeEvent.FOREGROUND);
			  	event.setSource(this);
				event.setColor((Color)model.getSelectedItem());
				ConfigurationEventsQueue.addPendingEvent(event);				
			}
		});
		return p;
	}

----------------------------------------
	private JPanel setupBackgroundColorPanel(){
		JPanel p=new JPanel();
		p.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(),"Panel color"));
		JComboBox combo=new JComboBox();
		combo.setEditable(false);
		combo.setRenderer(new ColorComboBoxRenderer());
		final DefaultComboBoxModel model=new DefaultComboBoxModel();
		combo.setModel(model);
		addComboItems(model);
		Color defaultColor=Options.getBackgroundColor();
		if(model.getIndexOf(defaultColor)>=0){
			model.setSelectedItem(defaultColor);
		}else{
			model.addElement(defaultColor);
			model.setSelectedItem(defaultColor);			
		}
		
		JButton button=new JButton("Add custom");
		button.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Color c=JColorChooser.showDialog(ColorConfigurationPanel.this,"Panel color",Options.getForegroundColor());
			  	if(c==null) return;
				model.addElement(c);
				model.setSelectedItem(c);				
			}
		});
		JButton rbutton=new JButton("Reset");
		rbutton.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Color c=Options.getDefaultBackgroundColor();
			  	if(c==null) return;
				if(model.getIndexOf(c)>=0){
					model.setSelectedItem(c);
				}else{
					model.addElement(c);
					model.setSelectedItem(c);			
				}
			}
		});
		
		p.add(combo);
		p.add(button);	
		p.add(rbutton);
		combo.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
			  	ColorChangeEvent event=new ColorChangeEvent(ColorChangeEvent.BACKGROUND);
			  	event.setSource(this);
				event.setColor((Color)model.getSelectedItem());
				ConfigurationEventsQueue.addPendingEvent(event);				
			}
		});		
		return p;
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513179
src/org/jfm/main/configurationdialog/panels/ColorConfigurationPanel.java 168 220
src/org/jfm/main/configurationdialog/panels/ColorConfigurationPanel.java 114 166
----------------------------------------
	private JPanel setupMarkedColorPanel(){
		JPanel p=new JPanel();
		p.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(),"Marked color"));
		JComboBox combo=new JComboBox();
		combo.setEditable(false);
		combo.setRenderer(new ColorComboBoxRenderer());
		final DefaultComboBoxModel model=new DefaultComboBoxModel();
		combo.setModel(model);
		addComboItems(model);
		Color defaultColor=Options.getMarkedColor();
		if(model.getIndexOf(defaultColor)>=0){
			model.setSelectedItem(defaultColor);
		}else{
			model.addElement(defaultColor);
			model.setSelectedItem(defaultColor);			
		}
		
		JButton button=new JButton("Add custom");
		button.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Color c=JColorChooser.showDialog(ColorConfigurationPanel.this,"Marked color",Options.getMarkedColor());
			  	if(c==null) return;
				model.addElement(c);
				model.setSelectedItem(c);				
			}
		});
		JButton rbutton=new JButton("Reset");
		rbutton.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Color c=Options.getDefaultMarkedColor();
			  	if(c==null) return;
				if(model.getIndexOf(c)>=0){
					model.setSelectedItem(c);
				}else{
					model.addElement(c);
					model.setSelectedItem(c);			
				}
			}
		});
		
		p.add(combo);
		p.add(button);	
		p.add(rbutton);
		combo.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
			  	ColorChangeEvent event=new ColorChangeEvent(ColorChangeEvent.MARKED);
			  	event.setSource(this);
				event.setColor((Color)model.getSelectedItem());
				ConfigurationEventsQueue.addPendingEvent(event);				
			}
		});		
		return p;
	}

----------------------------------------
	private JPanel setupBackgroundColorPanel(){
		JPanel p=new JPanel();
		p.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(),"Panel color"));
		JComboBox combo=new JComboBox();
		combo.setEditable(false);
		combo.setRenderer(new ColorComboBoxRenderer());
		final DefaultComboBoxModel model=new DefaultComboBoxModel();
		combo.setModel(model);
		addComboItems(model);
		Color defaultColor=Options.getBackgroundColor();
		if(model.getIndexOf(defaultColor)>=0){
			model.setSelectedItem(defaultColor);
		}else{
			model.addElement(defaultColor);
			model.setSelectedItem(defaultColor);			
		}
		
		JButton button=new JButton("Add custom");
		button.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Color c=JColorChooser.showDialog(ColorConfigurationPanel.this,"Panel color",Options.getForegroundColor());
			  	if(c==null) return;
				model.addElement(c);
				model.setSelectedItem(c);				
			}
		});
		JButton rbutton=new JButton("Reset");
		rbutton.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Color c=Options.getDefaultBackgroundColor();
			  	if(c==null) return;
				if(model.getIndexOf(c)>=0){
					model.setSelectedItem(c);
				}else{
					model.addElement(c);
					model.setSelectedItem(c);			
				}
			}
		});
		
		p.add(combo);
		p.add(button);	
		p.add(rbutton);
		combo.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
			  	ColorChangeEvent event=new ColorChangeEvent(ColorChangeEvent.BACKGROUND);
			  	event.setSource(this);
				event.setColor((Color)model.getSelectedItem());
				ConfigurationEventsQueue.addPendingEvent(event);				
			}
		});		
		return p;
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513180
src/org/jfm/main/configurationdialog/panels/ColorConfigurationPanel.java 133 138
src/org/jfm/main/configurationdialog/panels/ColorConfigurationPanel.java 187 192
----------------------------------------
			public void actionPerformed(ActionEvent e){
				Color c=JColorChooser.showDialog(ColorConfigurationPanel.this,"Panel color",Options.getForegroundColor());
			  	if(c==null) return;
				model.addElement(c);
				model.setSelectedItem(c);				
			}

----------------------------------------
			public void actionPerformed(ActionEvent e){
				Color c=JColorChooser.showDialog(ColorConfigurationPanel.this,"Marked color",Options.getMarkedColor());
			  	if(c==null) return;
				model.addElement(c);
				model.setSelectedItem(c);				
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513367
src/org/jfm/main/configurationdialog/panels/ColorConfigurationPanel.java 133 138
src/org/jfm/main/configurationdialog/panels/ColorConfigurationPanel.java 79 84
----------------------------------------
			public void actionPerformed(ActionEvent e){
				Color c=JColorChooser.showDialog(ColorConfigurationPanel.this,"Panel color",Options.getForegroundColor());
			  	if(c==null) return;
				model.addElement(c);
				model.setSelectedItem(c);				
			}

----------------------------------------
			public void actionPerformed(ActionEvent e){
				Color c=JColorChooser.showDialog(ColorConfigurationPanel.this,"Font color",Options.getForegroundColor());
			  	if(c==null) return;
				model.addElement(c);
				model.setSelectedItem(c);
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513181
src/org/jfm/main/configurationdialog/panels/ColorConfigurationPanel.java 187 192
src/org/jfm/main/configurationdialog/panels/ColorConfigurationPanel.java 79 84
----------------------------------------
			public void actionPerformed(ActionEvent e){
				Color c=JColorChooser.showDialog(ColorConfigurationPanel.this,"Marked color",Options.getMarkedColor());
			  	if(c==null) return;
				model.addElement(c);
				model.setSelectedItem(c);				
			}

----------------------------------------
			public void actionPerformed(ActionEvent e){
				Color c=JColorChooser.showDialog(ColorConfigurationPanel.this,"Font color",Options.getForegroundColor());
			  	if(c==null) return;
				model.addElement(c);
				model.setSelectedItem(c);
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513182
src/org/jfm/main/configurationdialog/panels/ColorConfigurationPanel.java 142 151
src/org/jfm/main/configurationdialog/panels/ColorConfigurationPanel.java 196 205
----------------------------------------
			public void actionPerformed(ActionEvent e){
				Color c=Options.getDefaultBackgroundColor();
			  	if(c==null) return;
				if(model.getIndexOf(c)>=0){
					model.setSelectedItem(c);
				}else{
					model.addElement(c);
					model.setSelectedItem(c);			
				}
			}

----------------------------------------
			public void actionPerformed(ActionEvent e){
				Color c=Options.getDefaultMarkedColor();
			  	if(c==null) return;
				if(model.getIndexOf(c)>=0){
					model.setSelectedItem(c);
				}else{
					model.addElement(c);
					model.setSelectedItem(c);			
				}
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513368
src/org/jfm/main/configurationdialog/panels/ColorConfigurationPanel.java 142 151
src/org/jfm/main/configurationdialog/panels/ColorConfigurationPanel.java 88 97
----------------------------------------
			public void actionPerformed(ActionEvent e){
				Color c=Options.getDefaultBackgroundColor();
			  	if(c==null) return;
				if(model.getIndexOf(c)>=0){
					model.setSelectedItem(c);
				}else{
					model.addElement(c);
					model.setSelectedItem(c);			
				}
			}

----------------------------------------
			public void actionPerformed(ActionEvent e){
				Color c=Options.getDefaultForegroundColor();
			  	if(c==null) return;
				if(model.getIndexOf(c)>=0){
					model.setSelectedItem(c);
				}else{
					model.addElement(c);
					model.setSelectedItem(c);			
				}
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513183
src/org/jfm/main/configurationdialog/panels/ColorConfigurationPanel.java 196 205
src/org/jfm/main/configurationdialog/panels/ColorConfigurationPanel.java 88 97
----------------------------------------
			public void actionPerformed(ActionEvent e){
				Color c=Options.getDefaultMarkedColor();
			  	if(c==null) return;
				if(model.getIndexOf(c)>=0){
					model.setSelectedItem(c);
				}else{
					model.addElement(c);
					model.setSelectedItem(c);			
				}
			}

----------------------------------------
			public void actionPerformed(ActionEvent e){
				Color c=Options.getDefaultForegroundColor();
			  	if(c==null) return;
				if(model.getIndexOf(c)>=0){
					model.setSelectedItem(c);
				}else{
					model.addElement(c);
					model.setSelectedItem(c);			
				}
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513184
src/org/jfm/main/configurationdialog/panels/ColorConfigurationPanel.java 158 163
src/org/jfm/main/configurationdialog/panels/ColorConfigurationPanel.java 212 217
----------------------------------------
			public void actionPerformed(ActionEvent e){
			  	ColorChangeEvent event=new ColorChangeEvent(ColorChangeEvent.BACKGROUND);
			  	event.setSource(this);
				event.setColor((Color)model.getSelectedItem());
				ConfigurationEventsQueue.addPendingEvent(event);				
			}

----------------------------------------
			public void actionPerformed(ActionEvent e){
			  	ColorChangeEvent event=new ColorChangeEvent(ColorChangeEvent.MARKED);
			  	event.setSource(this);
				event.setColor((Color)model.getSelectedItem());
				ConfigurationEventsQueue.addPendingEvent(event);				
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513396
src/org/jfm/main/MainFrame.java 60 68
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
  public MainFrame() {
    enableEvents(AWTEvent.WINDOW_EVENT_MASK);
    try {
      jbInit();
    }
    catch(Exception e) {
      e.printStackTrace();
    }
  }

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513299
src/org/jfm/po/CommandOutputViewDialog.java 81 91
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
    public void run(){
      try {
          //i'm not interested in the return value of the process 
          //i just want to know when it's over
          process.waitFor();
      }
      catch (InterruptedException ex) {}
      finally {
        CommandOutputViewDialog.this.dispose();
      }
    }

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513304
src/org/jfm/views/list/detailview/DetailsTableModel.java 82 90
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
    public JFMFile getFileAt(int index){
      JFMFile file=null;
      try {
       file=(JFMFile)getValueAt(index, 0);
      }catch (Exception ex){
        ex.printStackTrace();
      }
      return file;
    }

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513309
src/org/jfm/views/fview/FindTextDialog.java 38 47
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
  public FindTextDialog(Frame owner, String title, boolean modal) {
    super(owner, title, modal);
    try {
      jbInit();
      //pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513314
src/org/jfm/views/fview/FileViewDialog.java 37 46
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
  public FileViewDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
    //  pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513394
src/org/jfm/filesystems/local/JFMLocalFilesystem.java 51 57
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
		for(int i=0;i<files.length;i++){
			try{
				jfmFiles[i]=new JFMLocalFile(files[i].getAbsolutePath());
			}catch(Exception ignored){
				ignored.printStackTrace();
			}
		}

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513433
src/org/jfm/main/MainPanel.java 30 37
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
  public MainPanel() {
    try {
      jbInit();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513395
src/org/jfm/main/Options.java 108 114
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
  public static void savePreferences(){
  	try {
		getPreferences().flush();
	} catch (Exception e) {
		e.printStackTrace();
	}
  }

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513313
src/org/jfm/filesystems/JFMFileSystem.java 153 162
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
		if(fs==null){
			name=null;
			try {
				Class fsClass=Class.forName(DEFAULT_FILESYSTEM);
				fs=(JFMFileSystem)fsClass.newInstance();
			} catch (Exception e) {
				e.printStackTrace();
				//ignore the exception
			}
		}

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513308
src/org/jfm/views/JFMView.java 146 154
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
          if(view==null){
                  try {
                          Class viewClass=Class.forName(DEFAULT_VIEW.getClassName());
                          view=(JFMView)viewClass.newInstance();
                  } catch (Exception e) {
                          e.printStackTrace();
                          //ignore the exception
                  }
          }

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513303
src/org/jfm/main/Options.java 99 106
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
  public static Preferences getPreferences(){
  	try {
	  	preferences.sync();	
	} catch (Exception e) {
		e.printStackTrace();
	}
  	return preferences;
  }

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513298
src/org/jfm/po/copy/CopyProgressDialog.java 179 188
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
  public CopyProgressDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
      pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513186
src/org/jfm/help/HelpBrowser.java 104 113
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
					{
						DocPrintJob job=service.createPrintJob();
						try{						
							job.print(doc, aset);
						}catch(Exception exc)
						{
							exc.printStackTrace();
							JOptionPane.showMessageDialog(HelpBrowser.this, "Error printing: "+exc.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
						}
					}

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513310
src/org/jfm/views/JFMView.java 133 143
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
                  if(representation.equals(viewClassName)){
                          try {
                                  Class viewClass=Class.forName(viewClassName.getClassName());
                                  view=(JFMView)viewClass.getConstructor(new Class[]{String.class}).newInstance(new Object[]{filesystem});
                                  //viewClass.newInstance();
                                  return view;
                          } catch (Exception e) {
                                  e.printStackTrace();
                                  //ignore the exception
                          }
                  }

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513305
src/org/jfm/views/list/detailview/DetailView.java 54 62
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
	public DetailView(String fs) {
		super(fs);
	    try {
	      init();
	    }
	    catch(Exception ex) {
	      ex.printStackTrace();
	    }	    
	}

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513296
src/org/jfm/views/list/briefview/BriefView.java 48 56
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
	public BriefView(String fs){
		super(fs);
	    try {
	      init();
	    }
	    catch(Exception ex) {
	      ex.printStackTrace();
	    }	    
	}

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513301
src/org/jfm/filesystems/JFMFileSystem.java 89 97
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
		  {
			  if(!files[i].isFile() || !files[i].getName().endsWith("jar")) continue;
			  try{
				  registerFilesystem(files[i]);
			  }catch(Exception ignored)
			  {
				  ignored.printStackTrace();
			  }
		  }

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513306
src/org/jfm/filesystems/JFMFileSystem.java 141 150
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
			if(name.equals(fsClassName)){
				try {
					Class fsClass=Class.forName(fsClassName,true,JFMClassLoader.getLoader());
					fs=(JFMFileSystem)fsClass.newInstance();
					return fs;
				} catch (Exception e) {
					e.printStackTrace();
					//ignore the exception
				}
			}

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513311
src/org/jfm/filesystems/local/JFMLocalFile.java 75 83
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
	public OutputStream getOutputStream(){
		java.io.FileOutputStream out=null;
		try{
			out=new java.io.FileOutputStream(theFile);
		}catch(IOException exc){
			exc.printStackTrace();
		}
		return out;
	}

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513300
src/org/jfm/po/ProgressActionDialog.java 57 66
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
  public ProgressActionDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
      pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513295
src/org/jfm/main/SearchDialog.java 42 51
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
  public SearchDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
      pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513292
src/org/jfm/filesystems/local/JFMLocalFile.java 44 52
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
	public InputStream getInputStream(){
		java.io.FileInputStream in=null;
		try{
			in=new java.io.FileInputStream(theFile);
		}catch(IOException exc){
			exc.printStackTrace();
		}
		return in;
	}

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513297
src/org/jfm/po/CommandOutputViewDialog.java 23 32
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
  public CommandOutputViewDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
      //pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
21513302
src/org/jfm/views/list/ListView.java 32 40
src/org/jfm/main/MainFrame.java 196 201
----------------------------------------
  public ListView(String fs) {
  	super(fs);
    try {
      jbInit();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }  	
  }

----------------------------------------
            public void actionPerformed(ActionEvent e){
              try{
                UIManager.setLookAndFeel(className);
                SwingUtilities.updateComponentTreeUI(MainFrame.this);
              }catch(Exception exception){exception.printStackTrace();}
            }

----------------------------------------
