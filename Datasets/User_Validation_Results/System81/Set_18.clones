$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364822
src/org/jfm/po/PanelMenuAction.java 21 37
src/org/jfm/views/fview/FileViewDialog.java 152 170
----------------------------------------
  public Object getValue(String key) {
    return null;
  }
  public void putValue(String key, Object value) {
  }
  public void setEnabled(boolean b) {
    enabled=b;
  }
  public boolean isEnabled() {
    return enabled;
  }
  public void addPropertyChangeListener(PropertyChangeListener listener) {
  }
  public void removePropertyChangeListener(PropertyChangeListener listener) {
  }
 
  public void actionPerformed(ActionEvent e) {

----------------------------------------
    public Object getValue(String key) {
      return null;
    }

    public void putValue(String key, Object value) {
    }

    public void setEnabled(boolean b) {
      enabled=b;
    }
    public boolean isEnabled() {
      return enabled;
    }
    public void addPropertyChangeListener(PropertyChangeListener listener) {
    }
    public void removePropertyChangeListener(PropertyChangeListener listener) {
    }

    public void actionPerformed(java.awt.event.ActionEvent e) {

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364841
src/org/jfm/po/HelpAction.java 27 43
src/org/jfm/views/fview/FileViewDialog.java 152 170
----------------------------------------
  public Object getValue(String key) {
    return null;
  }
  public void putValue(String key, Object value) {
  }
  public void setEnabled(boolean b) {
    enabled=b;
  }
  public boolean isEnabled() {
    return enabled;
  }
  public void addPropertyChangeListener(PropertyChangeListener listener) {
  }
  public void removePropertyChangeListener(PropertyChangeListener listener) {
  }

  public void actionPerformed(ActionEvent e) {

----------------------------------------
    public Object getValue(String key) {
      return null;
    }

    public void putValue(String key, Object value) {
    }

    public void setEnabled(boolean b) {
      enabled=b;
    }
    public boolean isEnabled() {
      return enabled;
    }
    public void addPropertyChangeListener(PropertyChangeListener listener) {
    }
    public void removePropertyChangeListener(PropertyChangeListener listener) {
    }

    public void actionPerformed(java.awt.event.ActionEvent e) {

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364823
src/org/jfm/po/MkdirAction.java 4 45
src/org/jfm/po/DeleteAction.java 3 42
----------------------------------------
import javax.swing.JOptionPane;
import java.beans.PropertyChangeListener;
import java.awt.event.ActionEvent;
import org.jfm.main.Options;
import org.jfm.event.*;
import org.jfm.filesystems.JFMFile;


/**
 * Title:        Java File Manager
 * Description:
 * Copyright:    Copyright (c) 2001
 * Company:      Home
 * @author Giurgiu Sergiu
 * @version 1.0
 */

public class MkdirAction implements Action {

  public MkdirAction() {
  }

  private boolean enabled=true;
  public Object getValue(String key) {
    return null;
  }

  public void putValue(String key, Object value) {
  }
  public void setEnabled(boolean b) {
    enabled=b;
  }
  public boolean isEnabled() {
    return enabled;
  }
  public void addPropertyChangeListener(PropertyChangeListener listener) {
  }
  public void removePropertyChangeListener(PropertyChangeListener listener) {
  }

  public void actionPerformed(ActionEvent e) {
     JFMFile file;

----------------------------------------
import javax.swing.*;
import java.beans.PropertyChangeListener;
import java.awt.event.ActionEvent;
import org.jfm.main.Options;

import org.jfm.event.*;
import org.jfm.filesystems.JFMFile;

/**
 * Title:        Java File Manager
 * Description:
 * Copyright:    Copyright (c) 2001
 * Company:      Home
 * @author Giurgiu Sergiu
 * @version 1.0
 */

public class DeleteAction implements Action {

  public DeleteAction() {
  }
  private boolean enabled=true;
  public Object getValue(String key) {
    return null;
  }
  public void putValue(String key, Object value) {
  }
  public void setEnabled(boolean b) {
    enabled=b;
  }
  public boolean isEnabled() {
    return enabled;
  }
  public void addPropertyChangeListener(PropertyChangeListener listener) {
  }
  public void removePropertyChangeListener(PropertyChangeListener listener) {
  }

  public void actionPerformed(ActionEvent e) {
     JFMFile[] files=Options.getActivePanel().getSelectedFiles();

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364824
src/org/jfm/po/FilePropertiesAction.java 8 42
src/org/jfm/po/MkdirAction.java 9 44
----------------------------------------
import org.jfm.filesystems.*;


/**
 * <p>Title: Java File Manager</p>
 * <p>Description: </p>
 * <p>Copyright: Copyright (c) 2001</p>
 * <p>Company: Home</p>
 * @author Giurgiu Sergiu
 * @version 1.0
 */

public class FilePropertiesAction implements Action {

  public FilePropertiesAction() {
  }

  private boolean enabled=true;
  public Object getValue(String key) {
    return null;
  }
  public void putValue(String key, Object value) {
  }
  public void setEnabled(boolean b) {
    enabled=b;
  }
  public boolean isEnabled() {
    return enabled;
  }
  public void addPropertyChangeListener(PropertyChangeListener listener) {
  }
  public void removePropertyChangeListener(PropertyChangeListener listener) {
  }

  public void actionPerformed(ActionEvent e) {

----------------------------------------
import org.jfm.filesystems.JFMFile;


/**
 * Title:        Java File Manager
 * Description:
 * Copyright:    Copyright (c) 2001
 * Company:      Home
 * @author Giurgiu Sergiu
 * @version 1.0
 */

public class MkdirAction implements Action {

  public MkdirAction() {
  }

  private boolean enabled=true;
  public Object getValue(String key) {
    return null;
  }

  public void putValue(String key, Object value) {
  }
  public void setEnabled(boolean b) {
    enabled=b;
  }
  public boolean isEnabled() {
    return enabled;
  }
  public void addPropertyChangeListener(PropertyChangeListener listener) {
  }
  public void removePropertyChangeListener(PropertyChangeListener listener) {
  }

  public void actionPerformed(ActionEvent e) {

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364825
src/org/jfm/po/CopyAction.java 31 51
src/org/jfm/po/MkdirAction.java 23 44
----------------------------------------
  public CopyAction() {
  }
  private boolean enabled=true;
  public Object getValue(String key) {
    return null;
  }
  public void putValue(String key, Object value) {
  }

  public void setEnabled(boolean b) {
    enabled=b;
  }
  public boolean isEnabled() {
    return enabled;
  }
  public void addPropertyChangeListener(PropertyChangeListener listener) {
  }
  public void removePropertyChangeListener(PropertyChangeListener listener) {
  }

  public void actionPerformed(ActionEvent e) {

----------------------------------------
  public MkdirAction() {
  }

  private boolean enabled=true;
  public Object getValue(String key) {
    return null;
  }

  public void putValue(String key, Object value) {
  }
  public void setEnabled(boolean b) {
    enabled=b;
  }
  public boolean isEnabled() {
    return enabled;
  }
  public void addPropertyChangeListener(PropertyChangeListener listener) {
  }
  public void removePropertyChangeListener(PropertyChangeListener listener) {
  }

  public void actionPerformed(ActionEvent e) {

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364829
src/org/jfm/po/MkdirAction.java 1 8
src/org/jfm/po/MoveAction.java 1 8
----------------------------------------
package org.jfm.po;

import javax.swing.Action;
import javax.swing.JOptionPane;
import java.beans.PropertyChangeListener;
import java.awt.event.ActionEvent;
import org.jfm.main.Options;
import org.jfm.event.*;

----------------------------------------
package org.jfm.po;

import javax.swing.Action;
import javax.swing.JOptionPane;
import java.beans.PropertyChangeListener;
import java.awt.event.ActionEvent;
import org.jfm.main.Options;
import org.jfm.po.copy.CopyConfirmDialog;

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364830
src/org/jfm/po/CopyAction.java 130 229
src/org/jfm/po/MoveAction.java 139 238
----------------------------------------
        copyFile(f[i],destFile);
      }
    }
  }

  private void copyFile(JFMFile fin,JFMFile fout) throws ActionCancelledException {
    if(fout.exists() && !overwriteAll && !skipAll){

      java.text.SimpleDateFormat format=new java.text.SimpleDateFormat("EEE, MMM d, yyyy 'at' hh:mm:ss");

      String message="Target file "+fout.getPath()+"  already exists."+System.getProperty("line.separator")+System.getProperty("line.separator")+
                     "Source last modified date: "+format.format(new java.util.Date(fin.lastModified()))+System.getProperty("line.separator")+
                     "Target last modified date: "+format.format(new java.util.Date(fout.lastModified()))+System.getProperty("line.separator")+System.getProperty("line.separator")+
                     "What should I do?";
      String[] buttons=new String[]{"Overwrite","Overwrite all","Skip","Skip all","Cancel"};

      int result=JOptionPane.showOptionDialog(progress,message,"File exists",JOptionPane.DEFAULT_OPTION,JOptionPane.INFORMATION_MESSAGE,null,buttons,buttons[2]);

      switch (result){
        case 0:
          break;
        case 1:
          overwriteAll=true;
          break;
        case 2:
          totalBytesWritten+=fin.length();          
          int t_percent=totalFilesSizes!=0?(int)((totalBytesWritten*100)/totalFilesSizes):0;
          progress.setTotalProgresssValue(t_percent);
          return;
        case 3:
          skipAll=true;
          break;
          case 4:
            throw new ActionCancelledException();
      }
    }

    if(fout.exists() && skipAll){
          totalBytesWritten+=fin.length();
          int t_percent=(int)((totalBytesWritten*100)/totalFilesSizes);
          progress.setTotalProgresssValue(t_percent);
          progress.setFileProgresssValue(100);
          return;
    }
      java.io.InputStream in=null;
      java.io.OutputStream out=null;
      try{
        in=fin.getInputStream();
        //WAS new FileOutputStream(fout.getPath(),append);
        out=fout.getOutputStream();
        progress.setFileProgresssValue(0);
        curentlyCopiedFile=fout;
        byte[] data=new byte[1024];
        int read=0;
        long bytesWrote=0;
        long f_length=fin.length();

        /**@todo Maybe async IO would be nice here**/
        while((read=in.read(data))>=0){
          if(cancel){
            throw new ActionCancelledException();
          }

          out.write(data,0,read);
          bytesWrote+=read;
          totalBytesWritten+=read;
          int f_percent=(int)((bytesWrote*100)/f_length);
          int t_percent=(int)((totalBytesWritten*100)/totalFilesSizes);
          progress.setFileProgresssValue(f_percent);
          progress.setTotalProgresssValue(t_percent);
        }
        progress.setFileProgresssValue(100);
      }catch(ActionCancelledException ex){
    	  ex.printStackTrace();
          curentlyCopiedFile.delete();
          throw ex;
      }catch(Exception ex){
        JOptionPane.showMessageDialog(progress,"Error while writing "+fout.getPath(),"Error",JOptionPane.ERROR_MESSAGE);
        curentlyCopiedFile.delete();
      }finally{
        try {
          in.close();          
        }
        catch (Exception ignored) {}
        try {
            out.close();
        }
        catch (Exception ignored) {}
      }
  }

  private void copyFiles(JFMFile[] filesToBeCopied,JFMFile destinationDir) throws ActionCancelledException{
    totalFilesSizes=getFilesSize(filesToBeCopied);
    if(filesToBeCopied.length==0) progress.dispose();
    for(int i=0;i<filesToBeCopied.length;i++){
      JFMFile el=(JFMFile)filesToBeCopied[i];      
      if(el.isDirectory()){
    	JFMFile destFile=destinationDir.mkdir(el.getName());
        //if(!destFile.exists()) destFile.mkdirs();
        copyDir(el,destFile);

----------------------------------------
        f[i].delete();
      }
    }
  }

  private void copyFile(JFMFile fin,JFMFile fout) throws ActionCancelledException {
    if(fout.exists() && !overwriteAll && !skipAll){

      java.text.SimpleDateFormat format=new java.text.SimpleDateFormat("EEE, MMM d, yyyy 'at' hh:mm:ss");

      String message="Target file "+fout.getPath()+"  already exists."+System.getProperty("line.separator")+System.getProperty("line.separator")+
                     "Source last modified date: "+format.format(new java.util.Date(fin.lastModified()))+System.getProperty("line.separator")+
                     "Target last modified date: "+format.format(new java.util.Date(fout.lastModified()))+System.getProperty("line.separator")+System.getProperty("line.separator")+
                     "What should I do?";
      String[] buttons=new String[]{"Overwrite","Overwrite all","Skip","Skip all","Cancel"};

      int result=JOptionPane.showOptionDialog(progress,message,"File exists",JOptionPane.DEFAULT_OPTION,JOptionPane.INFORMATION_MESSAGE,null,buttons,buttons[2]);

      switch (result){
        case 0:
          break;
        case 1:
          overwriteAll=true;
          break;
        case 2:
          totalBytesWritten+=fin.length();          
          int t_percent=totalFilesSizes!=0?(int)((totalBytesWritten*100)/totalFilesSizes):0;
          progress.setTotalProgresssValue(t_percent);
          return;
        case 3:
          skipAll=true;
          break;
          case 4:
            throw new ActionCancelledException();
      }
    }

    if(fout.exists() && skipAll){
          totalBytesWritten+=fin.length();
          int t_percent=(int)((totalBytesWritten*100)/totalFilesSizes);
          progress.setTotalProgresssValue(t_percent);
          progress.setFileProgresssValue(100);
          return;
    }
      java.io.InputStream in=null;
      java.io.OutputStream out=null;
      try{
        in=fin.getInputStream();
        //WAS new FileOutputStream(fout.getPath(),append);
        out=fout.getOutputStream();
        progress.setFileProgresssValue(0);
        curentlyCopiedFile=fout;
        byte[] data=new byte[1024];
        int read=0;
        long bytesWrote=0;
        long f_length=fin.length();

        /**@todo Maybe async IO would be nice here**/
        while((read=in.read(data))>=0){
          if(cancel){
            throw new ActionCancelledException();
          }

          out.write(data,0,read);
          bytesWrote+=read;
          totalBytesWritten+=read;
          int f_percent=(int)((bytesWrote*100)/f_length);
          int t_percent=(int)((totalBytesWritten*100)/totalFilesSizes);
          progress.setFileProgresssValue(f_percent);
          progress.setTotalProgresssValue(t_percent);
        }
        progress.setFileProgresssValue(100);
      }catch(ActionCancelledException ex){
    	  ex.printStackTrace();
          curentlyCopiedFile.delete();
          throw ex;
      }catch(Exception ex){
        JOptionPane.showMessageDialog(progress,"Error while writing "+fout.getPath(),"Error",JOptionPane.ERROR_MESSAGE);
        curentlyCopiedFile.delete();
      }finally{
        try {
          in.close();          
        }
        catch (Exception ignored) {}
        try {
            out.close();
        }
        catch (Exception ignored) {}
      }
  }

  private void moveFiles(JFMFile[] filesToBeCopied,JFMFile destinationDir) throws ActionCancelledException{
    totalFilesSizes=getFilesSize(filesToBeCopied);
    if(filesToBeCopied.length==0) progress.dispose();
    for(int i=0;i<filesToBeCopied.length;i++){
      JFMFile el=(JFMFile)filesToBeCopied[i];      
      if(el.isDirectory()){
    	JFMFile destFile=destinationDir.mkdir(el.getName());
        //if(!destFile.exists()) destFile.mkdirs();
        copyDir(el,destFile);

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364831
src/org/jfm/po/CopyAction.java 146 156
src/org/jfm/po/copy/CopyProgressDialog.java 99 108
----------------------------------------
      int result=JOptionPane.showOptionDialog(progress,message,"File exists",JOptionPane.DEFAULT_OPTION,JOptionPane.INFORMATION_MESSAGE,null,buttons,buttons[2]);

      switch (result){
        case 0:
          break;
        case 1:
          overwriteAll=true;
          break;
        case 2:
          totalBytesWritten+=fin.length();          
          int t_percent=totalFilesSizes!=0?(int)((totalBytesWritten*100)/totalFilesSizes):0;

----------------------------------------
      int result=JOptionPane.showOptionDialog(this,message,"File exists",JOptionPane.DEFAULT_OPTION,JOptionPane.INFORMATION_MESSAGE,null,buttons,buttons[2]);
      switch (result){
        case 0:
          break;
        case 1:
          overwriteAll=true;
          break;
        case 2:
          totalBytesWritten+=fin.length();
          int t_percent=(int)((totalBytesWritten*100)/totalFilesSizes);

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364832
src/org/jfm/po/CopyAction.java 117 124
src/org/jfm/po/copy/CopyProgressDialog.java 71 78
----------------------------------------
    return totalSizes;
  }

  private void copyDir(JFMFile dir,JFMFile dest) throws ActionCancelledException{
    JFMFile[] f=dir.listFiles();
    if(f==null) return;
    //File destFile=new File(toDir.getPath()+(toDir.getPath().endsWith(File.separator)?"":File.separator)+el.getName());
    for(int i=0;i<f.length;i++){    	      

----------------------------------------
    this.setVisible(true);
  }

  private void copyDir(JFMFile dir,JFMFile dest) throws CopyCancelledException{
    JFMFile[] f=dir.listFiles();
    if(f==null) return;
    //File destFile=new File(toDir.getPath()+(toDir.getPath().endsWith(File.separator)?"":File.separator)+el.getName());
    for(int i=0;i<f.length;i++){

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364833
src/org/jfm/po/CopyAction.java 34 55
src/org/jfm/po/HelpAction.java 27 44
----------------------------------------
  public Object getValue(String key) {
    return null;
  }
  public void putValue(String key, Object value) {
  }

  public void setEnabled(boolean b) {
    enabled=b;
  }
  public boolean isEnabled() {
    return enabled;
  }
  public void addPropertyChangeListener(PropertyChangeListener listener) {
  }
  public void removePropertyChangeListener(PropertyChangeListener listener) {
  }

  public void actionPerformed(ActionEvent e) {
     //the vectors should never be null, and should contain at least one element
     //it's the views bussiness to do this and THEY MUST DO THIS,unless it could get ugly

    final JFMFile[] filesToBeCopied =Options.getActivePanel().getSelectedFiles();

----------------------------------------
  public Object getValue(String key) {
    return null;
  }
  public void putValue(String key, Object value) {
  }
  public void setEnabled(boolean b) {
    enabled=b;
  }
  public boolean isEnabled() {
    return enabled;
  }
  public void addPropertyChangeListener(PropertyChangeListener listener) {
  }
  public void removePropertyChangeListener(PropertyChangeListener listener) {
  }

  public void actionPerformed(ActionEvent e) {
	  final HelpBrowser browser=new HelpBrowser(null,"JFM Help",false);

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364834
src/org/jfm/po/CopyAction.java 31 51
src/org/jfm/po/FilePropertiesAction.java 22 42
----------------------------------------
  public CopyAction() {
  }
  private boolean enabled=true;
  public Object getValue(String key) {
    return null;
  }
  public void putValue(String key, Object value) {
  }

  public void setEnabled(boolean b) {
    enabled=b;
  }
  public boolean isEnabled() {
    return enabled;
  }
  public void addPropertyChangeListener(PropertyChangeListener listener) {
  }
  public void removePropertyChangeListener(PropertyChangeListener listener) {
  }

  public void actionPerformed(ActionEvent e) {

----------------------------------------
  public FilePropertiesAction() {
  }

  private boolean enabled=true;
  public Object getValue(String key) {
    return null;
  }
  public void putValue(String key, Object value) {
  }
  public void setEnabled(boolean b) {
    enabled=b;
  }
  public boolean isEnabled() {
    return enabled;
  }
  public void addPropertyChangeListener(PropertyChangeListener listener) {
  }
  public void removePropertyChangeListener(PropertyChangeListener listener) {
  }

  public void actionPerformed(ActionEvent e) {

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364835
src/org/jfm/po/CopyAction.java 31 51
src/org/jfm/po/QuitAction.java 21 40
----------------------------------------
  public CopyAction() {
  }
  private boolean enabled=true;
  public Object getValue(String key) {
    return null;
  }
  public void putValue(String key, Object value) {
  }

  public void setEnabled(boolean b) {
    enabled=b;
  }
  public boolean isEnabled() {
    return enabled;
  }
  public void addPropertyChangeListener(PropertyChangeListener listener) {
  }
  public void removePropertyChangeListener(PropertyChangeListener listener) {
  }

  public void actionPerformed(ActionEvent e) {

----------------------------------------
  public QuitAction() {
  }
  private boolean enabled=true;
  public Object getValue(String key) {
    return null;
  }
  public void putValue(String key, Object value) {
  }
  public void setEnabled(boolean b) {
    enabled=b;
  }
  public boolean isEnabled() {
    return enabled;
  }
  public void addPropertyChangeListener(PropertyChangeListener listener) {
  }
  public void removePropertyChangeListener(PropertyChangeListener listener) {
  }
 
  public void actionPerformed(ActionEvent e) {

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364836
src/org/jfm/po/CopyAction.java 31 51
src/org/jfm/po/DeleteAction.java 22 41
----------------------------------------
  public CopyAction() {
  }
  private boolean enabled=true;
  public Object getValue(String key) {
    return null;
  }
  public void putValue(String key, Object value) {
  }

  public void setEnabled(boolean b) {
    enabled=b;
  }
  public boolean isEnabled() {
    return enabled;
  }
  public void addPropertyChangeListener(PropertyChangeListener listener) {
  }
  public void removePropertyChangeListener(PropertyChangeListener listener) {
  }

  public void actionPerformed(ActionEvent e) {

----------------------------------------
  public DeleteAction() {
  }
  private boolean enabled=true;
  public Object getValue(String key) {
    return null;
  }
  public void putValue(String key, Object value) {
  }
  public void setEnabled(boolean b) {
    enabled=b;
  }
  public boolean isEnabled() {
    return enabled;
  }
  public void addPropertyChangeListener(PropertyChangeListener listener) {
  }
  public void removePropertyChangeListener(PropertyChangeListener listener) {
  }

  public void actionPerformed(ActionEvent e) {

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364838
src/org/jfm/po/HelpAction.java 27 44
src/org/jfm/po/MoveAction.java 37 56
----------------------------------------
  public Object getValue(String key) {
    return null;
  }
  public void putValue(String key, Object value) {
  }
  public void setEnabled(boolean b) {
    enabled=b;
  }
  public boolean isEnabled() {
    return enabled;
  }
  public void addPropertyChangeListener(PropertyChangeListener listener) {
  }
  public void removePropertyChangeListener(PropertyChangeListener listener) {
  }

  public void actionPerformed(ActionEvent e) {
	  final HelpBrowser browser=new HelpBrowser(null,"JFM Help",false);

----------------------------------------
  public Object getValue(String key) {
    //should return something else in here.
    return null;
  }
  public void putValue(String key, Object value) {
  }
  public void setEnabled(boolean b) {
    enabled=b;
  }
  public boolean isEnabled() {
    return true;
  }
  public void addPropertyChangeListener(PropertyChangeListener listener) {
  }
  public void removePropertyChangeListener(PropertyChangeListener listener) {
  }

  public void actionPerformed(ActionEvent e) {

    final JFMFile[] filesToBeMoved=Options.getActivePanel().getSelectedFiles();

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364842
src/org/jfm/po/copy/CopyConfirmDialog.java 58 71
src/org/jfm/views/FontDialog.java 79 91
----------------------------------------
    okButton.setText("OK");
    okButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        okButton_actionPerformed(e);
      }
    });
    cancelButton.setText("Cancel");
    cancelButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        cancelButton_actionPerformed(e);
      }
    });
    
    jLabel1.setText("Copy file(s):");

----------------------------------------
    sizeField.setValue(new Integer(10));
    okButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        okButton_actionPerformed(e);
      }
    });
    cancelButton.setText("Cancel");
    cancelButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        cancelButton_actionPerformed(e);
      }
    });
    panel.setLayout(null);   

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364843
src/org/jfm/po/copy/CopyConfirmDialog.java 32 47
src/org/jfm/po/FilePropertiesDialog.java 34 49
----------------------------------------
  private boolean cancelled=true;

  public CopyConfirmDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
      pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

  public CopyConfirmDialog() {
    this(null, "", false);
  }

----------------------------------------
  private GridBagLayout gridBagLayout1 = new GridBagLayout();

  public FilePropertiesDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
      pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

  public FilePropertiesDialog() {
    this(null, "", false);
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364844
src/org/jfm/po/copy/CopyConfirmDialog.java 34 47
src/org/jfm/po/ProgressActionDialog.java 57 70
----------------------------------------
  public CopyConfirmDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
      pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

  public CopyConfirmDialog() {
    this(null, "", false);
  }

----------------------------------------
  public ProgressActionDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
      pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

  public ProgressActionDialog() {
    this(null, "", false);
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364845
src/org/jfm/po/copy/CopyConfirmDialog.java 34 47
src/org/jfm/po/copy/CopyProgressDialog.java 179 192
----------------------------------------
  public CopyConfirmDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
      pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

  public CopyConfirmDialog() {
    this(null, "", false);
  }

----------------------------------------
  public CopyProgressDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
      pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

  public CopyProgressDialog() {
    this(null, "", false);
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364854
src/org/jfm/po/ProgressActionDialog.java 57 73
src/org/jfm/po/FilePropertiesDialog.java 36 52
----------------------------------------
  public ProgressActionDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
      pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

  public ProgressActionDialog() {
    this(null, "", false);
  }
  
  void jbInit() throws Exception {
    panel1.setLayout(new BorderLayout());

----------------------------------------
  public FilePropertiesDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
      pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

  public FilePropertiesDialog() {
    this(null, "", false);
  }

  void jbInit() throws Exception {
    titledBorder1 = new TitledBorder(BorderFactory.createLineBorder(new Color(153, 153, 153),2),"Attributes");

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364846
src/org/jfm/po/copy/CopyProgressDialog.java 179 194
src/org/jfm/po/FilePropertiesDialog.java 36 52
----------------------------------------
  public CopyProgressDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
      pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

  public CopyProgressDialog() {
    this(null, "", false);
  }
  void jbInit() throws Exception {
    panel1.setLayout(new BorderLayout());

----------------------------------------
  public FilePropertiesDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
      pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

  public FilePropertiesDialog() {
    this(null, "", false);
  }

  void jbInit() throws Exception {
    titledBorder1 = new TitledBorder(BorderFactory.createLineBorder(new Color(153, 153, 153),2),"Attributes");

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364847
src/org/jfm/po/copy/CopyProgressDialog.java 99 108
src/org/jfm/po/MoveAction.java 155 165
----------------------------------------
      int result=JOptionPane.showOptionDialog(this,message,"File exists",JOptionPane.DEFAULT_OPTION,JOptionPane.INFORMATION_MESSAGE,null,buttons,buttons[2]);
      switch (result){
        case 0:
          break;
        case 1:
          overwriteAll=true;
          break;
        case 2:
          totalBytesWritten+=fin.length();
          int t_percent=(int)((totalBytesWritten*100)/totalFilesSizes);

----------------------------------------
      int result=JOptionPane.showOptionDialog(progress,message,"File exists",JOptionPane.DEFAULT_OPTION,JOptionPane.INFORMATION_MESSAGE,null,buttons,buttons[2]);

      switch (result){
        case 0:
          break;
        case 1:
          overwriteAll=true;
          break;
        case 2:
          totalBytesWritten+=fin.length();          
          int t_percent=totalFilesSizes!=0?(int)((totalBytesWritten*100)/totalFilesSizes):0;

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364848
src/org/jfm/po/copy/CopyProgressDialog.java 71 78
src/org/jfm/po/MoveAction.java 124 131
----------------------------------------
    this.setVisible(true);
  }

  private void copyDir(JFMFile dir,JFMFile dest) throws CopyCancelledException{
    JFMFile[] f=dir.listFiles();
    if(f==null) return;
    //File destFile=new File(toDir.getPath()+(toDir.getPath().endsWith(File.separator)?"":File.separator)+el.getName());
    for(int i=0;i<f.length;i++){

----------------------------------------
    return totalSizes;
  }

  private void copyDir(JFMFile dir,JFMFile dest) throws ActionCancelledException{
    JFMFile[] f=dir.listFiles();
    if(f==null) return;
    //File destFile=new File(toDir.getPath()+(toDir.getPath().endsWith(File.separator)?"":File.separator)+el.getName());
    for(int i=0;i<f.length;i++){    	      

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364849
src/org/jfm/po/FilePropertiesAction.java 8 42
src/org/jfm/po/DeleteAction.java 9 41
----------------------------------------
import org.jfm.filesystems.*;


/**
 * <p>Title: Java File Manager</p>
 * <p>Description: </p>
 * <p>Copyright: Copyright (c) 2001</p>
 * <p>Company: Home</p>
 * @author Giurgiu Sergiu
 * @version 1.0
 */

public class FilePropertiesAction implements Action {

  public FilePropertiesAction() {
  }

  private boolean enabled=true;
  public Object getValue(String key) {
    return null;
  }
  public void putValue(String key, Object value) {
  }
  public void setEnabled(boolean b) {
    enabled=b;
  }
  public boolean isEnabled() {
    return enabled;
  }
  public void addPropertyChangeListener(PropertyChangeListener listener) {
  }
  public void removePropertyChangeListener(PropertyChangeListener listener) {
  }

  public void actionPerformed(ActionEvent e) {

----------------------------------------
import org.jfm.filesystems.JFMFile;

/**
 * Title:        Java File Manager
 * Description:
 * Copyright:    Copyright (c) 2001
 * Company:      Home
 * @author Giurgiu Sergiu
 * @version 1.0
 */

public class DeleteAction implements Action {

  public DeleteAction() {
  }
  private boolean enabled=true;
  public Object getValue(String key) {
    return null;
  }
  public void putValue(String key, Object value) {
  }
  public void setEnabled(boolean b) {
    enabled=b;
  }
  public boolean isEnabled() {
    return enabled;
  }
  public void addPropertyChangeListener(PropertyChangeListener listener) {
  }
  public void removePropertyChangeListener(PropertyChangeListener listener) {
  }

  public void actionPerformed(ActionEvent e) {

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364852
src/org/jfm/po/CommandOutputViewDialog.java 23 38
src/org/jfm/views/FontDialog.java 46 61
----------------------------------------
  public CommandOutputViewDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
      //pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

  public CommandOutputViewDialog() {
    this(null, "", false);
  }

  public void setMonitoringProcess(Process p){

----------------------------------------
  public FontDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
//      pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

  public FontDialog() {
    this(null, "", false);
  }

  public static Font showDialog(Frame parent,String title,boolean modal){

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364853
src/org/jfm/po/CommandOutputViewDialog.java 21 36
src/org/jfm/views/fview/FileViewDialog.java 34 50
----------------------------------------
  private Process process=null;

  public CommandOutputViewDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
      //pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

  public CommandOutputViewDialog() {
    this(null, "", false);
  }

----------------------------------------
  private char[] wordSeparatorChars=new char[]{' ','.',',',':','+','-','=','\\','/','?','<','>',';','"','*','(',')','`','\'','\t','\n'};


  public FileViewDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
    //  pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

  public FileViewDialog() {
    this(null, "", false);
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364858
src/org/jfm/po/FilePropertiesAction.java 8 42
src/org/jfm/po/QuitAction.java 8 40
----------------------------------------
import org.jfm.filesystems.*;


/**
 * <p>Title: Java File Manager</p>
 * <p>Description: </p>
 * <p>Copyright: Copyright (c) 2001</p>
 * <p>Company: Home</p>
 * @author Giurgiu Sergiu
 * @version 1.0
 */

public class FilePropertiesAction implements Action {

  public FilePropertiesAction() {
  }

  private boolean enabled=true;
  public Object getValue(String key) {
    return null;
  }
  public void putValue(String key, Object value) {
  }
  public void setEnabled(boolean b) {
    enabled=b;
  }
  public boolean isEnabled() {
    return enabled;
  }
  public void addPropertyChangeListener(PropertyChangeListener listener) {
  }
  public void removePropertyChangeListener(PropertyChangeListener listener) {
  }

  public void actionPerformed(ActionEvent e) {

----------------------------------------
import java.awt.event.ActionEvent;

/**
 * Title:        Java File Manager
 * Description:  
 * Copyright:    Copyright (c) 2001
 * Company:      Home
 * @author Giurgiu Sergiu
 * @version 1.0
 */

public class QuitAction implements Action {

  public QuitAction() {
  }
  private boolean enabled=true;
  public Object getValue(String key) {
    return null;
  }
  public void putValue(String key, Object value) {
  }
  public void setEnabled(boolean b) {
    enabled=b;
  }
  public boolean isEnabled() {
    return enabled;
  }
  public void addPropertyChangeListener(PropertyChangeListener listener) {
  }
  public void removePropertyChangeListener(PropertyChangeListener listener) {
  }
 
  public void actionPerformed(ActionEvent e) {

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364861
src/org/jfm/views/FontDialog.java 46 61
src/org/jfm/views/fview/FindTextDialog.java 38 53
----------------------------------------
  public FontDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
//      pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

  public FontDialog() {
    this(null, "", false);
  }

  public static Font showDialog(Frame parent,String title,boolean modal){

----------------------------------------
  public FindTextDialog(Frame owner, String title, boolean modal) {
    super(owner, title, modal);
    try {
      jbInit();
      //pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

  public FindTextDialog() {
    this(null, "", false);
  }
  
  public void setFindListener(FindListener l){

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364862
src/org/jfm/views/FontDialog.java 46 59
src/org/jfm/views/fview/FileViewDialog.java 37 50
----------------------------------------
  public FontDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
//      pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

  public FontDialog() {
    this(null, "", false);
  }

----------------------------------------
  public FileViewDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
    //  pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

  public FileViewDialog() {
    this(null, "", false);
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364863
src/org/jfm/views/fview/FileViewDialog.java 34 50
src/org/jfm/views/fview/FindTextDialog.java 36 51
----------------------------------------
  private char[] wordSeparatorChars=new char[]{' ','.',',',':','+','-','=','\\','/','?','<','>',';','"','*','(',')','`','\'','\t','\n'};


  public FileViewDialog(Frame frame, String title, boolean modal) {
    super(frame, title, modal);
    try {
      jbInit();
    //  pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

  public FileViewDialog() {
    this(null, "", false);
  }

----------------------------------------
  private int count=0;
  
  public FindTextDialog(Frame owner, String title, boolean modal) {
    super(owner, title, modal);
    try {
      jbInit();
      //pack();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

  public FindTextDialog() {
    this(null, "", false);
  }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364864
src/org/jfm/views/tree/TreeViewPanel.java 188 203
src/org/jfm/views/list/detailview/DetailsTable.java 184 198
----------------------------------------
      putActionMapAction(a.getParent());
    }
  }

    private class ChangePanelAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){
        //System.err.println("ChangePanelAction");
        ChangePanelEvent ev=new ChangePanelEvent();

----------------------------------------
          DetailsTable.this.repaint();
      }
    }
    
    private class MarkAllRowAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){
      	DetailsTableModel model=((DetailsTableModel)DetailsTable.this.getModel());

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364865
src/org/jfm/views/tree/TreeViewPanel.java 188 203
src/org/jfm/views/list/detailview/DetailsTable.java 239 253
----------------------------------------
      putActionMapAction(a.getParent());
    }
  }

    private class ChangePanelAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){
        //System.err.println("ChangePanelAction");
        ChangePanelEvent ev=new ChangePanelEvent();

----------------------------------------
          DetailsTable.this.repaint();
      }
    }
	
    private class RefreshAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){
        JFMFile el=(JFMFile)((DetailsTableModel)DetailsTable.this.getModel()).getWorkingDirectory();

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364866
src/org/jfm/views/tree/TreeViewPanel.java 188 203
src/org/jfm/views/list/briefview/BriefViewListComponent.java 248 262
----------------------------------------
      putActionMapAction(a.getParent());
    }
  }

    private class ChangePanelAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){
        //System.err.println("ChangePanelAction");
        ChangePanelEvent ev=new ChangePanelEvent();

----------------------------------------
          BriefViewListComponent.this.repaint();                    
      }
    }
    
    private class RefreshAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){
        JFMFile el=(JFMFile)((BriefViewListComponentModel)BriefViewListComponent.this.getModel()).getWorkingDirectory();

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364867
src/org/jfm/views/tree/TreeViewPanel.java 189 203
src/org/jfm/views/list/detailview/DetailsTable.java 289 302
----------------------------------------
    }
  }

    private class ChangePanelAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){
        //System.err.println("ChangePanelAction");
        ChangePanelEvent ev=new ChangePanelEvent();

----------------------------------------
      }
    }

    private class UpDirectoryAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){
        processActionOnRow(0);

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364868
src/org/jfm/views/tree/TreeViewPanel.java 189 203
src/org/jfm/views/list/briefview/BriefViewListComponent.java 298 310
----------------------------------------
    }
  }

    private class ChangePanelAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){
        //System.err.println("ChangePanelAction");
        ChangePanelEvent ev=new ChangePanelEvent();

----------------------------------------
      }
    }

    private class UpDirectoryAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void actionPerformed(java.awt.event.ActionEvent e){        
        processActionOnRow(0);

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364869
src/org/jfm/views/tree/TreeViewPanel.java 188 201
src/org/jfm/views/list/detailview/DetailsTable.java 149 162
----------------------------------------
      putActionMapAction(a.getParent());
    }
  }

    private class ChangePanelAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
            scrollRectToVisible(cellBounds);
        }
    }
    
    private class MarkAllFilteredRowAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364870
src/org/jfm/views/tree/TreeViewPanel.java 188 201
src/org/jfm/views/list/detailview/DetailsTable.java 210 223
----------------------------------------
      putActionMapAction(a.getParent());
    }
  }

    private class ChangePanelAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
          DetailsTable.this.repaint();
      }
    }
    
    private class MarkRowAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364871
src/org/jfm/views/tree/TreeViewPanel.java 188 201
src/org/jfm/views/list/detailview/DetailsTable.java 254 268
----------------------------------------
      putActionMapAction(a.getParent());
    }
  }

    private class ChangePanelAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
        ((DetailsTableModel)DetailsTable.this.getModel()).browseDirectory(el);
      }
    }


    private class ChangePanelAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364915
src/org/jfm/views/list/detailview/DetailsTable.java 149 162
src/org/jfm/views/list/briefview/BriefViewListComponent.java 194 207
----------------------------------------
            scrollRectToVisible(cellBounds);
        }
    }
    
    private class MarkAllFilteredRowAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
          BriefViewListComponent.this.repaint();                    
      }
    }
    
    private class MarkAllRowAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364872
src/org/jfm/views/tree/TreeViewPanel.java 188 201
src/org/jfm/views/list/briefview/BriefViewListComponent.java 194 207
----------------------------------------
      putActionMapAction(a.getParent());
    }
  }

    private class ChangePanelAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
          BriefViewListComponent.this.repaint();                    
      }
    }
    
    private class MarkAllRowAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364916
src/org/jfm/views/list/detailview/DetailsTable.java 254 268
src/org/jfm/views/list/briefview/BriefViewListComponent.java 194 207
----------------------------------------
        ((DetailsTableModel)DetailsTable.this.getModel()).browseDirectory(el);
      }
    }


    private class ChangePanelAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
          BriefViewListComponent.this.repaint();                    
      }
    }
    
    private class MarkAllRowAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364910
src/org/jfm/views/list/detailview/DetailsTable.java 254 268
src/org/jfm/views/list/briefview/BriefViewListComponent.java 220 233
----------------------------------------
        ((DetailsTableModel)DetailsTable.this.getModel()).browseDirectory(el);
      }
    }


    private class ChangePanelAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
          BriefViewListComponent.this.repaint();                    
      }
    }
    
    private class MarkRowAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364909
src/org/jfm/views/list/detailview/DetailsTable.java 149 162
src/org/jfm/views/list/briefview/BriefViewListComponent.java 220 233
----------------------------------------
            scrollRectToVisible(cellBounds);
        }
    }
    
    private class MarkAllFilteredRowAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
          BriefViewListComponent.this.repaint();                    
      }
    }
    
    private class MarkRowAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364873
src/org/jfm/views/tree/TreeViewPanel.java 188 201
src/org/jfm/views/list/briefview/BriefViewListComponent.java 220 233
----------------------------------------
      putActionMapAction(a.getParent());
    }
  }

    private class ChangePanelAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
          BriefViewListComponent.this.repaint();                    
      }
    }
    
    private class MarkRowAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364896
src/org/jfm/views/list/detailview/DetailsTable.java 210 223
src/org/jfm/views/list/briefview/BriefViewListComponent.java 263 277
----------------------------------------
          DetailsTable.this.repaint();
      }
    }
    
    private class MarkRowAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
        ((BriefViewListComponentModel)BriefViewListComponent.this.getModel()).browseDirectory(el);
      }
    }


    private class ChangePanelAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364874
src/org/jfm/views/tree/TreeViewPanel.java 188 201
src/org/jfm/views/list/briefview/BriefViewListComponent.java 263 277
----------------------------------------
      putActionMapAction(a.getParent());
    }
  }

    private class ChangePanelAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
        ((BriefViewListComponentModel)BriefViewListComponent.this.getModel()).browseDirectory(el);
      }
    }


    private class ChangePanelAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364875
src/org/jfm/views/tree/TreeViewPanel.java 189 201
src/org/jfm/views/list/detailview/DetailsTable.java 272 284
----------------------------------------
    }
  }

    private class ChangePanelAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
      }
    }

    private class FileAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364876
src/org/jfm/views/tree/TreeViewPanel.java 189 201
src/org/jfm/views/list/briefview/BriefViewListComponent.java 161 173
----------------------------------------
    }
  }

    private class ChangePanelAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
    	}
    }

    private class MarkAllFilteredRowAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364924
src/org/jfm/views/list/detailview/DetailsTable.java 272 284
src/org/jfm/views/list/briefview/BriefViewListComponent.java 161 173
----------------------------------------
      }
    }

    private class FileAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
    	}
    }

    private class MarkAllFilteredRowAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364877
src/org/jfm/views/tree/TreeViewPanel.java 189 201
src/org/jfm/views/list/briefview/BriefViewListComponent.java 281 293
----------------------------------------
    }
  }

    private class ChangePanelAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
      }
    }

    private class FileAction implements Action{
      //requested methods
      public Object getValue(String key){return null;}
      public void putValue(String key, Object value){}
      public void setEnabled(boolean b){}
      public boolean isEnabled(){return true;}
      public void addPropertyChangeListener(java.beans.PropertyChangeListener listener){}
      public void removePropertyChangeListener(java.beans.PropertyChangeListener listener){}

      public void actionPerformed(java.awt.event.ActionEvent e){

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
81
27364878
src/org/jfm/views/list/briefview/BriefViewListRenderer.java 55 80
src/org/jfm/views/list/detailview/DetailsTableCellRenderer.java 71 97
----------------------------------------
    	return c;
    }
    
  /**
   * Retrieves the icon to associate with this file. If the icon returned by the file is <code>null</null> then
   * ask the UIManager to give us an icon (from the LookAndFeel) 
   * @param file The file for which we want get the icon
   * @return the icon associated with the file
   */
  private Icon getIcon(JFMFile file){
  	Icon icon=null;  	
  	icon=file.getIcon();  	
  	if(icon==null){
      if(file.isDirectory()){
        if("..".equals(file.getDisplayName())){
          icon=(Icon)UIManager.get("FileChooser.upFolderIcon");
        }else{
          icon=(Icon)UIManager.get("FileView.directoryIcon");
        }
      }else{
        icon=(Icon)UIManager.get("FileView.fileIcon");
      }  		
  	}
  	return icon;
  }    
}

----------------------------------------
  	return this;
  }

  /**
   * Retrieves the icon to associate with this file. If the icon returned by the file is <code>null</null> then
   * ask the UIManager to give us an icon (from the LookAndFeel) 
   * @param file The file for which we want get the icon
   * @return the icon associated with the file
   */
  private Icon getIcon(JFMFile file){
  	Icon icon=null;  	
  	icon=file.getIcon();  	
  	if(icon==null){
      if(file.isDirectory()){
    	 // System.out.println("name:"+file.getName()+", displayname="+file.getDisplayName());    	  
        if("..".equals(file.getDisplayName())){
          icon=(Icon)UIManager.get("FileChooser.upFolderIcon");
        }else{
          icon=(Icon)UIManager.get("FileView.directoryIcon");
        }
      }else{
        icon=(Icon)UIManager.get("FileView.fileIcon");
      }  		
  	}
  	return icon;
  }
}

----------------------------------------
