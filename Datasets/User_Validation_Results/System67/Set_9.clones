$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995315
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 260 266
src/de/joergjahnke/common/jme/Settings.java 121 127
----------------------------------------
    private ImageIcon getMenuIcon(final String filename) {
        try {
            return new ImageIcon(new ImageIcon(getClass().getResource("/res/drawable/" + filename)).getImage().getScaledInstance(16, 16, Image.SCALE_SMOOTH));
        } catch (Exception e) {
            return null;
        }
    }

----------------------------------------
    public boolean getBoolean(final String key, final boolean defaultValue) {
        try {
            return getBoolean(key);
        } catch (Exception e) {
            return defaultValue;
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995326
src/de/joergjahnke/common/jme/Settings.java 84 90
src/de/joergjahnke/common/jme/Settings.java 121 127
----------------------------------------
    public int getInteger(final String key, final int defaultValue) {
        try {
            return getInteger(key);
        } catch (Exception e) {
            return defaultValue;
        }
    }

----------------------------------------
    public boolean getBoolean(final String key, final boolean defaultValue) {
        try {
            return getBoolean(key);
        } catch (Exception e) {
            return defaultValue;
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995335
src/de/joergjahnke/common/jme/FileSystemHandler.java 189 195
src/de/joergjahnke/common/jme/Settings.java 161 167
----------------------------------------
                if (prgsString.length() > 0) {
                    try {
                        settings.setString(SETTING_PROGRAMS, prgsString.toString());
                    } catch (Exception e) {
                    // we could not save the list of programs on the phone, that's OK
                    }
                }

----------------------------------------
    public String getString(final String key, final String defaultValue) {
        try {
            return getString(key);
        } catch (Exception e) {
            return defaultValue;
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995330
src/de/joergjahnke/common/jme/FormattedTextForm.java 159 165
src/de/joergjahnke/common/jme/Settings.java 161 167
----------------------------------------
                public void commandAction(final Command c, final Item item) {
                    try {
                        midlet.platformRequest(((StringItem)item).getText());
                    } catch (Exception e) {
                        // we could not invoke the browser, that's a pity but we can live with it
                    }
                }

----------------------------------------
    public String getString(final String key, final String defaultValue) {
        try {
            return getString(key);
        } catch (Exception e) {
            return defaultValue;
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995337
src/de/joergjahnke/common/jme/OrientationSensitiveCanvasHelper.java 113 119
src/de/joergjahnke/common/jme/Settings.java 161 167
----------------------------------------
    public void deactivateAccelerometer() {
        try {
            ((javax.microedition.sensor.SensorConnection) this.con).removeDataListener();
            this.con.close();
        } catch (Throwable t) {
        }
    }

----------------------------------------
    public String getString(final String key, final String defaultValue) {
        try {
            return getString(key);
        } catch (Exception e) {
            return defaultValue;
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995413
src/de/joergjahnke/common/jme/Settings.java 84 90
src/de/joergjahnke/common/jme/Settings.java 161 167
----------------------------------------
    public int getInteger(final String key, final int defaultValue) {
        try {
            return getInteger(key);
        } catch (Exception e) {
            return defaultValue;
        }
    }

----------------------------------------
    public String getString(final String key, final String defaultValue) {
        try {
            return getString(key);
        } catch (Exception e) {
            return defaultValue;
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995339
src/de/joergjahnke/common/extendeddevices/WavePlayer.java 64 70
src/de/joergjahnke/common/jme/Settings.java 161 167
----------------------------------------
                        synchronized (buffer) {
                            buffer.reset();
                            try {
                                buffer.wait();
                            } catch (InterruptedException e) {
                            }
                        }

----------------------------------------
    public String getString(final String key, final String defaultValue) {
        try {
            return getString(key);
        } catch (Exception e) {
            return defaultValue;
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995334
src/de/joergjahnke/common/bluetooth/BluetoothDevice.java 158 164
src/de/joergjahnke/common/jme/Settings.java 161 167
----------------------------------------
    public static String getRemoteDeviceName(final RemoteDevice dev) {
        try {
            return dev.getFriendlyName(false) == null ? dev.getBluetoothAddress() : dev.getFriendlyName(false);
        } catch (IOException e) {
            return "unknown";
        }
    }

----------------------------------------
    public String getString(final String key, final String defaultValue) {
        try {
            return getString(key);
        } catch (Exception e) {
            return defaultValue;
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995329
src/de/joergjahnke/common/jme/Settings.java 121 127
src/de/joergjahnke/common/jme/Settings.java 161 167
----------------------------------------
    public boolean getBoolean(final String key, final boolean defaultValue) {
        try {
            return getBoolean(key);
        } catch (Exception e) {
            return defaultValue;
        }
    }

----------------------------------------
    public String getString(final String key, final String defaultValue) {
        try {
            return getString(key);
        } catch (Exception e) {
            return defaultValue;
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995414
src/de/joergjahnke/common/bluetooth/BluetoothClient.java 174 180
src/de/joergjahnke/common/jme/Settings.java 161 167
----------------------------------------
    public void servicesDiscovered(final int transID, final ServiceRecord[] servRecord) {
        try {
            this.serviceRecord = servRecord[0];
        } catch (Exception e) {
            // it may happen that no service record can be retrieved, in this case serviceRecord remains null
        }
    }

----------------------------------------
    public String getString(final String key, final String defaultValue) {
        try {
            return getString(key);
        } catch (Exception e) {
            return defaultValue;
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995328
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 489 494
src/de/joergjahnke/common/jme/Settings.java 161 167
----------------------------------------
            } finally {
                try {
                    saveStream.close();
                } catch (Exception e) {
                }
            }

----------------------------------------
    public String getString(final String key, final String defaultValue) {
        try {
            return getString(key);
        } catch (Exception e) {
            return defaultValue;
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995412
src/de/joergjahnke/common/bluetooth/BluetoothClient.java 149 158
src/de/joergjahnke/common/jme/Settings.java 161 167
----------------------------------------
        synchronized (this.agent) {
            this.agent.searchServices(null, uuids, btDevice, this);

            // wait until the discovery agents notifies us that he is finished or one minute has passed
            try {
                this.agent.wait(getTimeout(), 0);
            } catch (InterruptedException e) {
                // we got interrupted, no problem
            }
        }

----------------------------------------
    public String getString(final String key, final String defaultValue) {
        try {
            return getString(key);
        } catch (Exception e) {
            return defaultValue;
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995333
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 296 301
src/de/joergjahnke/common/jme/Settings.java 161 167
----------------------------------------
        } finally {
            try {
                out.close();
            } catch (Exception e) {
            }
        }

----------------------------------------
    public String getString(final String key, final String defaultValue) {
        try {
            return getString(key);
        } catch (Exception e) {
            return defaultValue;
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995336
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 375 380
src/de/joergjahnke/common/jme/Settings.java 161 167
----------------------------------------
        } finally {
            try {
                in.close();
            } catch (Exception e) {
            }
        }

----------------------------------------
    public String getString(final String key, final String defaultValue) {
        try {
            return getString(key);
        } catch (Exception e) {
            return defaultValue;
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995331
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 510 515
src/de/joergjahnke/common/jme/Settings.java 161 167
----------------------------------------
        } finally {
            try {
                romStream.close();
            } catch (Exception e) {
            }
        }

----------------------------------------
    public String getString(final String key, final String defaultValue) {
        try {
            return getString(key);
        } catch (Exception e) {
            return defaultValue;
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995338
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 241 248
src/de/joergjahnke/common/jme/Settings.java 161 167
----------------------------------------
                    public void windowClosing(final WindowEvent evt) {
                        try {
                            settings.storeToXML(new FileOutputStream(new File(PROPERTIES_NAME)), "Properties for JSwingBoy");
                            stopGame();
                        } catch (Exception e) {
                            // we can't save the settings, that's a pity, but we'll just use defaults on next startup
                        }
                    }

----------------------------------------
    public String getString(final String key, final String defaultValue) {
        try {
            return getString(key);
        } catch (Exception e) {
            return defaultValue;
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995332
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 260 266
src/de/joergjahnke/common/jme/Settings.java 161 167
----------------------------------------
    private ImageIcon getMenuIcon(final String filename) {
        try {
            return new ImageIcon(new ImageIcon(getClass().getResource("/res/drawable/" + filename)).getImage().getScaledInstance(16, 16, Image.SCALE_SMOOTH));
        } catch (Exception e) {
            return null;
        }
    }

----------------------------------------
    public String getString(final String key, final String defaultValue) {
        try {
            return getString(key);
        } catch (Exception e) {
            return defaultValue;
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995411
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 984 991
src/de/joergjahnke/common/jme/Settings.java 161 167
----------------------------------------
                if (evt.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
                    try {
                        Desktop.getDesktop().browse(evt.getURL().toURI());
                    } catch (Throwable t) {
                        // could not display the web page, what to do now???
                        System.err.println("Could not browse to page " + evt.getURL());
                    }
                }

----------------------------------------
    public String getString(final String key, final String defaultValue) {
        try {
            return getString(key);
        } catch (Exception e) {
            return defaultValue;
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995340
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 998 1004
src/de/joergjahnke/common/jme/Settings.java 161 167
----------------------------------------
    private void jMenuItemContentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemContentsActionPerformed
        try {
            java.awt.Desktop.getDesktop().browse(new URI(URL_ONLINE_HELP));
        } catch (Throwable t) {
            JOptionPane.showMessageDialog(this, this.commonResources.getString("CouldNotDisplayOnlineHelp") + " '" + URL_ONLINE_HELP + "'", this.commonResources.getString("CouldNotStartBrowser"), JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemContentsActionPerformed

----------------------------------------
    public String getString(final String key, final String defaultValue) {
        try {
            return getString(key);
        } catch (Exception e) {
            return defaultValue;
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995349
src/de/joergjahnke/common/io/SerializationUtils.java 179 185
src/de/joergjahnke/common/io/SerializationUtils.java 237 243
----------------------------------------
    public static void deserialize(final DataInputStream in, final boolean[] data) throws IOException {
        final int size = in.readInt();

        for (int i = 0; i < size; ++i) {
            data[i] = in.readBoolean();
        }
    }

----------------------------------------
    public static void deserialize(final DataInputStream in, final Serializable[] data) throws IOException {
        final int size = in.readInt();

        for (int i = 0; i < size; ++i) {
            data[i].deserialize(in);
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995347
src/de/joergjahnke/common/io/SerializationUtils.java 63 69
src/de/joergjahnke/common/io/SerializationUtils.java 237 243
----------------------------------------
    public static void deserialize(final DataInputStream in, final byte[] data) throws IOException {
        final int size = in.readInt();

        for (int i = 0; i < size; ++i) {
            data[i] = in.readByte();
        }
    }

----------------------------------------
    public static void deserialize(final DataInputStream in, final Serializable[] data) throws IOException {
        final int size = in.readInt();

        for (int i = 0; i < size; ++i) {
            data[i].deserialize(in);
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995345
src/de/joergjahnke/common/io/SerializationUtils.java 121 127
src/de/joergjahnke/common/io/SerializationUtils.java 237 243
----------------------------------------
    public static void deserialize(final DataInputStream in, final int[] data) throws IOException {
        final int size = in.readInt();

        for (int i = 0; i < size; ++i) {
            data[i] = in.readInt();
        }
    }

----------------------------------------
    public static void deserialize(final DataInputStream in, final Serializable[] data) throws IOException {
        final int size = in.readInt();

        for (int i = 0; i < size; ++i) {
            data[i].deserialize(in);
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995346
src/de/joergjahnke/common/io/SerializationUtils.java 150 156
src/de/joergjahnke/common/io/SerializationUtils.java 237 243
----------------------------------------
    public static void deserialize(final DataInputStream in, final long[] data) throws IOException {
        final int size = in.readInt();

        for (int i = 0; i < size; ++i) {
            data[i] = in.readLong();
        }
    }

----------------------------------------
    public static void deserialize(final DataInputStream in, final Serializable[] data) throws IOException {
        final int size = in.readInt();

        for (int i = 0; i < size; ++i) {
            data[i].deserialize(in);
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995348
src/de/joergjahnke/common/io/SerializationUtils.java 223 228
src/de/joergjahnke/common/io/SerializationUtils.java 237 243
----------------------------------------
    public static void serialize(final DataOutputStream out, final Serializable[] data) throws IOException {
        out.writeInt(data.length);
        for (int i = 0; i < data.length; ++i) {
            data[i].serialize(out);
        }
    }

----------------------------------------
    public static void deserialize(final DataInputStream in, final Serializable[] data) throws IOException {
        final int size = in.readInt();

        for (int i = 0; i < size; ++i) {
            data[i].deserialize(in);
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995343
src/de/joergjahnke/common/io/SerializationUtils.java 208 214
src/de/joergjahnke/common/io/SerializationUtils.java 237 243
----------------------------------------
    public static void deserialize(final DataInputStream in, final String[] data) throws IOException {
        final int size = in.readInt();

        for (int i = 0; i < size; ++i) {
            data[i] = in.readUTF();
        }
    }

----------------------------------------
    public static void deserialize(final DataInputStream in, final Serializable[] data) throws IOException {
        final int size = in.readInt();

        for (int i = 0; i < size; ++i) {
            data[i].deserialize(in);
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995344
src/de/joergjahnke/common/io/SerializationUtils.java 92 98
src/de/joergjahnke/common/io/SerializationUtils.java 237 243
----------------------------------------
    public static void deserialize(final DataInputStream in, final short[] data) throws IOException {
        final int size = in.readInt();

        for (int i = 0; i < size; ++i) {
            data[i] = in.readShort();
        }
    }

----------------------------------------
    public static void deserialize(final DataInputStream in, final Serializable[] data) throws IOException {
        final int size = in.readInt();

        for (int i = 0; i < size; ++i) {
            data[i].deserialize(in);
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995839
src/de/joergjahnke/common/bluetooth/BluetoothOBEXClient.java 110 120
src/de/joergjahnke/gameboy/core/Gameboy.java 206 217
----------------------------------------
    public void disconnect() {
        super.stop();

        try {
            this.clientSession.disconnect(null);
            this.clientSession.close();
        } catch (IOException e) {
            // we had a problem with closing the streams, what to do now?
        }
        this.clientSession = null;
    }

----------------------------------------
    public void run() {
        if (!isRunning()) {
            this.logger.info("Gameboy starting");
            super.run();
            // we use this thread to run the CPU
            try {
                this.cpu.run();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995350
src/de/joergjahnke/gameboy/core/Gameboy.java 206 217
src/de/joergjahnke/common/extendeddevices/WavePlayer.java 60 71
----------------------------------------
    public void run() {
        if (!isRunning()) {
            this.logger.info("Gameboy starting");
            super.run();
            // we use this thread to run the CPU
            try {
                this.cpu.run();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

----------------------------------------
                    while (dataLine.isOpen()) {
                        final byte[] data = buffer.toByteArray();

                        dataLine.write(data, 0, data.length);
                        synchronized (buffer) {
                            buffer.reset();
                            try {
                                buffer.wait();
                            } catch (InterruptedException e) {
                            }
                        }
                    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995355
src/de/joergjahnke/gameboy/core/CPU.java 507 514
src/de/joergjahnke/gameboy/core/CPU.java 521 528
----------------------------------------
    private int popByte() {
        final int sp_ = this.sp;
        final int result = readByte(sp_);

        this.sp = (sp_ + 1) & 0xffff;

        return result;
    }

----------------------------------------
    private int popWord() {
        final int sp_ = this.sp;
        final int result = readByte(sp_) + (readByte(sp_ + 1) << 8);

        this.sp = (sp_ + 2) & 0xffff;

        return result;
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995356
src/de/joergjahnke/gameboy/core/Gameboy.java 269 280
src/de/joergjahnke/gameboy/core/Gameboy.java 282 293
----------------------------------------
    public void serialize(final DataOutputStream out) throws IOException {
        this.cpu.serialize(out);
        SerializationUtils.setMarker(out);
        this.video.serialize(out);
        SerializationUtils.setMarker(out);
        this.sound.serialize(out);
        SerializationUtils.setMarker(out);
        this.joypad.serialize(out);
        SerializationUtils.setMarker(out);
        out.writeInt(this.soundSampleRate);
        SerializationUtils.setMarker(out);
    }

----------------------------------------
    public void deserialize(final DataInputStream in) throws IOException {
        this.cpu.deserialize(in);
        SerializationUtils.verifyMarker(in);
        this.video.deserialize(in);
        SerializationUtils.verifyMarker(in);
        this.sound.deserialize(in);
        SerializationUtils.verifyMarker(in);
        this.joypad.deserialize(in);
        SerializationUtils.verifyMarker(in);
        this.soundSampleRate = in.readInt();
        SerializationUtils.verifyMarker(in);
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995358
src/de/joergjahnke/gameboy/core/Joypad.java 90 97
src/de/joergjahnke/gameboy/core/Joypad.java 113 120
----------------------------------------
    public void setDirections(final int directions) {
        if (directions != this.directions) {
            this.directions = directions;
            this.gameboy.getCPU().writeIO(0xff00, (byte) (0x10 + directions));
            setChanged(true);
            notifyObservers(new Integer(directions));
        }
    }

----------------------------------------
    public void setButtons(final int buttons) {
        if (buttons != this.buttons) {
            this.buttons = buttons;
            this.gameboy.getCPU().writeIO(0xff00, (byte) (0x20 + buttons));
            setChanged(true);
            notifyObservers(new Integer(buttons));
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995357
src/de/joergjahnke/gameboy/core/Joypad.java 91 96
src/de/joergjahnke/gameboy/core/Joypad.java 113 120
----------------------------------------
        if (directions != this.directions) {
            this.directions = directions;
            this.gameboy.getCPU().writeIO(0xff00, (byte) (0x10 + directions));
            setChanged(true);
            notifyObservers(new Integer(directions));
        }

----------------------------------------
    public void setButtons(final int buttons) {
        if (buttons != this.buttons) {
            this.buttons = buttons;
            this.gameboy.getCPU().writeIO(0xff00, (byte) (0x20 + buttons));
            setChanged(true);
            notifyObservers(new Integer(buttons));
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995359
src/de/joergjahnke/gameboy/core/CPU.java 641 649
src/de/joergjahnke/gameboy/core/CPU.java 657 666
----------------------------------------
    private int operationINC(final int data) {
        final int value = (data + 1) & 0xff;

        this.f &= CARRY;
        this.f |= (value == 0 ? ZERO : 0);
        this.f |= ((value & 0x0f) == 0 ? HALFCARRY : 0);

        return value;
    }

----------------------------------------
    private int operationDEC(final int data) {
        final int value = (data - 1) & 0xff;

        this.f &= CARRY;
        this.f |= NEGATIVE;
        this.f |= (value == 0 ? ZERO : 0);
        this.f |= ((value & 0x0f) == 0x0f ? HALFCARRY : 0);

        return value;
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995360
src/de/joergjahnke/gameboy/core/CPU.java 688 694
src/de/joergjahnke/gameboy/core/CPU.java 702 708
----------------------------------------
    private int operationSLA(final int data) {
        final int value = (data << 1) & 0xff;

        this.f = ((value == 0 ? ZERO : 0) + (data >= 0x80 ? CARRY : 0));

        return value;
    }

----------------------------------------
    private int operationRLC(final int data) {
        final int value = ((data << 1) + (data >> 7)) & 0xff;

        this.f = ((value == 0 ? ZERO : 0) + (data >= 0x80 ? CARRY : 0));

        return value;
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995361
src/de/joergjahnke/gameboy/core/CPU.java 1763 1770
src/de/joergjahnke/gameboy/core/CPU.java 1781 1788
----------------------------------------
                    case 0x13: {
                        final int value = ((this.d << 8) + this.e + 1) & 0xffff;

                        this.d = (value >> 8);
                        this.e = (value & 0xff);
                        this.cycles += 8;
                        break;
                    }

----------------------------------------
                    case 0x0b: {
                        final int value = ((this.b << 8) + this.c - 1) & 0xffff;

                        this.b = (value >> 8);
                        this.c = (value & 0xff);
                        this.cycles += 8;
                        break;
                    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995484
src/de/joergjahnke/gameboy/core/CPU.java 1763 1770
src/de/joergjahnke/gameboy/core/CPU.java 1755 1762
----------------------------------------
                    case 0x13: {
                        final int value = ((this.d << 8) + this.e + 1) & 0xffff;

                        this.d = (value >> 8);
                        this.e = (value & 0xff);
                        this.cycles += 8;
                        break;
                    }

----------------------------------------
                    case 0x03: {
                        final int value = ((this.b << 8) + this.c + 1) & 0xffff;

                        this.b = (value >> 8);
                        this.c = (value & 0xff);
                        this.cycles += 8;
                        break;
                    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995362
src/de/joergjahnke/gameboy/core/CPU.java 1781 1788
src/de/joergjahnke/gameboy/core/CPU.java 1755 1762
----------------------------------------
                    case 0x0b: {
                        final int value = ((this.b << 8) + this.c - 1) & 0xffff;

                        this.b = (value >> 8);
                        this.c = (value & 0xff);
                        this.cycles += 8;
                        break;
                    }

----------------------------------------
                    case 0x03: {
                        final int value = ((this.b << 8) + this.c + 1) & 0xffff;

                        this.b = (value >> 8);
                        this.c = (value & 0xff);
                        this.cycles += 8;
                        break;
                    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995364
src/de/joergjahnke/gameboy/core/CPU.java 1781 1788
src/de/joergjahnke/gameboy/core/CPU.java 1789 1796
----------------------------------------
                    case 0x0b: {
                        final int value = ((this.b << 8) + this.c - 1) & 0xffff;

                        this.b = (value >> 8);
                        this.c = (value & 0xff);
                        this.cycles += 8;
                        break;
                    }

----------------------------------------
                    case 0x1b: {
                        final int value = ((this.d << 8) + this.e - 1) & 0xffff;

                        this.d = (value >> 8);
                        this.e = (value & 0xff);
                        this.cycles += 8;
                        break;
                    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995365
src/de/joergjahnke/gameboy/core/CPU.java 1755 1762
src/de/joergjahnke/gameboy/core/CPU.java 1789 1796
----------------------------------------
                    case 0x03: {
                        final int value = ((this.b << 8) + this.c + 1) & 0xffff;

                        this.b = (value >> 8);
                        this.c = (value & 0xff);
                        this.cycles += 8;
                        break;
                    }

----------------------------------------
                    case 0x1b: {
                        final int value = ((this.d << 8) + this.e - 1) & 0xffff;

                        this.d = (value >> 8);
                        this.e = (value & 0xff);
                        this.cycles += 8;
                        break;
                    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995363
src/de/joergjahnke/gameboy/core/CPU.java 1763 1770
src/de/joergjahnke/gameboy/core/CPU.java 1789 1796
----------------------------------------
                    case 0x13: {
                        final int value = ((this.d << 8) + this.e + 1) & 0xffff;

                        this.d = (value >> 8);
                        this.e = (value & 0xff);
                        this.cycles += 8;
                        break;
                    }

----------------------------------------
                    case 0x1b: {
                        final int value = ((this.d << 8) + this.e - 1) & 0xffff;

                        this.d = (value >> 8);
                        this.e = (value & 0xff);
                        this.cycles += 8;
                        break;
                    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995366
src/de/joergjahnke/gameboy/core/CPU.java 1303 1310
src/de/joergjahnke/gameboy/core/CPU.java 1925 1931
----------------------------------------
                    case 0x08: {
                        final int pc_ = this.pc;

                        writeWord((memory_[pc_] & 0xff) + ((memory_[pc_ + 1] & 0xff) << 8), this.sp);
                        this.pc += 2;
                        this.cycles += 20;
                        break;
                    }

----------------------------------------
                    case 0xc3: {
                        final int pc_ = this.pc;

                        this.pc = (memory_[pc_] & 0xff) + ((memory_[pc_ + 1] & 0xff) << 8);
                        this.cycles += 16;
                        break;
                    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995367
src/de/joergjahnke/gameboy/core/CPU.java 1925 1931
src/de/joergjahnke/gameboy/core/CPU.java 1193 1200
----------------------------------------
                    case 0xc3: {
                        final int pc_ = this.pc;

                        this.pc = (memory_[pc_] & 0xff) + ((memory_[pc_ + 1] & 0xff) << 8);
                        this.cycles += 16;
                        break;
                    }

----------------------------------------
                    case 0xfa: {
                        final int pc_ = this.pc;

                        this.a = readByte((memory_[pc_] & 0xff) + ((memory_[pc_ + 1] & 0xff) << 8));
                        this.pc += 2;
                        this.cycles += 16;
                        break;
                    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995429
src/de/joergjahnke/gameboy/core/CPU.java 1303 1310
src/de/joergjahnke/gameboy/core/CPU.java 1193 1200
----------------------------------------
                    case 0x08: {
                        final int pc_ = this.pc;

                        writeWord((memory_[pc_] & 0xff) + ((memory_[pc_ + 1] & 0xff) << 8), this.sp);
                        this.pc += 2;
                        this.cycles += 20;
                        break;
                    }

----------------------------------------
                    case 0xfa: {
                        final int pc_ = this.pc;

                        this.a = readByte((memory_[pc_] & 0xff) + ((memory_[pc_ + 1] & 0xff) << 8));
                        this.pc += 2;
                        this.cycles += 16;
                        break;
                    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995423
src/de/joergjahnke/gameboy/core/CPU.java 1193 1200
src/de/joergjahnke/gameboy/core/CPU.java 1210 1217
----------------------------------------
                    case 0xfa: {
                        final int pc_ = this.pc;

                        this.a = readByte((memory_[pc_] & 0xff) + ((memory_[pc_ + 1] & 0xff) << 8));
                        this.pc += 2;
                        this.cycles += 16;
                        break;
                    }

----------------------------------------
                    case 0xea: {
                        final int pc_ = this.pc;

                        writeByte((memory_[pc_] & 0xff) + ((memory_[pc_ + 1] & 0xff) << 8), (byte) this.a);
                        this.pc += 2;
                        this.cycles += 16;
                        break;
                    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995368
src/de/joergjahnke/gameboy/core/CPU.java 1925 1931
src/de/joergjahnke/gameboy/core/CPU.java 1210 1217
----------------------------------------
                    case 0xc3: {
                        final int pc_ = this.pc;

                        this.pc = (memory_[pc_] & 0xff) + ((memory_[pc_ + 1] & 0xff) << 8);
                        this.cycles += 16;
                        break;
                    }

----------------------------------------
                    case 0xea: {
                        final int pc_ = this.pc;

                        writeByte((memory_[pc_] & 0xff) + ((memory_[pc_ + 1] & 0xff) << 8), (byte) this.a);
                        this.pc += 2;
                        this.cycles += 16;
                        break;
                    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995430
src/de/joergjahnke/gameboy/core/CPU.java 1303 1310
src/de/joergjahnke/gameboy/core/CPU.java 1210 1217
----------------------------------------
                    case 0x08: {
                        final int pc_ = this.pc;

                        writeWord((memory_[pc_] & 0xff) + ((memory_[pc_ + 1] & 0xff) << 8), this.sp);
                        this.pc += 2;
                        this.cycles += 20;
                        break;
                    }

----------------------------------------
                    case 0xea: {
                        final int pc_ = this.pc;

                        writeByte((memory_[pc_] & 0xff) + ((memory_[pc_ + 1] & 0xff) << 8), (byte) this.a);
                        this.pc += 2;
                        this.cycles += 16;
                        break;
                    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995481
src/de/joergjahnke/gameboy/core/CPU.java 1303 1310
src/de/joergjahnke/gameboy/core/CPU.java 1280 1287
----------------------------------------
                    case 0x08: {
                        final int pc_ = this.pc;

                        writeWord((memory_[pc_] & 0xff) + ((memory_[pc_ + 1] & 0xff) << 8), this.sp);
                        this.pc += 2;
                        this.cycles += 20;
                        break;
                    }

----------------------------------------
                    case 0x31: {
                        final int pc_ = this.pc;

                        this.sp = (memory_[pc_] & 0xff) + ((memory_[pc_ + 1] & 0xff) << 8);
                        this.pc += 2;
                        this.cycles += 12;
                        break;
                    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995369
src/de/joergjahnke/gameboy/core/CPU.java 1925 1931
src/de/joergjahnke/gameboy/core/CPU.java 1280 1287
----------------------------------------
                    case 0xc3: {
                        final int pc_ = this.pc;

                        this.pc = (memory_[pc_] & 0xff) + ((memory_[pc_ + 1] & 0xff) << 8);
                        this.cycles += 16;
                        break;
                    }

----------------------------------------
                    case 0x31: {
                        final int pc_ = this.pc;

                        this.sp = (memory_[pc_] & 0xff) + ((memory_[pc_ + 1] & 0xff) << 8);
                        this.pc += 2;
                        this.cycles += 12;
                        break;
                    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995426
src/de/joergjahnke/gameboy/core/CPU.java 1193 1200
src/de/joergjahnke/gameboy/core/CPU.java 1280 1287
----------------------------------------
                    case 0xfa: {
                        final int pc_ = this.pc;

                        this.a = readByte((memory_[pc_] & 0xff) + ((memory_[pc_ + 1] & 0xff) << 8));
                        this.pc += 2;
                        this.cycles += 16;
                        break;
                    }

----------------------------------------
                    case 0x31: {
                        final int pc_ = this.pc;

                        this.sp = (memory_[pc_] & 0xff) + ((memory_[pc_ + 1] & 0xff) << 8);
                        this.pc += 2;
                        this.cycles += 12;
                        break;
                    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995427
src/de/joergjahnke/gameboy/core/CPU.java 1210 1217
src/de/joergjahnke/gameboy/core/CPU.java 1280 1287
----------------------------------------
                    case 0xea: {
                        final int pc_ = this.pc;

                        writeByte((memory_[pc_] & 0xff) + ((memory_[pc_ + 1] & 0xff) << 8), (byte) this.a);
                        this.pc += 2;
                        this.cycles += 16;
                        break;
                    }

----------------------------------------
                    case 0x31: {
                        final int pc_ = this.pc;

                        this.sp = (memory_[pc_] & 0xff) + ((memory_[pc_ + 1] & 0xff) << 8);
                        this.pc += 2;
                        this.cycles += 12;
                        break;
                    }

----------------------------------------
