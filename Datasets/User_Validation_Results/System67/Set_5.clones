$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995191
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 241 248
src/de/joergjahnke/common/bluetooth/BluetoothDevice.java 158 164
----------------------------------------
                    public void windowClosing(final WindowEvent evt) {
                        try {
                            settings.storeToXML(new FileOutputStream(new File(PROPERTIES_NAME)), "Properties for JSwingBoy");
                            stopGame();
                        } catch (Exception e) {
                            // we can't save the settings, that's a pity, but we'll just use defaults on next startup
                        }
                    }

----------------------------------------
    public static String getRemoteDeviceName(final RemoteDevice dev) {
        try {
            return dev.getFriendlyName(false) == null ? dev.getBluetoothAddress() : dev.getFriendlyName(false);
        } catch (IOException e) {
            return "unknown";
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995136
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 296 301
src/de/joergjahnke/common/bluetooth/BluetoothDevice.java 158 164
----------------------------------------
        } finally {
            try {
                out.close();
            } catch (Exception e) {
            }
        }

----------------------------------------
    public static String getRemoteDeviceName(final RemoteDevice dev) {
        try {
            return dev.getFriendlyName(false) == null ? dev.getBluetoothAddress() : dev.getFriendlyName(false);
        } catch (IOException e) {
            return "unknown";
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995192
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 998 1004
src/de/joergjahnke/common/bluetooth/BluetoothDevice.java 158 164
----------------------------------------
    private void jMenuItemContentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemContentsActionPerformed
        try {
            java.awt.Desktop.getDesktop().browse(new URI(URL_ONLINE_HELP));
        } catch (Throwable t) {
            JOptionPane.showMessageDialog(this, this.commonResources.getString("CouldNotDisplayOnlineHelp") + " '" + URL_ONLINE_HELP + "'", this.commonResources.getString("CouldNotStartBrowser"), JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemContentsActionPerformed

----------------------------------------
    public static String getRemoteDeviceName(final RemoteDevice dev) {
        try {
            return dev.getFriendlyName(false) == null ? dev.getBluetoothAddress() : dev.getFriendlyName(false);
        } catch (IOException e) {
            return "unknown";
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995135
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 260 266
src/de/joergjahnke/common/bluetooth/BluetoothDevice.java 158 164
----------------------------------------
    private ImageIcon getMenuIcon(final String filename) {
        try {
            return new ImageIcon(new ImageIcon(getClass().getResource("/res/drawable/" + filename)).getImage().getScaledInstance(16, 16, Image.SCALE_SMOOTH));
        } catch (Exception e) {
            return null;
        }
    }

----------------------------------------
    public static String getRemoteDeviceName(final RemoteDevice dev) {
        try {
            return dev.getFriendlyName(false) == null ? dev.getBluetoothAddress() : dev.getFriendlyName(false);
        } catch (IOException e) {
            return "unknown";
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995134
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 510 515
src/de/joergjahnke/common/bluetooth/BluetoothDevice.java 158 164
----------------------------------------
        } finally {
            try {
                romStream.close();
            } catch (Exception e) {
            }
        }

----------------------------------------
    public static String getRemoteDeviceName(final RemoteDevice dev) {
        try {
            return dev.getFriendlyName(false) == null ? dev.getBluetoothAddress() : dev.getFriendlyName(false);
        } catch (IOException e) {
            return "unknown";
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995309
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 260 266
src/de/joergjahnke/common/jme/OrientationSensitiveCanvasHelper.java 136 145
----------------------------------------
    private ImageIcon getMenuIcon(final String filename) {
        try {
            return new ImageIcon(new ImageIcon(getClass().getResource("/res/drawable/" + filename)).getImage().getScaledInstance(16, 16, Image.SCALE_SMOOTH));
        } catch (Exception e) {
            return null;
        }
    }

----------------------------------------
        if (supportsSensorAPI()) {
            try {
                final javax.microedition.sensor.SensorInfo[] si = javax.microedition.sensor.SensorManager.findSensors("acceleration", javax.microedition.sensor.SensorInfo.CONTEXT_TYPE_USER);

                return si[0].getChannelInfos().length == 3;
            } catch (Throwable t) {
                // the API is not supported, no problem, we report No
                return false;
            }
        } else {

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995138
src/de/joergjahnke/common/bluetooth/BluetoothDevice.java 158 164
src/de/joergjahnke/common/jme/OrientationSensitiveCanvasHelper.java 136 145
----------------------------------------
    public static String getRemoteDeviceName(final RemoteDevice dev) {
        try {
            return dev.getFriendlyName(false) == null ? dev.getBluetoothAddress() : dev.getFriendlyName(false);
        } catch (IOException e) {
            return "unknown";
        }
    }

----------------------------------------
        if (supportsSensorAPI()) {
            try {
                final javax.microedition.sensor.SensorInfo[] si = javax.microedition.sensor.SensorManager.findSensors("acceleration", javax.microedition.sensor.SensorInfo.CONTEXT_TYPE_USER);

                return si[0].getChannelInfos().length == 3;
            } catch (Throwable t) {
                // the API is not supported, no problem, we report No
                return false;
            }
        } else {

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995303
src/de/joergjahnke/gameboy/android/AndroidGB.java 499 507
src/de/joergjahnke/common/jme/OrientationSensitiveCanvasHelper.java 113 119
----------------------------------------
			if(this.orientationSensorNotifier == null) {
				try {
					this.orientationSensorNotifier = new OrientationSensorNotifier();
					this.orientationSensorNotifier.addListener(this.gameboyView);
					this.orientationSensorNotifier.start();
				} catch( Exception e ) {
					// we could not attach the notifier, most probably no orientation sensor is available
				}
			}

----------------------------------------
    public void deactivateAccelerometer() {
        try {
            ((javax.microedition.sensor.SensorConnection) this.con).removeDataListener();
            this.con.close();
        } catch (Throwable t) {
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995199
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 510 515
src/de/joergjahnke/common/jme/OrientationSensitiveCanvasHelper.java 113 119
----------------------------------------
        } finally {
            try {
                romStream.close();
            } catch (Exception e) {
            }
        }

----------------------------------------
    public void deactivateAccelerometer() {
        try {
            ((javax.microedition.sensor.SensorConnection) this.con).removeDataListener();
            this.con.close();
        } catch (Throwable t) {
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995306
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 998 1004
src/de/joergjahnke/common/jme/OrientationSensitiveCanvasHelper.java 113 119
----------------------------------------
    private void jMenuItemContentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemContentsActionPerformed
        try {
            java.awt.Desktop.getDesktop().browse(new URI(URL_ONLINE_HELP));
        } catch (Throwable t) {
            JOptionPane.showMessageDialog(this, this.commonResources.getString("CouldNotDisplayOnlineHelp") + " '" + URL_ONLINE_HELP + "'", this.commonResources.getString("CouldNotStartBrowser"), JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemContentsActionPerformed

----------------------------------------
    public void deactivateAccelerometer() {
        try {
            ((javax.microedition.sensor.SensorConnection) this.con).removeDataListener();
            this.con.close();
        } catch (Throwable t) {
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995301
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 296 301
src/de/joergjahnke/common/jme/OrientationSensitiveCanvasHelper.java 113 119
----------------------------------------
        } finally {
            try {
                out.close();
            } catch (Exception e) {
            }
        }

----------------------------------------
    public void deactivateAccelerometer() {
        try {
            ((javax.microedition.sensor.SensorConnection) this.con).removeDataListener();
            this.con.close();
        } catch (Throwable t) {
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995304
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 375 380
src/de/joergjahnke/common/jme/OrientationSensitiveCanvasHelper.java 113 119
----------------------------------------
        } finally {
            try {
                in.close();
            } catch (Exception e) {
            }
        }

----------------------------------------
    public void deactivateAccelerometer() {
        try {
            ((javax.microedition.sensor.SensorConnection) this.con).removeDataListener();
            this.con.close();
        } catch (Throwable t) {
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995200
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 260 266
src/de/joergjahnke/common/jme/OrientationSensitiveCanvasHelper.java 113 119
----------------------------------------
    private ImageIcon getMenuIcon(final String filename) {
        try {
            return new ImageIcon(new ImageIcon(getClass().getResource("/res/drawable/" + filename)).getImage().getScaledInstance(16, 16, Image.SCALE_SMOOTH));
        } catch (Exception e) {
            return null;
        }
    }

----------------------------------------
    public void deactivateAccelerometer() {
        try {
            ((javax.microedition.sensor.SensorConnection) this.con).removeDataListener();
            this.con.close();
        } catch (Throwable t) {
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995198
src/de/joergjahnke/gameboy/core/Gameboy.java 207 216
src/de/joergjahnke/common/jme/OrientationSensitiveCanvasHelper.java 113 119
----------------------------------------
        if (!isRunning()) {
            this.logger.info("Gameboy starting");
            super.run();
            // we use this thread to run the CPU
            try {
                this.cpu.run();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

----------------------------------------
    public void deactivateAccelerometer() {
        try {
            ((javax.microedition.sensor.SensorConnection) this.con).removeDataListener();
            this.con.close();
        } catch (Throwable t) {
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995140
src/de/joergjahnke/common/bluetooth/BluetoothDevice.java 158 164
src/de/joergjahnke/common/jme/OrientationSensitiveCanvasHelper.java 113 119
----------------------------------------
    public static String getRemoteDeviceName(final RemoteDevice dev) {
        try {
            return dev.getFriendlyName(false) == null ? dev.getBluetoothAddress() : dev.getFriendlyName(false);
        } catch (IOException e) {
            return "unknown";
        }
    }

----------------------------------------
    public void deactivateAccelerometer() {
        try {
            ((javax.microedition.sensor.SensorConnection) this.con).removeDataListener();
            this.con.close();
        } catch (Throwable t) {
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995307
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 984 991
src/de/joergjahnke/common/jme/OrientationSensitiveCanvasHelper.java 113 119
----------------------------------------
                if (evt.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
                    try {
                        Desktop.getDesktop().browse(evt.getURL().toURI());
                    } catch (Throwable t) {
                        // could not display the web page, what to do now???
                        System.err.println("Could not browse to page " + evt.getURL());
                    }
                }

----------------------------------------
    public void deactivateAccelerometer() {
        try {
            ((javax.microedition.sensor.SensorConnection) this.con).removeDataListener();
            this.con.close();
        } catch (Throwable t) {
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995302
src/de/joergjahnke/common/jme/FileSystemHandler.java 189 195
src/de/joergjahnke/common/jme/OrientationSensitiveCanvasHelper.java 113 119
----------------------------------------
                if (prgsString.length() > 0) {
                    try {
                        settings.setString(SETTING_PROGRAMS, prgsString.toString());
                    } catch (Exception e) {
                    // we could not save the list of programs on the phone, that's OK
                    }
                }

----------------------------------------
    public void deactivateAccelerometer() {
        try {
            ((javax.microedition.sensor.SensorConnection) this.con).removeDataListener();
            this.con.close();
        } catch (Throwable t) {
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995305
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 241 248
src/de/joergjahnke/common/jme/OrientationSensitiveCanvasHelper.java 113 119
----------------------------------------
                    public void windowClosing(final WindowEvent evt) {
                        try {
                            settings.storeToXML(new FileOutputStream(new File(PROPERTIES_NAME)), "Properties for JSwingBoy");
                            stopGame();
                        } catch (Exception e) {
                            // we can't save the settings, that's a pity, but we'll just use defaults on next startup
                        }
                    }

----------------------------------------
    public void deactivateAccelerometer() {
        try {
            ((javax.microedition.sensor.SensorConnection) this.con).removeDataListener();
            this.con.close();
        } catch (Throwable t) {
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995197
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 489 494
src/de/joergjahnke/common/jme/OrientationSensitiveCanvasHelper.java 113 119
----------------------------------------
            } finally {
                try {
                    saveStream.close();
                } catch (Exception e) {
                }
            }

----------------------------------------
    public void deactivateAccelerometer() {
        try {
            ((javax.microedition.sensor.SensorConnection) this.con).removeDataListener();
            this.con.close();
        } catch (Throwable t) {
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995144
src/de/joergjahnke/gameboy/core/VideoChip.java 730 736
src/de/joergjahnke/gameboy/core/VideoChip.java 1107 1115
----------------------------------------
        if (scrollX != this.scrollX) {
            if (DEBUG) {
                System.out.println("Set x-scroll to " + scrollX + " at line " + this.currentLine + " of frame " + this.frames);
            }
            this.scrollX = scrollX;
            invalidateLines();
        }

----------------------------------------
        if (this.currentLine < SCREEN_HEIGHT) {
            // trigger OAM IRQ if necessary
            if (isLCDEnabled()) {
                checkOAMIRQ();
            }

            lcdCycles = OAM_PERIOD;
            this.mode = MODE_OAM;
        } else {

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995142
src/de/joergjahnke/gameboy/core/VideoChip.java 754 760
src/de/joergjahnke/gameboy/core/VideoChip.java 1107 1115
----------------------------------------
        if (scrollY != this.scrollY) {
            if (DEBUG) {
                System.out.println("Set y-scroll to " + scrollY + " at line " + this.currentLine + " of frame " + this.frames);
            }
            this.scrollY = scrollY;
            invalidateLines();
        }

----------------------------------------
        if (this.currentLine < SCREEN_HEIGHT) {
            // trigger OAM IRQ if necessary
            if (isLCDEnabled()) {
                checkOAMIRQ();
            }

            lcdCycles = OAM_PERIOD;
            this.mode = MODE_OAM;
        } else {

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995145
src/de/joergjahnke/gameboy/core/VideoChip.java 779 785
src/de/joergjahnke/gameboy/core/VideoChip.java 1107 1115
----------------------------------------
        if (windowX != this.windowX) {
            if (DEBUG) {
                System.out.println("Set window x-position to " + windowX + " at line " + this.currentLine + " of frame " + this.frames);
            }
            this.windowX = windowX;
            invalidateWindowLines();
        }

----------------------------------------
        if (this.currentLine < SCREEN_HEIGHT) {
            // trigger OAM IRQ if necessary
            if (isLCDEnabled()) {
                checkOAMIRQ();
            }

            lcdCycles = OAM_PERIOD;
            this.mode = MODE_OAM;
        } else {

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995143
src/de/joergjahnke/gameboy/core/VideoChip.java 646 652
src/de/joergjahnke/gameboy/core/VideoChip.java 1107 1115
----------------------------------------
        if (isBGBlank != this.isBGBlank) {
            if (DEBUG) {
                System.out.println("Set background enable to " + !isBGBlank + " at line " + this.currentLine + " of frame " + this.frames);
            }
            this.isBGBlank = isBGBlank;
            invalidateLines();
        }

----------------------------------------
        if (this.currentLine < SCREEN_HEIGHT) {
            // trigger OAM IRQ if necessary
            if (isLCDEnabled()) {
                checkOAMIRQ();
            }

            lcdCycles = OAM_PERIOD;
            this.mode = MODE_OAM;
        } else {

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995146
src/de/joergjahnke/gameboy/core/VideoChip.java 1076 1088
src/de/joergjahnke/gameboy/core/VideoChip.java 1134 1148
----------------------------------------
    private int onOAMEnd() {
        if (isLCDEnabled()) {
            final CPU cpu = this.gameboy.getCPU();

            if (isHBlankIRQEnabled() && (cpu.memory[0xff41] & 0x44) != 0x44) {
                cpu.requestIRQ(CPU.IRQ_LCDSTAT);
            }
        }

        this.mode = MODE_HBLANK;

        return HBLANK_PERIOD;
    }

----------------------------------------
    private int onVBlankStart() {
        final CPU cpu = this.gameboy.getCPU();

        // trigger V-Blank interrupt
        if (isLCDEnabled()) {
            cpu.requestIRQ(CPU.IRQ_VBLANK);
            if (isVBlankIRQEnabled()) {
                cpu.requestIRQ(CPU.IRQ_LCDSTAT);
            }
        }

        this.mode = MODE_VBLANK;

        return VBLANK_PERIOD - VBLANK_PERIOD_START;
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995147
src/de/joergjahnke/common/jme/FileBrowser.java 101 106
src/de/joergjahnke/common/jme/PCMtoMIDIPlayer.java 317 322
----------------------------------------
    public FileBrowser(final Display display, final String currentDir, final Vector filters) {
        this.selected = currentDir;
        this.filters = filters;
        this.previous = display.getCurrent();
        this.display = display;
    }

----------------------------------------
        public MIDIQueueEntry(final int type, final int event, final int arg1, final int arg2) {
            this.type = type;
            this.event = event;
            this.arg1 = arg1;
            this.arg2 = arg2;
        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995148
src/de/joergjahnke/common/jme/Menu.java 97 102
src/de/joergjahnke/common/jme/Menu.java 121 126
----------------------------------------
    public void insertItem(final String item, final Image icon, final int pos) {
        this.items.insertElementAt(item, pos);
        if (icon != null) {
            this.itemIcons.put(item, icon);
        }
    }

----------------------------------------
    public void insertMenu(final Menu menu, final Image icon, final int pos) {
        this.items.insertElementAt(menu, pos);
        if (icon != null) {
            this.itemIcons.put(menu, icon);
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995152
src/de/joergjahnke/gameboy/core/VideoChip.java 730 736
src/de/joergjahnke/common/jme/Menu.java 181 187
----------------------------------------
        if (scrollX != this.scrollX) {
            if (DEBUG) {
                System.out.println("Set x-scroll to " + scrollX + " at line " + this.currentLine + " of frame " + this.frames);
            }
            this.scrollX = scrollX;
            invalidateLines();
        }

----------------------------------------
    public void setSelectCommandText(final String text) {
        this.selectCommandText = text;
        if (this.selectCommand != null) {
            removeCommand(this.selectCommand);
            setSelectCommand();
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995150
src/de/joergjahnke/gameboy/core/VideoChip.java 754 760
src/de/joergjahnke/common/jme/Menu.java 181 187
----------------------------------------
        if (scrollY != this.scrollY) {
            if (DEBUG) {
                System.out.println("Set y-scroll to " + scrollY + " at line " + this.currentLine + " of frame " + this.frames);
            }
            this.scrollY = scrollY;
            invalidateLines();
        }

----------------------------------------
    public void setSelectCommandText(final String text) {
        this.selectCommandText = text;
        if (this.selectCommand != null) {
            removeCommand(this.selectCommand);
            setSelectCommand();
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995151
src/de/joergjahnke/gameboy/core/VideoChip.java 646 652
src/de/joergjahnke/common/jme/Menu.java 181 187
----------------------------------------
        if (isBGBlank != this.isBGBlank) {
            if (DEBUG) {
                System.out.println("Set background enable to " + !isBGBlank + " at line " + this.currentLine + " of frame " + this.frames);
            }
            this.isBGBlank = isBGBlank;
            invalidateLines();
        }

----------------------------------------
    public void setSelectCommandText(final String text) {
        this.selectCommandText = text;
        if (this.selectCommand != null) {
            removeCommand(this.selectCommand);
            setSelectCommand();
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995153
src/de/joergjahnke/gameboy/core/VideoChip.java 779 785
src/de/joergjahnke/common/jme/Menu.java 181 187
----------------------------------------
        if (windowX != this.windowX) {
            if (DEBUG) {
                System.out.println("Set window x-position to " + windowX + " at line " + this.currentLine + " of frame " + this.frames);
            }
            this.windowX = windowX;
            invalidateWindowLines();
        }

----------------------------------------
    public void setSelectCommandText(final String text) {
        this.selectCommandText = text;
        if (this.selectCommand != null) {
            removeCommand(this.selectCommand);
            setSelectCommand();
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995149
src/de/joergjahnke/gameboy/core/VideoChip.java 1107 1115
src/de/joergjahnke/common/jme/Menu.java 181 187
----------------------------------------
        if (this.currentLine < SCREEN_HEIGHT) {
            // trigger OAM IRQ if necessary
            if (isLCDEnabled()) {
                checkOAMIRQ();
            }

            lcdCycles = OAM_PERIOD;
            this.mode = MODE_OAM;
        } else {

----------------------------------------
    public void setSelectCommandText(final String text) {
        this.selectCommandText = text;
        if (this.selectCommand != null) {
            removeCommand(this.selectCommand);
            setSelectCommand();
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995158
src/de/joergjahnke/gameboy/core/VideoChip.java 779 785
src/de/joergjahnke/common/jme/Menu.java 203 209
----------------------------------------
        if (windowX != this.windowX) {
            if (DEBUG) {
                System.out.println("Set window x-position to " + windowX + " at line " + this.currentLine + " of frame " + this.frames);
            }
            this.windowX = windowX;
            invalidateWindowLines();
        }

----------------------------------------
    public void setBackCommandText(final String text) {
        this.backCommandText = text;
        if (this.backCommand != null) {
            removeCommand(this.backCommand);
            setBackCommand();
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995159
src/de/joergjahnke/common/jme/Menu.java 181 187
src/de/joergjahnke/common/jme/Menu.java 203 209
----------------------------------------
    public void setSelectCommandText(final String text) {
        this.selectCommandText = text;
        if (this.selectCommand != null) {
            removeCommand(this.selectCommand);
            setSelectCommand();
        }
    }

----------------------------------------
    public void setBackCommandText(final String text) {
        this.backCommandText = text;
        if (this.backCommand != null) {
            removeCommand(this.backCommand);
            setBackCommand();
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995154
src/de/joergjahnke/gameboy/core/VideoChip.java 1107 1115
src/de/joergjahnke/common/jme/Menu.java 203 209
----------------------------------------
        if (this.currentLine < SCREEN_HEIGHT) {
            // trigger OAM IRQ if necessary
            if (isLCDEnabled()) {
                checkOAMIRQ();
            }

            lcdCycles = OAM_PERIOD;
            this.mode = MODE_OAM;
        } else {

----------------------------------------
    public void setBackCommandText(final String text) {
        this.backCommandText = text;
        if (this.backCommand != null) {
            removeCommand(this.backCommand);
            setBackCommand();
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995156
src/de/joergjahnke/gameboy/core/VideoChip.java 646 652
src/de/joergjahnke/common/jme/Menu.java 203 209
----------------------------------------
        if (isBGBlank != this.isBGBlank) {
            if (DEBUG) {
                System.out.println("Set background enable to " + !isBGBlank + " at line " + this.currentLine + " of frame " + this.frames);
            }
            this.isBGBlank = isBGBlank;
            invalidateLines();
        }

----------------------------------------
    public void setBackCommandText(final String text) {
        this.backCommandText = text;
        if (this.backCommand != null) {
            removeCommand(this.backCommand);
            setBackCommand();
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995155
src/de/joergjahnke/gameboy/core/VideoChip.java 754 760
src/de/joergjahnke/common/jme/Menu.java 203 209
----------------------------------------
        if (scrollY != this.scrollY) {
            if (DEBUG) {
                System.out.println("Set y-scroll to " + scrollY + " at line " + this.currentLine + " of frame " + this.frames);
            }
            this.scrollY = scrollY;
            invalidateLines();
        }

----------------------------------------
    public void setBackCommandText(final String text) {
        this.backCommandText = text;
        if (this.backCommand != null) {
            removeCommand(this.backCommand);
            setBackCommand();
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995157
src/de/joergjahnke/gameboy/core/VideoChip.java 730 736
src/de/joergjahnke/common/jme/Menu.java 203 209
----------------------------------------
        if (scrollX != this.scrollX) {
            if (DEBUG) {
                System.out.println("Set x-scroll to " + scrollX + " at line " + this.currentLine + " of frame " + this.frames);
            }
            this.scrollX = scrollX;
            invalidateLines();
        }

----------------------------------------
    public void setBackCommandText(final String text) {
        this.backCommandText = text;
        if (this.backCommand != null) {
            removeCommand(this.backCommand);
            setBackCommand();
        }
    }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995178
src/de/joergjahnke/common/jme/FileSystemHandler.java 189 195
src/de/joergjahnke/common/extendeddevices/WavePlayer.java 64 70
----------------------------------------
                if (prgsString.length() > 0) {
                    try {
                        settings.setString(SETTING_PROGRAMS, prgsString.toString());
                    } catch (Exception e) {
                    // we could not save the list of programs on the phone, that's OK
                    }
                }

----------------------------------------
                        synchronized (buffer) {
                            buffer.reset();
                            try {
                                buffer.wait();
                            } catch (InterruptedException e) {
                            }
                        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995175
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 296 301
src/de/joergjahnke/common/extendeddevices/WavePlayer.java 64 70
----------------------------------------
        } finally {
            try {
                out.close();
            } catch (Exception e) {
            }
        }

----------------------------------------
                        synchronized (buffer) {
                            buffer.reset();
                            try {
                                buffer.wait();
                            } catch (InterruptedException e) {
                            }
                        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995177
src/de/joergjahnke/common/bluetooth/BluetoothDevice.java 158 164
src/de/joergjahnke/common/extendeddevices/WavePlayer.java 64 70
----------------------------------------
    public static String getRemoteDeviceName(final RemoteDevice dev) {
        try {
            return dev.getFriendlyName(false) == null ? dev.getBluetoothAddress() : dev.getFriendlyName(false);
        } catch (IOException e) {
            return "unknown";
        }
    }

----------------------------------------
                        synchronized (buffer) {
                            buffer.reset();
                            try {
                                buffer.wait();
                            } catch (InterruptedException e) {
                            }
                        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995179
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 375 380
src/de/joergjahnke/common/extendeddevices/WavePlayer.java 64 70
----------------------------------------
        } finally {
            try {
                in.close();
            } catch (Exception e) {
            }
        }

----------------------------------------
                        synchronized (buffer) {
                            buffer.reset();
                            try {
                                buffer.wait();
                            } catch (InterruptedException e) {
                            }
                        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995174
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 260 266
src/de/joergjahnke/common/extendeddevices/WavePlayer.java 64 70
----------------------------------------
    private ImageIcon getMenuIcon(final String filename) {
        try {
            return new ImageIcon(new ImageIcon(getClass().getResource("/res/drawable/" + filename)).getImage().getScaledInstance(16, 16, Image.SCALE_SMOOTH));
        } catch (Exception e) {
            return null;
        }
    }

----------------------------------------
                        synchronized (buffer) {
                            buffer.reset();
                            try {
                                buffer.wait();
                            } catch (InterruptedException e) {
                            }
                        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995172
src/de/joergjahnke/gameboy/core/Gameboy.java 207 216
src/de/joergjahnke/common/extendeddevices/WavePlayer.java 64 70
----------------------------------------
        if (!isRunning()) {
            this.logger.info("Gameboy starting");
            super.run();
            // we use this thread to run the CPU
            try {
                this.cpu.run();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

----------------------------------------
                        synchronized (buffer) {
                            buffer.reset();
                            try {
                                buffer.wait();
                            } catch (InterruptedException e) {
                            }
                        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995176
src/de/joergjahnke/gameboy/android/AndroidGB.java 476 484
src/de/joergjahnke/common/extendeddevices/WavePlayer.java 64 70
----------------------------------------
            if (this.gameboy.getSoundChip().countObservers() == 0) {
                try {
                    this.gameboy.getSoundChip().addObserver(new WavePlayer(this.gameboy.getSoundChip()));
                } catch (Throwable t) {
                    // we could not add a player, that's OK
                    this.gameboy.getLogger().warning("Could not create sound player! Sound output remains deactivated.");
                    t.printStackTrace();
                }
            }

----------------------------------------
                        synchronized (buffer) {
                            buffer.reset();
                            try {
                                buffer.wait();
                            } catch (InterruptedException e) {
                            }
                        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995171
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 393 400
src/de/joergjahnke/common/extendeddevices/WavePlayer.java 64 70
----------------------------------------
        if (status == STATUS_LOAD_OK || status == STATUS_LOAD_FAILED) {
            try {
                new File(SUSPENDFILE_NAME).delete();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Could not remove the suspend file! Please remove the suspend file '" + SUSPENDFILE_NAME + "' manually.", this.commonResources.getString("CouldNotRemoveSuspendData"), JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }
        }

----------------------------------------
                        synchronized (buffer) {
                            buffer.reset();
                            try {
                                buffer.wait();
                            } catch (InterruptedException e) {
                            }
                        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995204
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 984 991
src/de/joergjahnke/common/extendeddevices/WavePlayer.java 64 70
----------------------------------------
                if (evt.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
                    try {
                        Desktop.getDesktop().browse(evt.getURL().toURI());
                    } catch (Throwable t) {
                        // could not display the web page, what to do now???
                        System.err.println("Could not browse to page " + evt.getURL());
                    }
                }

----------------------------------------
                        synchronized (buffer) {
                            buffer.reset();
                            try {
                                buffer.wait();
                            } catch (InterruptedException e) {
                            }
                        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995201
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 241 248
src/de/joergjahnke/common/extendeddevices/WavePlayer.java 64 70
----------------------------------------
                    public void windowClosing(final WindowEvent evt) {
                        try {
                            settings.storeToXML(new FileOutputStream(new File(PROPERTIES_NAME)), "Properties for JSwingBoy");
                            stopGame();
                        } catch (Exception e) {
                            // we can't save the settings, that's a pity, but we'll just use defaults on next startup
                        }
                    }

----------------------------------------
                        synchronized (buffer) {
                            buffer.reset();
                            try {
                                buffer.wait();
                            } catch (InterruptedException e) {
                            }
                        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995173
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 510 515
src/de/joergjahnke/common/extendeddevices/WavePlayer.java 64 70
----------------------------------------
        } finally {
            try {
                romStream.close();
            } catch (Exception e) {
            }
        }

----------------------------------------
                        synchronized (buffer) {
                            buffer.reset();
                            try {
                                buffer.wait();
                            } catch (InterruptedException e) {
                            }
                        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995160
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 489 494
src/de/joergjahnke/common/extendeddevices/WavePlayer.java 64 70
----------------------------------------
            } finally {
                try {
                    saveStream.close();
                } catch (Exception e) {
                }
            }

----------------------------------------
                        synchronized (buffer) {
                            buffer.reset();
                            try {
                                buffer.wait();
                            } catch (InterruptedException e) {
                            }
                        }

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
17995203
src/de/joergjahnke/gameboy/swing/GameboyFrame.java 998 1004
src/de/joergjahnke/common/extendeddevices/WavePlayer.java 64 70
----------------------------------------
    private void jMenuItemContentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemContentsActionPerformed
        try {
            java.awt.Desktop.getDesktop().browse(new URI(URL_ONLINE_HELP));
        } catch (Throwable t) {
            JOptionPane.showMessageDialog(this, this.commonResources.getString("CouldNotDisplayOnlineHelp") + " '" + URL_ONLINE_HELP + "'", this.commonResources.getString("CouldNotStartBrowser"), JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemContentsActionPerformed

----------------------------------------
                        synchronized (buffer) {
                            buffer.reset();
                            try {
                                buffer.wait();
                            } catch (InterruptedException e) {
                            }
                        }

----------------------------------------
