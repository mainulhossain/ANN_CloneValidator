$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830650
source/net/filebot/ui/subtitle/upload/SubtitleMapping.java 20 26
source/net/filebot/util/ui/DashedSeparator.java 27 32
----------------------------------------
	public SubtitleMapping(File subtitle, File video, Language language) {
		this.subtitle = subtitle;
		this.video = video;
		this.language = language;

		this.status = (video == null || subtitle == null) ? Status.IllegalInput : Status.CheckPending;
	}

----------------------------------------
	public DashedSeparator(int height, int dash, Color foreground, Color background) {
		this.height = height;
		this.dash = dash;
		this.foreground = foreground;
		this.background = background;
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830653
source/net/filebot/web/SeriesInfo.java 35 50
source/net/filebot/web/AudioTrack.java 27 40
----------------------------------------
	public SeriesInfo(SeriesInfo other) {
		this.database = other.database;
		this.order = other.order;
		this.language = other.language;
		this.id = other.id;
		this.name = other.name;
		this.aliasNames = other.aliasNames == null ? null : other.aliasNames.clone();
		this.certification = other.certification;
		this.startDate = other.startDate == null ? null : other.startDate.clone();
		this.genres = other.genres == null ? null : other.genres.clone();
		this.network = other.network;
		this.rating = other.rating;
		this.ratingCount = other.ratingCount;
		this.runtime = other.runtime;
		this.status = other.status;
	}

----------------------------------------
	public AudioTrack(AudioTrack other) {
		this.artist = other.artist;
		this.title = other.title;
		this.album = other.album;
		this.albumArtist = other.albumArtist;
		this.trackTitle = other.trackTitle;
		this.albumReleaseDate = other.albumReleaseDate;
		this.mediumIndex = other.mediumIndex;
		this.mediumCount = other.mediumCount;
		this.trackIndex = other.trackIndex;
		this.trackCount = other.trackCount;
		this.mbid = other.mbid;
		this.database = other.database;
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830659
source/net/filebot/format/ExpressionFormat.java 67 72
source/net/filebot/similarity/CommonSequenceMatcher.java 71 76
----------------------------------------
				if (level == 0) {
					if (token.length() > 0) {
						compilation.add(NEWLINE.matcher(token).replaceAll(""));
						token.setLength(0);
					}
				} else {

----------------------------------------
		for (CollationKey it : keys) {
			if (sb.length() > 0) {
				sb.append(' ');
			}
			sb.append(it.getSourceString());
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830660
source/net/filebot/ui/transfer/TransferablePolicy.java 75 82
source/net/filebot/cli/ConflictAction.java 7 14
----------------------------------------
		public static TransferAction fromDnDConstant(int dndConstant) {
			for (TransferAction action : values()) {
				if (dndConstant == action.dndConstant)
					return action;
			}

			throw new IllegalArgumentException("Unsupported dndConstant: " + dndConstant);
		}

----------------------------------------
	public static ConflictAction forName(String action) {
		for (ConflictAction it : values()) {
			if (it.name().equalsIgnoreCase(action))
				return it;
		}

		throw new IllegalArgumentException("Illegal conflict action: " + action);
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830670
source/net/filebot/ui/rename/HighlightListCellRenderer.java 72 79
source/net/filebot/util/ui/PrototypeCellValueUpdater.java 41 49
----------------------------------------
	public void setForeground(Color fg) {
		super.setForeground(fg);

		// textComponent is null while in super constructor
		if (textComponent != null) {
			textComponent.setForeground(fg);
		}
	}

----------------------------------------
			if (itemLength > longestItemLength) {
				// cell values will not be updated if the prototype object remains the same (even if the object has changed) so we need to reset it
				if (item == list.getPrototypeCellValue()) {
					list.setPrototypeCellValue(defaultValue);
				}

				longestItemLength = itemLength;
				list.setPrototypeCellValue(item);
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830739
source/net/filebot/util/ui/DefaultFancyListCellRenderer.java 59 66
source/net/filebot/util/ui/PrototypeCellValueUpdater.java 41 49
----------------------------------------
	public void setForeground(Color fg) {
		super.setForeground(fg);

		// label is null while in super constructor
		if (label != null) {
			label.setForeground(fg);
		}
	}

----------------------------------------
			if (itemLength > longestItemLength) {
				// cell values will not be updated if the prototype object remains the same (even if the object has changed) so we need to reset it
				if (item == list.getPrototypeCellValue()) {
					list.setPrototypeCellValue(defaultValue);
				}

				longestItemLength = itemLength;
				list.setPrototypeCellValue(item);
			}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830678
source/net/filebot/web/Movie.java 33 39
source/net/filebot/util/ui/notification/SeparatorBorder.java 88 94
----------------------------------------
	public Movie(String name, String[] aliasNames, int year, int imdbId, int tmdbId, Locale locale) {
		super(tmdbId > 0 ? tmdbId : imdbId > 0 ? imdbId : 0, name, aliasNames);
		this.year = year;
		this.imdbId = imdbId;
		this.tmdbId = tmdbId;
		this.language = locale == null ? null : locale.getLanguage();
	}

----------------------------------------
	public SeparatorBorder(int height, Color beginColor, Color endColor, GradientStyle gradientStyle, Position position) {
		this.borderWidth = height;
		this.beginColor = beginColor;
		this.endColor = endColor;
		this.gradientStyle = gradientStyle;
		this.position = position;
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830674
source/net/filebot/ui/sfv/ChecksumCell.java 44 52
source/net/filebot/util/ui/notification/SeparatorBorder.java 88 94
----------------------------------------
	public ChecksumCell(String name, File root, ChecksumComputationTask task) {
		this.name = name;
		this.root = root;
		this.hashes = new EnumMap<HashType, String>(HashType.class);
		this.task = task;

		// forward property change events
		task.addPropertyChangeListener(taskListener);
	}

----------------------------------------
	public SeparatorBorder(int height, Color beginColor, Color endColor, GradientStyle gradientStyle, Position position) {
		this.borderWidth = height;
		this.beginColor = beginColor;
		this.endColor = endColor;
		this.gradientStyle = gradientStyle;
		this.position = position;
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830679
source/net/filebot/util/ui/DashedSeparator.java 27 32
source/net/filebot/util/ui/notification/SeparatorBorder.java 88 94
----------------------------------------
	public DashedSeparator(int height, int dash, Color foreground, Color background) {
		this.height = height;
		this.dash = dash;
		this.foreground = foreground;
		this.background = background;
	}

----------------------------------------
	public SeparatorBorder(int height, Color beginColor, Color endColor, GradientStyle gradientStyle, Position position) {
		this.borderWidth = height;
		this.beginColor = beginColor;
		this.endColor = endColor;
		this.gradientStyle = gradientStyle;
		this.position = position;
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830680
source/net/filebot/ui/rename/RenameModel.java 318 323
source/net/filebot/util/ui/notification/SeparatorBorder.java 88 94
----------------------------------------
		private FormattedFuture(Match<Object, File> match, boolean extension, MatchFormatter formatter, Map<File, Object> context) {
			this.match = match;
			this.extension = extension;
			this.formatter = formatter;
			this.context = context;
		}

----------------------------------------
	public SeparatorBorder(int height, Color beginColor, Color endColor, GradientStyle gradientStyle, Position position) {
		this.borderWidth = height;
		this.beginColor = beginColor;
		this.endColor = endColor;
		this.gradientStyle = gradientStyle;
		this.position = position;
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830731
source/net/filebot/web/EpisodeInfo.java 39 48
source/net/filebot/util/ui/notification/SeparatorBorder.java 88 94
----------------------------------------
	public EpisodeInfo(Datasource database, Locale language, Integer seriesId, Integer id, List<Person> people, String overview, Double rating, Integer votes) {
		this.database = database.getIdentifier();
		this.language = language.getLanguage();
		this.seriesId = seriesId;
		this.id = id;
		this.people = people.toArray(new Person[0]);
		this.overview = overview;
		this.votes = votes;
		this.rating = rating;
	}

----------------------------------------
	public SeparatorBorder(int height, Color beginColor, Color endColor, GradientStyle gradientStyle, Position position) {
		this.borderWidth = height;
		this.beginColor = beginColor;
		this.endColor = endColor;
		this.gradientStyle = gradientStyle;
		this.position = position;
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830730
source/net/filebot/util/ui/notification/Direction.java 26 32
source/net/filebot/util/ui/notification/SeparatorBorder.java 88 94
----------------------------------------
	private Direction(int vx, int vy, double ax, double ay, int swingConstant) {
		this.vx = vx;
		this.vy = vy;
		this.ax = ax;
		this.ay = ay;
		this.swingConstant = swingConstant;
	}

----------------------------------------
	public SeparatorBorder(int height, Color beginColor, Color endColor, GradientStyle gradientStyle, Position position) {
		this.borderWidth = height;
		this.beginColor = beginColor;
		this.endColor = endColor;
		this.gradientStyle = gradientStyle;
		this.position = position;
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830676
source/net/filebot/web/AudioTrack.java 42 47
source/net/filebot/util/ui/notification/SeparatorBorder.java 88 94
----------------------------------------
	public AudioTrack(String artist, String title, String album, String database) {
		this.artist = artist;
		this.title = title;
		this.album = album;
		this.database = database;
	}

----------------------------------------
	public SeparatorBorder(int height, Color beginColor, Color endColor, GradientStyle gradientStyle, Position position) {
		this.borderWidth = height;
		this.beginColor = beginColor;
		this.endColor = endColor;
		this.gradientStyle = gradientStyle;
		this.position = position;
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830675
source/net/filebot/ui/subtitle/upload/SubtitleMapping.java 20 26
source/net/filebot/util/ui/notification/SeparatorBorder.java 88 94
----------------------------------------
	public SubtitleMapping(File subtitle, File video, Language language) {
		this.subtitle = subtitle;
		this.video = video;
		this.language = language;

		this.status = (video == null || subtitle == null) ? Status.IllegalInput : Status.CheckPending;
	}

----------------------------------------
	public SeparatorBorder(int height, Color beginColor, Color endColor, GradientStyle gradientStyle, Position position) {
		this.borderWidth = height;
		this.beginColor = beginColor;
		this.endColor = endColor;
		this.gradientStyle = gradientStyle;
		this.position = position;
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830677
source/net/filebot/ui/rename/TextColorizer.java 28 33
source/net/filebot/util/ui/notification/SeparatorBorder.java 88 94
----------------------------------------
	public TextColorizer(String before, String after, Color pathRainbowBeginColor, Color pathRainbowEndColor) {
		this.before = before;
		this.after = after;
		this.pathRainbowBeginColor = pathRainbowBeginColor;
		this.pathRainbowEndColor = pathRainbowEndColor;
	}

----------------------------------------
	public SeparatorBorder(int height, Color beginColor, Color endColor, GradientStyle gradientStyle, Position position) {
		this.borderWidth = height;
		this.beginColor = beginColor;
		this.endColor = endColor;
		this.gradientStyle = gradientStyle;
		this.position = position;
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830692
source/net/filebot/web/OpenSubtitlesXmlRpc.java 361 367
source/net/filebot/util/SystemProperty.java 32 38
----------------------------------------
	protected URL getXmlRpcUrl() {
		try {
			return new URL(System.getProperty("net.filebot.OpenSubtitlesXmlRpc.url", "https://api.opensubtitles.org/xml-rpc"));
		} catch (MalformedURLException e) {
			throw new RuntimeException(e);
		}
	}

----------------------------------------
		if (prop != null && prop.length() > 0) {
			try {
				return valueFunction.apply(prop);
			} catch (Exception e) {
				debug.logp(Level.WARNING, "SystemProperty", key, e.toString());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830695
source/net/filebot/util/ui/SimpleLabelProvider.java 52 62
source/net/filebot/util/SystemProperty.java 32 38
----------------------------------------
	private Method findAnyMethod(Class<T> type, String... names) {
		for (String name : names) {
			try {
				return type.getMethod(name);
			} catch (NoSuchMethodException e) {
				// try next method name
			}
		}

		throw new IllegalArgumentException("Method not found: " + Arrays.toString(names));
	}

----------------------------------------
		if (prop != null && prop.length() > 0) {
			try {
				return valueFunction.apply(prop);
			} catch (Exception e) {
				debug.logp(Level.WARNING, "SystemProperty", key, e.toString());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830700
source/net/filebot/vfs/ZipArchive.java 28 34
source/net/filebot/util/SystemProperty.java 32 38
----------------------------------------
	public Iterator<MemoryFile> iterator() {
		try {
			return extract().iterator();
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
	}

----------------------------------------
		if (prop != null && prop.length() > 0) {
			try {
				return valueFunction.apply(prop);
			} catch (Exception e) {
				debug.logp(Level.WARNING, "SystemProperty", key, e.toString());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830685
source/net/filebot/subtitle/SubtitleReader.java 27 33
source/net/filebot/util/SystemProperty.java 32 38
----------------------------------------
		while (current == null && scanner.hasNextLine()) {
			try {
				current = readNext();
			} catch (Exception e) {
				debug.warning(format("%s: %s", getFormatName(), e.getMessage())); // log and ignore
			}
		}

----------------------------------------
		if (prop != null && prop.length() > 0) {
			try {
				return valueFunction.apply(prop);
			} catch (Exception e) {
				debug.logp(Level.WARNING, "SystemProperty", key, e.toString());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830698
source/net/filebot/util/ui/SimpleLabelProvider.java 65 71
source/net/filebot/util/SystemProperty.java 32 38
----------------------------------------
	public String getText(T value) {
		try {
			return (String) getTextMethod.invoke(value);
		} catch (Exception e) {
			throw new RuntimeException(e);
		}
	}

----------------------------------------
		if (prop != null && prop.length() > 0) {
			try {
				return valueFunction.apply(prop);
			} catch (Exception e) {
				debug.logp(Level.WARNING, "SystemProperty", key, e.toString());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830693
source/net/filebot/hash/Ed2kHash.java 16 22
source/net/filebot/util/SystemProperty.java 32 38
----------------------------------------
	public Ed2kHash() {
		try {
			this.ed2k = new Edonkey();
		} catch (NoSuchAlgorithmException e) {
			throw new RuntimeException(e);
		}
	}

----------------------------------------
		if (prop != null && prop.length() > 0) {
			try {
				return valueFunction.apply(prop);
			} catch (Exception e) {
				debug.logp(Level.WARNING, "SystemProperty", key, e.toString());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830687
source/net/filebot/util/ui/SimpleLabelProvider.java 74 80
source/net/filebot/util/SystemProperty.java 32 38
----------------------------------------
	public Icon getIcon(T value) {
		try {
			return (Icon) getIconMethod.invoke(value);
		} catch (Exception e) {
			throw new RuntimeException(e);
		}
	}

----------------------------------------
		if (prop != null && prop.length() > 0) {
			try {
				return valueFunction.apply(prop);
			} catch (Exception e) {
				debug.logp(Level.WARNING, "SystemProperty", key, e.toString());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830690
source/net/filebot/Settings.java 30 36
source/net/filebot/util/SystemProperty.java 32 38
----------------------------------------
	public static int getApplicationRevisionNumber() {
		try {
			return Integer.parseInt(getApplicationProperty("application.revision"));
		} catch (Exception e) {
			return 0;
		}
	}

----------------------------------------
		if (prop != null && prop.length() > 0) {
			try {
				return valueFunction.apply(prop);
			} catch (Exception e) {
				debug.logp(Level.WARNING, "SystemProperty", key, e.toString());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830697
source/net/filebot/web/OpenSubtitlesXmlRpc.java 335 341
source/net/filebot/util/SystemProperty.java 32 38
----------------------------------------
				public void parse(InputStream input) throws XmlRpcException {
					try {
						super.parse(new GZIPInputStream(input));
					} catch (IOException e) {
						throw new XmlRpcException(e.getMessage(), e);
					}
				};

----------------------------------------
		if (prop != null && prop.length() > 0) {
			try {
				return valueFunction.apply(prop);
			} catch (Exception e) {
				debug.logp(Level.WARNING, "SystemProperty", key, e.toString());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830686
source/net/filebot/Settings.java 44 50
source/net/filebot/util/SystemProperty.java 32 38
----------------------------------------
		if (isAppStore()) {
			try {
				return bundle.getString("apikey.appstore." + name);
			} catch (MissingResourceException e) {
				// use default value
			}
		}

----------------------------------------
		if (prop != null && prop.length() > 0) {
			try {
				return valueFunction.apply(prop);
			} catch (Exception e) {
				debug.logp(Level.WARNING, "SystemProperty", key, e.toString());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830691
source/net/filebot/similarity/CrossPropertyMetric.java 45 51
source/net/filebot/util/SystemProperty.java 32 38
----------------------------------------
		for (String k : keys) {
			try {
				feedback += metric.getSimilarity(m1.get(k), m2.get(k));
			} catch (Exception e) {
				// ignore
			}
		}

----------------------------------------
		if (prop != null && prop.length() > 0) {
			try {
				return valueFunction.apply(prop);
			} catch (Exception e) {
				debug.logp(Level.WARNING, "SystemProperty", key, e.toString());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830696
source/net/filebot/ui/list/ListItem.java 27 33
source/net/filebot/util/SystemProperty.java 32 38
----------------------------------------
		if (value == null) {
			try {
				value = format.format(bindings);
			} catch (Exception e) {
				value = e;
			}
		}

----------------------------------------
		if (prop != null && prop.length() > 0) {
			try {
				return valueFunction.apply(prop);
			} catch (Exception e) {
				debug.logp(Level.WARNING, "SystemProperty", key, e.toString());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830701
source/net/filebot/util/prefs/FilePreferences.java 68 74
source/net/filebot/util/SystemProperty.java 32 38
----------------------------------------
	protected void syncSpi() throws BackingStoreException {
		try {
			store.sync();
		} catch (Exception e) {
			throw new BackingStoreException(e);
		}
	}

----------------------------------------
		if (prop != null && prop.length() > 0) {
			try {
				return valueFunction.apply(prop);
			} catch (Exception e) {
				debug.logp(Level.WARNING, "SystemProperty", key, e.toString());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830688
source/net/filebot/hash/MessageDigestHash.java 15 21
source/net/filebot/util/SystemProperty.java 32 38
----------------------------------------
	public MessageDigestHash(String algorithm) {
		try {
			this.md = MessageDigest.getInstance(algorithm);
		} catch (NoSuchAlgorithmException e) {
			throw new IllegalArgumentException(e);
		}
	}

----------------------------------------
		if (prop != null && prop.length() > 0) {
			try {
				return valueFunction.apply(prop);
			} catch (Exception e) {
				debug.logp(Level.WARNING, "SystemProperty", key, e.toString());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830684
source/net/filebot/hash/VerificationFileReader.java 69 76
source/net/filebot/util/SystemProperty.java 32 38
----------------------------------------
			if (!isComment(line)) {
				try {
					entry = format.parseObject(line);
				} catch (ParseException e) {
					// log and ignore
					debug.warning(format("Illegal format on line %d: %s", lineNumber, line));
				}
			}

----------------------------------------
		if (prop != null && prop.length() > 0) {
			try {
				return valueFunction.apply(prop);
			} catch (Exception e) {
				debug.logp(Level.WARNING, "SystemProperty", key, e.toString());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830689
source/net/filebot/util/ui/SimpleLabelProvider.java 53 59
source/net/filebot/util/SystemProperty.java 32 38
----------------------------------------
		for (String name : names) {
			try {
				return type.getMethod(name);
			} catch (NoSuchMethodException e) {
				// try next method name
			}
		}

----------------------------------------
		if (prop != null && prop.length() > 0) {
			try {
				return valueFunction.apply(prop);
			} catch (Exception e) {
				debug.logp(Level.WARNING, "SystemProperty", key, e.toString());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830694
source/net/filebot/win/WinAppUtilities.java 13 19
source/net/filebot/util/SystemProperty.java 32 38
----------------------------------------
	public static void setAppUserModelID(String appID) {
		try {
			Shell32.INSTANCE.SetCurrentProcessExplicitAppUserModelID(new WString(appID));
		} catch (Throwable t) {
			debug.log(Level.WARNING, t.getMessage(), t);
		}
	}

----------------------------------------
		if (prop != null && prop.length() > 0) {
			try {
				return valueFunction.apply(prop);
			} catch (Exception e) {
				debug.logp(Level.WARNING, "SystemProperty", key, e.toString());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830699
source/net/filebot/util/prefs/FilePreferences.java 83 89
source/net/filebot/util/SystemProperty.java 32 38
----------------------------------------
	protected void flushSpi() throws BackingStoreException {
		try {
			store.flush();
		} catch (Exception e) {
			throw new BackingStoreException(e);
		}
	}

----------------------------------------
		if (prop != null && prop.length() > 0) {
			try {
				return valueFunction.apply(prop);
			} catch (Exception e) {
				debug.logp(Level.WARNING, "SystemProperty", key, e.toString());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830683
source/net/filebot/ui/rename/HighlightListCellRenderer.java 61 68
source/net/filebot/util/SystemProperty.java 32 38
----------------------------------------
		while (matcher.find()) {
			try {
				textComponent.getHighlighter().addHighlight(matcher.start(0), matcher.end(0), highlightPainter);
			} catch (BadLocationException e) {
				// should not happen
				debug.log(Level.SEVERE, e.getMessage(), e);
			}
		}

----------------------------------------
		if (prop != null && prop.length() > 0) {
			try {
				return valueFunction.apply(prop);
			} catch (Exception e) {
				debug.logp(Level.WARNING, "SystemProperty", key, e.toString());
			}
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830707
source/net/filebot/hash/VerificationFileWriter.java 25 31
source/net/filebot/util/ui/ColorTintImageFilter.java 15 20
----------------------------------------
	public VerificationFileWriter(PrintWriter out, VerificationFormat format, Charset charset) {
		this.out = out;
		this.format = format;

		// start by printing the file header
		writeHeader(charset);
	}

----------------------------------------
	public ColorTintImageFilter(Color color, float intensity) {
		this.color = color;
		this.intensity = intensity;

		canFilterIndexColorModel = true;
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830706
source/net/filebot/web/SubtitleSearchResult.java 34 39
source/net/filebot/util/ui/ColorTintImageFilter.java 15 20
----------------------------------------
	public SubtitleSearchResult(String name, String[] aliasNames, int year, int imdbId, int tmdbId, Locale locale, Kind kind, int score) {
		super(name, aliasNames, year, imdbId, tmdbId, locale);

		this.kind = kind;
		this.score = score;
	}

----------------------------------------
	public ColorTintImageFilter(Color color, float intensity) {
		this.color = color;
		this.intensity = intensity;

		canFilterIndexColorModel = true;
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830708
source/net/filebot/Settings.java 110 117
source/net/filebot/util/ui/FancyTreeCellRenderer.java 80 88
----------------------------------------
	private static boolean isApplicationDeployment(String... ids) {
		String current = getApplicationDeployment();
		for (String id : ids) {
			if (current != null && current.equals(id))
				return true;
		}
		return false;
	}

----------------------------------------
	protected int getLabelStart() {
		Icon icon = getIcon();

		if ((icon != null) && (getText() != null)) {
			return icon.getIconWidth() + Math.max(0, getIconTextGap() - 1);
		}

		return 0;
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830709
source/net/filebot/util/ui/ProgressIndicator.java 45 61
source/net/filebot/util/ui/ProgressIndicator.java 119 132
----------------------------------------
	public ProgressIndicator() {
		setPreferredSize(baseSize);

		addComponentListener(new ComponentAdapter() {

			@Override
			public void componentShown(ComponentEvent e) {
				startAnimation();
			}


			@Override
			public void componentHidden(ComponentEvent e) {
				stopAnimation();
			}
		});
	}

----------------------------------------
	public void startAnimation() {
		if (updateTimer == null) {
			updateTimer = new Timer(20, new ActionListener() {

				@Override
				public void actionPerformed(ActionEvent e) {
					animateOnce();
					repaint();
				}
			});

			updateTimer.start();
		}
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
28917579
source/net/filebot/cli/FolderWatchService.java 130 135
source/net/filebot/util/ui/ProgressIndicator.java 119 132
----------------------------------------
			protected void processEvents(List<WatchEvent<?>> events) {
				synchronized (commitSet) {
					resetCommitTimer();
					super.processEvents(events);
				}
			}

----------------------------------------
	public void startAnimation() {
		if (updateTimer == null) {
			updateTimer = new Timer(20, new ActionListener() {

				@Override
				public void actionPerformed(ActionEvent e) {
					animateOnce();
					repaint();
				}
			});

			updateTimer.start();
		}
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830716
source/net/filebot/ui/rename/RenameListCellRenderer.java 62 67
source/net/filebot/util/ByteBufferOutputStream.java 79 86
----------------------------------------
	public Dimension getPreferredSize() {
		// force equals cell height for both lists
		Dimension dim = super.getPreferredSize();
		dim.height = 28;
		return dim;
	}

----------------------------------------
	public ByteBuffer getByteBuffer() {
		ByteBuffer result = buffer.duplicate();

		// flip buffer so it can be read
		result.flip();

		return result;
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830717
source/net/filebot/util/ByteBufferOutputStream.java 79 86
source/net/filebot/util/TemporaryFolder.java 75 81
----------------------------------------
	public ByteBuffer getByteBuffer() {
		ByteBuffer result = buffer.duplicate();

		// flip buffer so it can be read
		result.flip();

		return result;
	}

----------------------------------------
	public File createFile(String name) throws IOException {
		// if the directory does not exist it will be created
		File file = new File(getFolder(), name);
		file.createNewFile();

		return file;
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830719
source/net/filebot/format/ExpressionFilter.java 49 55
source/net/filebot/util/ByteBufferOutputStream.java 98 103
----------------------------------------
		try {
			// evaluate user script
			Object value = compiledExpression.eval(context);

			// value as boolean
			return DefaultTypeTransformation.castToBoolean(value);
		} catch (Throwable e) {

----------------------------------------
	public int transferFrom(ReadableByteChannel channel) throws IOException {
		// make sure buffer is not at its limit
		ensureCapacity(buffer.position() + 1);

		return channel.read(buffer);
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830718
source/net/filebot/ui/filter/AttributeTool.java 96 101
source/net/filebot/util/ByteBufferOutputStream.java 98 103
----------------------------------------
		public boolean addRow(Object... row) {
			if (row.length != getColumnCount())
				return false;

			return rows.add(row);
		}

----------------------------------------
	public int transferFrom(ReadableByteChannel channel) throws IOException {
		// make sure buffer is not at its limit
		ensureCapacity(buffer.position() + 1);

		return channel.read(buffer);
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830725
source/net/filebot/ui/rename/RenameModel.java 71 76
source/net/filebot/util/DownloadTask.java 101 106
----------------------------------------
	public void setPreserveExtension(boolean preserveExtension) {
		this.preserveExtension = preserveExtension;

		// update formatted names
		names.refresh();
	}

----------------------------------------
		} finally {
			in.close();

			// download either finished or an exception is thrown
			setDownloadState(DownloadState.DONE);
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830726
source/net/filebot/util/DownloadTask.java 101 106
source/net/filebot/ui/rename/ScrollPaneSynchronizer.java 33 38
----------------------------------------
		} finally {
			in.close();

			// download either finished or an exception is thrown
			setDownloadState(DownloadState.DONE);
		}

----------------------------------------
				public void actionPerformed(ActionEvent e) {
					updatePreferredSize();

					// fire only once
					timer.stop();
				}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830740
source/net/filebot/ui/rename/RenameModel.java 71 76
source/net/filebot/ui/rename/ScrollPaneSynchronizer.java 33 38
----------------------------------------
	public void setPreserveExtension(boolean preserveExtension) {
		this.preserveExtension = preserveExtension;

		// update formatted names
		names.refresh();
	}

----------------------------------------
				public void actionPerformed(ActionEvent e) {
					updatePreferredSize();

					// fire only once
					timer.stop();
				}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830727
source/net/filebot/util/DownloadTask.java 101 106
source/net/filebot/ui/subtitle/SubtitlePackage.java 120 125
----------------------------------------
		} finally {
			in.close();

			// download either finished or an exception is thrown
			setDownloadState(DownloadState.DONE);
		}

----------------------------------------
		public void start() {
			setPhase(Phase.WAITING);

			// enqueue worker
			execute();
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830742
source/net/filebot/ui/rename/ScrollPaneSynchronizer.java 33 38
source/net/filebot/ui/subtitle/SubtitlePackage.java 120 125
----------------------------------------
				public void actionPerformed(ActionEvent e) {
					updatePreferredSize();

					// fire only once
					timer.stop();
				}

----------------------------------------
		public void start() {
			setPhase(Phase.WAITING);

			// enqueue worker
			execute();
		}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830728
source/net/filebot/format/AssociativeScriptObject.java 101 115
source/net/filebot/util/EntryList.java 54 67
----------------------------------------
		public Set<Entry<Object, Object>> entrySet() {
			return new AbstractSet<Entry<Object, Object>>() {

				@Override
				public Iterator<Entry<Object, Object>> iterator() {
					return (Iterator) lookup.values().iterator();
				}


				@Override
				public int size() {
					return lookup.size();
				}
			};
		}

----------------------------------------
	public Set<K> keySet() {
		return new AbstractSet<K>() {

			@Override
			public Iterator<K> iterator() {
				return (Iterator<K>) keys.iterator();
			}

			@Override
			public int size() {
				return keys.size();
			}
		};
	}

----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
94
22830729
source/net/filebot/cli/FolderWatchService.java 74 81
source/net/filebot/util/TemporaryFolder.java 149 157
----------------------------------------
		synchronized (commitSet) {
			for (File it : commitSet) {
				if (it.isFile()) {
					files.add(it);
				}
			}
			commitSet.clear();
		}

----------------------------------------
	private void delete(File file) {
		if (file.isDirectory()) {
			for (File entry : getChildren(file)) {
				delete(entry);
			}
		}

		file.delete();
	}

----------------------------------------
